ã“
ZC:\Users\manimaran.venkat\Documents\Backup\AspireOverflow\Controllers\ArticleController.cs
	namespace		 	
AspireOverflow		
 
.		 
Controllers		 $
{		$ %
[

 
ApiController

 
]

 
[ 
	Authorize 

]
 
[ 
Route 
( 
$str 
) 
]  
public 
class 
ArticleController 
:  
BaseController! /
{ 
private 
readonly 
ILogger 
< 
ArticleController .
>. /
_logger0 7
;7 8
private 
readonly 
IArticleService $
_articleService% 4
;4 5
public 

ArticleController 
( 
ILogger $
<$ %
ArticleController% 6
>6 7
logger8 >
,> ?
IArticleService@ O
articleServiceP ^
)^ _
{ 
_logger 
= 
logger 
; 
_articleService 
= 
articleService (
;( )
} 
[22 
HttpPost22 
]22 
public33 

async33 
Task33 
<33 
ActionResult33 "
>33" #
CreateArticle33$ 1
(331 2
Article332 9
article33: A
)33A B
{44 
if55 

(55 
article55 
==55 
null55 
)55 
return55 #

BadRequest55$ .
(55. /
Message55/ 6
(556 7
$str557 T
)55T U
)55U V
;55V W
try66 
{77 	
article88 
.88 
	CreatedBy88 
=88 
GetCurrentUser88  .
(88. /
)88/ 0
.880 1
UserId881 7
;887 8
return99 
_articleService99 "
.99" #
CreateArticle99# 0
(990 1
article991 8
)998 9
?99: ;
await99< A
Task99B F
.99F G

FromResult99G Q
(99Q R
Ok99R T
(99T U
Message99U \
(99\ ]
$str99] s
)99s t
)99t u
)99u v
:99w x

BadRequest	99y É
(
99É Ñ
Message
99Ñ ã
(
99ã å
$"
99å é
$str
99é ±
"
99± ≤
,
99≤ ≥
article
99¥ ª
)
99ª º
)
99º Ω
;
99Ω æ
}:: 	
catch;; 
(;; 
ValidationException;; "
	exception;;# ,
);;, -
{<< 	
_logger>> 
.>> 
LogError>> 
(>> 
HelperService>> *
.>>* +
LoggerMessage>>+ 8
(>>8 9
$str>>9 L
,>>L M
$str>>N n
,>>n o
	exception>>p y
,>>y z
article	>>{ Ç
)
>>Ç É
)
>>É Ñ
;
>>Ñ Ö
return?? 

BadRequest?? 
(?? 
Message?? %
(??% &
	exception??& /
.??/ 0
Message??0 7
,??7 8
article??9 @
)??@ A
)??A B
;??B C
}@@ 	
catchAA 
(AA 
	ExceptionAA 
	exceptionAA "
)AA" #
{BB 	
_loggerCC 
.CC 
LogErrorCC 
(CC 
HelperServiceCC *
.CC* +
LoggerMessageCC+ 8
(CC8 9
$strCC9 L
,CCL M
$strCCN n
,CCn o
	exceptionCCp y
,CCy z
article	CC{ Ç
)
CCÇ É
)
CCÉ Ñ
;
CCÑ Ö
returnDD 
ProblemDD 
(DD 
$"DD 
$strDD A
{DDA B
HelperServiceDDB O
.DDO P
PropertyListDDP \
(DD\ ]
articleDD] d
)DDd e
}DDe f
"DDf g
)DDg h
;DDh i
}EE 	
}FF 
[aa 
HttpPostaa 
]aa 
publiccc 

asynccc 
Taskcc 
<cc 
ActionResultcc "
>cc" # 
CreatePrivateArticlecc$ 8
(cc8 9
PrivateArticleDtocc9 J
privateArticleDtoccK \
)cc\ ]
{dd 
ifee 

(ee 
privateArticleDtoee 
==ee  
nullee! %
)ee% &
returnee' -

BadRequestee. 8
(ee8 9
Messageee9 @
(ee@ A
$streeA ^
)ee^ _
)ee_ `
;ee` a
tryff 
{gg 	
privateArticleDtohh 
.hh 
articlehh &
!hh& '
.hh' (
	CreatedByhh( 1
=hh2 3
GetCurrentUserhh4 B
(hhB C
)hhC D
.hhD E
UserIdhhE K
;hhK L
returnii 
_articleServiceii "
.ii" #
CreateArticleii# 0
(ii0 1
privateArticleDtoii1 B
.iiB C
articleiiC J
,iiJ K
privateArticleDtoiiL ]
.ii] ^
SharedUsersIdii^ k
)iik l
?iim n
awaitiio t
Taskiiu y
.iiy z

FromResult	iiz Ñ
(
iiÑ Ö
Ok
iiÖ á
(
iiá à
Message
iià è
(
iiè ê
$str
iiê ¶
)
ii¶ ß
)
iiß ®
)
ii® ©
:
ii™ ´

BadRequest
ii¨ ∂
(
ii∂ ∑
Message
ii∑ æ
(
iiæ ø
$"
iiø ¡
$str
ii¡ Ï
"
iiÏ Ì
,
iiÌ Ó
privateArticleDto
iiÔ Ä
)
iiÄ Å
)
iiÅ Ç
;
iiÇ É
}jj 	
catchkk 
(kk 
ValidationExceptionkk "
	exceptionkk# ,
)kk, -
{ll 	
_loggernn 
.nn 
LogErrornn 
(nn 
HelperServicenn *
.nn* +
LoggerMessagenn+ 8
(nn8 9
$strnn9 L
,nnL M
$strnnN 
,	nn Ä
	exception
nnÅ ä
,
nnä ã
privateArticleDto
nnå ù
)
nnù û
)
nnû ü
;
nnü †
returnoo 

BadRequestoo 
(oo 
Messageoo %
(oo% &
	exceptionoo& /
.oo/ 0
Messageoo0 7
,oo7 8
privateArticleDtooo9 J
)ooJ K
)ooK L
;ooL M
}pp 	
catchqq 
(qq 
	Exceptionqq 
	exceptionqq "
)qq" #
{rr 	
_loggerss 
.ss 
LogErrorss 
(ss 
HelperServicess *
.ss* +
LoggerMessagess+ 8
(ss8 9
$strss9 L
,ssL M
$strssN 
,	ss Ä
	exception
ssÅ ä
,
ssä ã
privateArticleDto
sså ù
)
ssù û
)
ssû ü
;
ssü †
returntt 
Problemtt 
(tt 
$"tt 
$strtt G
"ttG H
)ttH I
;ttI J
}uu 	
}vv 
[
ëë 
HttpPost
ëë 
]
ëë 
public
íí 

async
íí 
Task
íí 
<
íí 
ActionResult
íí "
>
íí" #
CreateComment
íí$ 1
(
íí1 2
ArticleComment
íí2 @
comment
ííA H
)
ííH I
{
ìì 
if
ïï 

(
ïï 
comment
ïï 
==
ïï 
null
ïï 
)
ïï 
return
ïï #

BadRequest
ïï$ .
(
ïï. /
Message
ïï/ 6
(
ïï6 7
$str
ïï7 T
)
ïïT U
)
ïïU V
;
ïïV W
try
ññ 
{
óó 	
comment
òò 
.
òò 
UserId
òò 
=
òò 
GetCurrentUser
òò +
(
òò+ ,
)
òò, -
.
òò- .
UserId
òò. 4
;
òò4 5
return
ôô 
_articleService
ôô "
.
ôô" #
CreateComment
ôô# 0
(
ôô0 1
comment
ôô1 8
)
ôô8 9
?
ôô: ;
await
ôô< A
Task
ôôB F
.
ôôF G

FromResult
ôôG Q
(
ôôQ R
Ok
ôôR T
(
ôôT U
$strôôU Ä
)ôôÄ Å
)ôôÅ Ç
:ôôÉ Ñ

BadRequestôôÖ è
(ôôè ê
Messageôôê ó
(ôôó ò
$"ôôò ö
$strôôö æ
{ôôæ ø
HelperServiceôôø Ã
.ôôÃ Õ
PropertyListôôÕ Ÿ
(ôôŸ ⁄
commentôô⁄ ·
)ôô· ‚
}ôô‚ „
"ôô„ ‰
)ôô‰ Â
)ôôÂ Ê
;ôôÊ Á
}
öö 	
catch
õõ 
(
õõ !
ValidationException
õõ "
	exception
õõ# ,
)
õõ, -
{
úú 	
_logger
ùù 
.
ùù 
LogError
ùù 
(
ùù 
HelperService
ùù *
.
ùù* +
LoggerMessage
ùù+ 8
(
ùù8 9
$str
ùù9 L
,
ùùL M
$str
ùùN u
,
ùùu v
	exceptionùùw Ä
,ùùÄ Å
commentùùÇ â
)ùùâ ä
)ùùä ã
;ùùã å
return
ûû 

BadRequest
ûû 
(
ûû 
Message
ûû %
(
ûû% &
	exception
ûû& /
.
ûû/ 0
Message
ûû0 7
,
ûû7 8
comment
ûû9 @
)
ûû@ A
)
ûûA B
;
ûûB C
}
üü 	
catch
†† 
(
†† 
	Exception
†† 
	exception
†† "
)
††" #
{
°° 	
_logger
¢¢ 
.
¢¢ 
LogError
¢¢ 
(
¢¢ 
HelperService
¢¢ *
.
¢¢* +
LoggerMessage
¢¢+ 8
(
¢¢8 9
$str
¢¢9 L
,
¢¢L M
$str
¢¢N u
,
¢¢u v
	exception¢¢w Ä
,¢¢Ä Å
comment¢¢Ç â
)¢¢â ä
)¢¢ä ã
;¢¢ã å
return
££ 
Problem
££ 
(
££ 
$"
££ 
$str
££ A
{
££A B
HelperService
££B O
.
££O P
PropertyList
££P \
(
££\ ]
comment
££] d
)
££d e
}
££e f
"
££f g
)
££g h
;
££h i
}
§§ 	
}
¶¶ 
[
ΩΩ 
HttpPost
ΩΩ 
]
ΩΩ 
public
ææ 

async
ææ 
Task
ææ 
<
ææ 
ActionResult
ææ "
>
ææ" #
AddLikeToArticle
ææ$ 4
(
ææ4 5
ArticleLike
ææ5 @
Like
ææA E
)
ææE F
{
øø 
if
¿¿ 

(
¿¿ 
Like
¿¿ 
==
¿¿ 
null
¿¿ 
)
¿¿ 
return
¿¿  

BadRequest
¿¿! +
(
¿¿+ ,
$str
¿¿, C
)
¿¿C D
;
¿¿D E
if
¡¡ 

(
¡¡ 
Like
¡¡ 
.
¡¡ 
	ArticleId
¡¡ 
<=
¡¡ 
$num
¡¡ 
)
¡¡  
return
¡¡! '

BadRequest
¡¡( 2
(
¡¡2 3
Message
¡¡3 :
(
¡¡: ;
$str
¡¡; ^
)
¡¡^ _
)
¡¡_ `
;
¡¡` a
Like
¬¬ 
.
¬¬ 
UserId
¬¬ 
=
¬¬ 
GetCurrentUser
¬¬ $
(
¬¬$ %
)
¬¬% &
.
¬¬& '
UserId
¬¬' -
;
¬¬- .
try
√√ 
{
ƒƒ 	
if
≈≈ 
(
≈≈ 
!
≈≈ 
_articleService
≈≈  
.
≈≈  !
AddLikeToArticle
≈≈! 1
(
≈≈1 2
Like
≈≈2 6
)
≈≈6 7
)
≈≈7 8

BadRequest
≈≈9 C
(
≈≈C D
Message
≈≈D K
(
≈≈K L
$str
≈≈L y
)
≈≈y z
)
≈≈z {
;
≈≈{ |
var
∆∆ 
Result
∆∆ 
=
∆∆ 
new
∆∆ 
{
∆∆ 
message
∆∆ &
=
∆∆' (
$str
∆∆) M
,
∆∆M N

LikesCount
∆∆O Y
=
∆∆Z [
_articleService
∆∆\ k
.
∆∆k l
GetLikesCount
∆∆l y
(
∆∆y z
Like
∆∆z ~
.
∆∆~ 
	ArticleId∆∆ à
)∆∆à â
}∆∆ä ã
;∆∆ã å
return
«« 
await
«« 
Task
«« 
.
«« 

FromResult
«« (
(
««( )
Ok
««) +
(
««+ ,
Result
««, 2
)
««2 3
)
««3 4
;
««4 5
}
»» 	
catch
…… 
(
…… 
ArgumentException
……  
	exception
……! *
)
……* +
{
   	
_logger
ÀÀ 
.
ÀÀ 
LogError
ÀÀ 
(
ÀÀ 
HelperService
ÀÀ *
.
ÀÀ* +
LoggerMessage
ÀÀ+ 8
(
ÀÀ8 9
$str
ÀÀ9 L
,
ÀÀL M
$str
ÀÀN o
,
ÀÀo p
	exception
ÀÀq z
,
ÀÀz {
LikeÀÀ| Ä
)ÀÀÄ Å
)ÀÀÅ Ç
;ÀÀÇ É
return
ÃÃ 
Problem
ÃÃ 
(
ÃÃ 
$"
ÃÃ 
{
ÃÃ 
	exception
ÃÃ '
.
ÃÃ' (
Message
ÃÃ( /
}
ÃÃ/ 0
"
ÃÃ0 1
)
ÃÃ1 2
;
ÃÃ2 3
}
ÕÕ 	
catch
ŒŒ 
(
ŒŒ 
	Exception
ŒŒ 
	exception
ŒŒ "
)
ŒŒ" #
{
œœ 	
_logger
–– 
.
–– 
LogError
–– 
(
–– 
HelperService
–– *
.
––* +
LoggerMessage
––+ 8
(
––8 9
$str
––9 L
,
––L M
$str
––N o
,
––o p
	exception
––q z
,
––z {
Like––| Ä
)––Ä Å
)––Å Ç
;––Ç É
return
—— 
Problem
—— 
(
—— 
$"
—— 
$str
—— @
{
——@ A
Like
——A E
}
——E F
"
——F G
)
——G H
;
——H I
}
““ 	
}
”” 
[
ÔÔ 
HttpPut
ÔÔ 
]
ÔÔ 
public
ÒÒ 

async
ÒÒ 
Task
ÒÒ 
<
ÒÒ 
ActionResult
ÒÒ "
>
ÒÒ" #
UpdateArticle
ÒÒ$ 1
(
ÒÒ1 2
Article
ÒÒ2 9
article
ÒÒ: A
)
ÒÒA B
{
ÚÚ 
if
ÛÛ 

(
ÛÛ 
article
ÛÛ 
==
ÛÛ 
null
ÛÛ 
)
ÛÛ 
return
ÛÛ #

BadRequest
ÛÛ$ .
(
ÛÛ. /
Message
ÛÛ/ 6
(
ÛÛ6 7
$str
ÛÛ7 N
)
ÛÛN O
)
ÛÛO P
;
ÛÛP Q
try
ÙÙ 
{
ıı 	
return
ˆˆ 
_articleService
ˆˆ "
.
ˆˆ" #
UpdateArticle
ˆˆ# 0
(
ˆˆ0 1
article
ˆˆ1 8
,
ˆˆ8 9
GetCurrentUser
ˆˆ: H
(
ˆˆH I
)
ˆˆI J
.
ˆˆJ K
UserId
ˆˆK Q
)
ˆˆQ R
?
ˆˆS T
await
ˆˆU Z
Task
ˆˆ[ _
.
ˆˆ_ `

FromResult
ˆˆ` j
(
ˆˆj k
Ok
ˆˆk m
(
ˆˆm n
Message
ˆˆn u
(
ˆˆu v
$strˆˆv ò
)ˆˆò ô
)ˆˆô ö
)ˆˆö õ
:ˆˆú ù

BadRequestˆˆû ®
(ˆˆ® ©
Messageˆˆ© ∞
(ˆˆ∞ ±
$strˆˆ± €
)ˆˆ€ ‹
)ˆˆ‹ ›
;ˆˆ› ﬁ
}
˜˜ 	
catch
¯¯ 
(
¯¯ !
ValidationException
¯¯ "
	exception
¯¯# ,
)
¯¯, -
{
˘˘ 	
_logger
˙˙ 
.
˙˙ 
LogError
˙˙ 
(
˙˙ 
HelperService
˙˙ *
.
˙˙* +
LoggerMessage
˙˙+ 8
(
˙˙8 9
$str
˙˙9 L
,
˙˙L M
$str
˙˙N n
,
˙˙n o
	exception
˙˙p y
,
˙˙y z
article˙˙{ Ç
)˙˙Ç É
)˙˙É Ñ
;˙˙Ñ Ö
return
˚˚ 

BadRequest
˚˚ 
(
˚˚ 
Message
˚˚ %
(
˚˚% &
$"
˚˚& (
{
˚˚( )
	exception
˚˚) 2
.
˚˚2 3
Message
˚˚3 :
}
˚˚: ;
"
˚˚; <
,
˚˚< =
article
˚˚> E
)
˚˚E F
)
˚˚F G
;
˚˚G H
}
¸¸ 	
catch
˝˝ 
(
˝˝ 
	Exception
˝˝ 
	exception
˝˝ "
)
˝˝" #
{
˛˛ 	
_logger
ˇˇ 
.
ˇˇ 
LogError
ˇˇ 
(
ˇˇ 
HelperService
ˇˇ *
.
ˇˇ* +
LoggerMessage
ˇˇ+ 8
(
ˇˇ8 9
$str
ˇˇ9 L
,
ˇˇL M
$str
ˇˇN n
,
ˇˇn o
	exception
ˇˇp y
,
ˇˇy z
articleˇˇ{ Ç
)ˇˇÇ É
)ˇˇÉ Ñ
;ˇˇÑ Ö
return
ÄÄ 
Problem
ÄÄ 
(
ÄÄ 
$"
ÄÄ 
$str
ÄÄ A
{
ÄÄA B
HelperService
ÄÄB O
.
ÄÄO P
PropertyList
ÄÄP \
(
ÄÄ\ ]
article
ÄÄ] d
)
ÄÄd e
}
ÄÄe f
"
ÄÄf g
)
ÄÄg h
;
ÄÄh i
}
ÅÅ 	
}
ÉÉ 
[
ùù 
	HttpPatch
ùù 
]
ùù 
public
ûû 

async
ûû 
Task
ûû 
<
ûû 
ActionResult
ûû "
>
ûû" #!
ChangeArticleStatus
ûû$ 7
(
ûû7 8
int
ûû8 ;
	ArticleId
ûû< E
,
ûûE F
int
ûûG J
ArticleStatusID
ûûK Z
)
ûûZ [
{
üü 
if
†† 

(
†† 
	ArticleId
†† 
<=
†† 
$num
†† 
||
†† 
ArticleStatusID
†† -
<=
††. 0
$num
††1 2
||
††3 5
ArticleStatusID
††6 E
>
††F G
$num
††H I
)
††I J
return
††K Q

BadRequest
††R \
(
††\ ]
Message
††] d
(
††d e
$str††e ”
)††” ‘
)††‘ ’
;††’ ÷
if
°° 

(
°° 
ArticleStatusID
°° 
>=
°° 
$num
°°  
&&
°°! #
!
°°$ %
GetCurrentUser
°°% 3
(
°°3 4
)
°°4 5
.
°°5 6

IsReviewer
°°6 @
)
°°@ A
return
°°B H

BadRequest
°°I S
(
°°S T
Message
°°T [
(
°°[ \
$str°°\ â
)°°â ä
)°°ä ã
;°°ã å
try
¢¢ 
{
££ 	
return
•• 
_articleService
•• "
.
••" #!
ChangeArticleStatus
••# 6
(
••6 7
	ArticleId
••7 @
,
••@ A
ArticleStatusID
••B Q
,
••Q R
GetCurrentUser
••S a
(
••a b
)
••b c
.
••c d
UserId
••d j
)
••j k
?
••l m
await
••n s
Task
••t x
.
••x y

FromResult••y É
(••É Ñ
Ok••Ñ Ü
(••Ü á
$"••á â
$str••â π
{••π ∫
	ArticleId••∫ √
}••√ ƒ
"••ƒ ≈
)••≈ ∆
)••∆ «
:••» …

BadRequest••  ‘
(••‘ ’
Message••’ ‹
(••‹ ›
$"••› ﬂ
$str••ﬂ ó
{••ó ò
	ArticleId••ò °
}••° ¢
"••¢ £
)••£ §
)••§ •
;••• ¶
}
¶¶ 	
catch
ßß 
(
ßß #
ItemNotFoundException
ßß $
	exception
ßß% .
)
ßß. /
{
®® 	
_logger
©© 
.
©© 
LogError
©© 
(
©© 
HelperService
©© *
.
©©* +
LoggerMessage
©©+ 8
(
©©8 9
$str
©©9 L
,
©©L M
$str©©N á
,©©á à
	exception©©â í
,©©í ì
	ArticleId©©î ù
,©©ù û
ArticleStatusID©©ü Æ
)©©Æ Ø
)©©Ø ∞
;©©∞ ±
return
™™ 
NotFound
™™ 
(
™™ 
$"
™™ 
{
™™ 
	exception
™™ (
.
™™( )
Message
™™) 0
}
™™0 1
"
™™1 2
)
™™2 3
;
™™3 4
}
´´ 	
catch
¨¨ 
(
¨¨ 
	Exception
¨¨ 
	exception
¨¨ "
)
¨¨" #
{
≠≠ 	
_logger
ÆÆ 
.
ÆÆ 
LogError
ÆÆ 
(
ÆÆ 
HelperService
ÆÆ *
.
ÆÆ* +
LoggerMessage
ÆÆ+ 8
(
ÆÆ8 9
$str
ÆÆ9 L
,
ÆÆL M
$strÆÆN á
,ÆÆá à
	exceptionÆÆâ í
,ÆÆí ì
	ArticleIdÆÆî ù
,ÆÆù û
ArticleStatusIDÆÆü Æ
)ÆÆÆ Ø
)ÆÆØ ∞
;ÆÆ∞ ±
return
ØØ 
Problem
ØØ 
(
ØØ 
$"
ØØ 
$str
ØØ V
{
ØØV W
	ArticleId
ØØW `
}
ØØ` a
"
ØØa b
)
ØØb c
;
ØØc d
}
∞∞ 	
}
±± 
[
µµ 

HttpDelete
µµ 
]
µµ 
public
∂∂ 

async
∂∂ 
Task
∂∂ 
<
∂∂ 
ActionResult
∂∂ "
>
∂∂" #&
DeleteArticleByArticleId
∂∂$ <
(
∂∂< =
int
∂∂= @
	ArticleId
∂∂A J
)
∂∂J K
{
∑∑ 
if
∏∏ 

(
∏∏ 
	ArticleId
∏∏ 
<=
∏∏ 
$num
∏∏ 
)
∏∏ 
return
∏∏ "

BadRequest
∏∏# -
(
∏∏- .
Message
∏∏. 5
(
∏∏5 6
$str
∏∏6 Y
)
∏∏Y Z
)
∏∏Z [
;
∏∏[ \
try
ππ 
{
∫∫ 	
return
ªª 
_articleService
ªª "
.
ªª" #&
DeleteArticleByArticleId
ªª# ;
(
ªª; <
	ArticleId
ªª< E
)
ªªE F
?
ªªG H
await
ªªI N
Task
ªªO S
.
ªªS T

FromResult
ªªT ^
(
ªª^ _
Ok
ªª_ a
(
ªªa b
$strªªb ä
)ªªä ã
)ªªã å
:ªªç é

BadRequestªªè ô
(ªªô ö
Messageªªö °
(ªª° ¢
$"ªª¢ §
$strªª§ ÿ
{ªªÿ Ÿ
	ArticleIdªªŸ ‚
}ªª‚ „
$strªª„ ‰
"ªª‰ Â
)ªªÂ Ê
)ªªÊ Á
;ªªÁ Ë
}
ºº 	
catch
ΩΩ 
(
ΩΩ 
ArgumentException
ΩΩ  
	exception
ΩΩ! *
)
ΩΩ* +
{
ææ 	
_logger
øø 
.
øø 
LogError
øø 
(
øø 
HelperService
øø *
.
øø* +
LoggerMessage
øø+ 8
(
øø8 9
$str
øø9 L
,
øøL M
$str
øøN w
,
øøw x
	exceptionøøy Ç
,øøÇ É
	ArticleIdøøÑ ç
)øøç é
)øøé è
;øøè ê
return
¿¿ 
Problem
¿¿ 
(
¿¿ 
$"
¿¿ 
{
¿¿ 
	exception
¿¿ '
.
¿¿' (
Message
¿¿( /
}
¿¿/ 0
"
¿¿0 1
)
¿¿1 2
;
¿¿2 3
}
¡¡ 	
catch
¬¬ 
(
¬¬ 
	Exception
¬¬ 
	exception
¬¬ "
)
¬¬" #
{
√√ 	
_logger
ƒƒ 
.
ƒƒ 
LogError
ƒƒ 
(
ƒƒ 
HelperService
ƒƒ *
.
ƒƒ* +
LoggerMessage
ƒƒ+ 8
(
ƒƒ8 9
$str
ƒƒ9 L
,
ƒƒL M
$str
ƒƒN w
,
ƒƒw x
	exceptionƒƒy Ç
,ƒƒÇ É
	ArticleIdƒƒÑ ç
)ƒƒç é
)ƒƒé è
;ƒƒè ê
return
≈≈ 

BadRequest
≈≈ 
(
≈≈ 
Message
≈≈ %
(
≈≈% &
$"
≈≈& (
$str
≈≈( W
{
≈≈W X
	ArticleId
≈≈X a
}
≈≈a b
"
≈≈b c
)
≈≈c d
)
≈≈d e
;
≈≈e f
}
∆∆ 	
}
«« 
[
›› 
HttpGet
›› 
]
›› 
public
ﬁﬁ 

async
ﬁﬁ 
Task
ﬁﬁ 
<
ﬁﬁ 
ActionResult
ﬁﬁ "
>
ﬁﬁ" #
GetLatestArticles
ﬁﬁ$ 5
(
ﬁﬁ5 6
int
ﬁﬁ6 9
Range
ﬁﬁ: ?
=
ﬁﬁ@ A
$num
ﬁﬁB C
)
ﬁﬁC D
{
ﬂﬂ 
try
‡‡ 
{
·· 	
var
‚‚ 
Articles
‚‚ 
=
‚‚ 
_articleService
‚‚ *
.
‚‚* +
GetLatestArticles
‚‚+ <
(
‚‚< =
)
‚‚= >
.
‚‚> ?
ToList
‚‚? E
(
‚‚E F
)
‚‚F G
;
‚‚G H
if
‰‰ 
(
‰‰ 
Range
‰‰ 
<=
‰‰ 
Articles
‰‰ !
.
‰‰! "
Count
‰‰" '
)
‰‰' (
{
ÂÂ 
Articles
ÊÊ 
=
ÊÊ 
Range
ÊÊ  
>
ÊÊ! "
$num
ÊÊ# $
?
ÊÊ% &
Articles
ÊÊ' /
.
ÊÊ/ 0
GetRange
ÊÊ0 8
(
ÊÊ8 9
$num
ÊÊ9 :
,
ÊÊ: ;
Range
ÊÊ< A
)
ÊÊA B
:
ÊÊC D
Articles
ÊÊE M
;
ÊÊM N
return
ÁÁ 
await
ÁÁ 
Task
ÁÁ !
.
ÁÁ! "

FromResult
ÁÁ" ,
(
ÁÁ, -
Ok
ÁÁ- /
(
ÁÁ/ 0
Articles
ÁÁ0 8
)
ÁÁ8 9
)
ÁÁ9 :
;
ÁÁ: ;
}
ËË 
else
ÈÈ 
return
ÈÈ 

BadRequest
ÈÈ "
(
ÈÈ" #
Message
ÈÈ# *
(
ÈÈ* +
$str
ÈÈ+ A
)
ÈÈA B
)
ÈÈB C
;
ÈÈC D
}
ÎÎ 	
catch
ÏÏ 
(
ÏÏ 
	Exception
ÏÏ 
	exception
ÏÏ "
)
ÏÏ" #
{
ÌÌ 	
_logger
ÓÓ 
.
ÓÓ 
LogError
ÓÓ 
(
ÓÓ 
HelperService
ÓÓ *
.
ÓÓ* +
LoggerMessage
ÓÓ+ 8
(
ÓÓ8 9
$str
ÓÓ9 L
,
ÓÓL M
$str
ÓÓN m
,
ÓÓm n
	exception
ÓÓo x
)
ÓÓx y
)
ÓÓy z
;
ÓÓz {
return
ÔÔ 
Problem
ÔÔ 
(
ÔÔ 
$str
ÔÔ H
)
ÔÔH I
;
ÔÔI J
}
 	
}
ÒÒ 
[
ÜÜ 
HttpGet
ÜÜ 
]
ÜÜ 
public
áá 

async
áá 
Task
áá 
<
áá 
ActionResult
áá "
>
áá" #!
GetTrendingArticles
áá$ 7
(
áá7 8
int
áá8 ;
Range
áá< A
=
ááB C
$num
ááD E
)
ááE F
{
àà 
try
ââ 
{
ää 	
var
ãã 
Articles
ãã 
=
ãã 
_articleService
ãã *
.
ãã* +!
GetTrendingArticles
ãã+ >
(
ãã> ?
)
ãã? @
.
ãã@ A
ToList
ããA G
(
ããG H
)
ããH I
;
ããI J
if
çç 
(
çç 
Range
çç 
<=
çç 
Articles
çç !
.
çç! "
Count
çç" '
)
çç' (
{
éé 
Articles
èè 
=
èè 
Range
èè  
>
èè! "
$num
èè# $
?
èè% &
Articles
èè' /
.
èè/ 0
GetRange
èè0 8
(
èè8 9
$num
èè9 :
,
èè: ;
Range
èè< A
)
èèA B
:
èèC D
Articles
èèE M
;
èèM N
return
êê 
await
êê 
Task
êê !
.
êê! "

FromResult
êê" ,
(
êê, -
Ok
êê- /
(
êê/ 0
Articles
êê0 8
)
êê8 9
)
êê9 :
;
êê: ;
}
ëë 
else
íí 
return
íí 

BadRequest
íí "
(
íí" #
Message
íí# *
(
íí* +
$str
íí+ A
)
ííA B
)
ííB C
;
ííC D
}
ìì 	
catch
îî 
(
îî 
	Exception
îî 
	exception
îî "
)
îî" #
{
ïï 	
_logger
ññ 
.
ññ 
LogError
ññ 
(
ññ 
HelperService
ññ *
.
ññ* +
LoggerMessage
ññ+ 8
(
ññ8 9
$str
ññ9 L
,
ññL M
$str
ññN n
,
ññn o
	exception
ññp y
)
ññy z
)
ññz {
;
ññ{ |
return
óó 
Problem
óó 
(
óó 
$str
óó H
)
óóH I
;
óóI J
}
òò 	
}
ôô 
[
ÆÆ 
HttpGet
ÆÆ 
]
ÆÆ 
public
ØØ 

async
ØØ 
Task
ØØ 
<
ØØ 
ActionResult
ØØ "
>
ØØ" #
GetArticleById
ØØ$ 2
(
ØØ2 3
int
ØØ3 6
	ArticleId
ØØ7 @
)
ØØ@ A
{
∞∞ 
if
±± 

(
±± 
	ArticleId
±± 
<=
±± 
$num
±± 
)
±± 
return
±± "

BadRequest
±±# -
(
±±- .
Message
±±. 5
(
±±5 6
$str
±±6 Y
)
±±Y Z
)
±±Z [
;
±±[ \
try
≤≤ 
{
≥≥ 	
return
¥¥ 
await
¥¥ 
Task
¥¥ 
.
¥¥ 

FromResult
¥¥ (
(
¥¥( )
Ok
¥¥) +
(
¥¥+ ,
_articleService
¥¥, ;
.
¥¥; <
GetArticleById
¥¥< J
(
¥¥J K
	ArticleId
¥¥K T
)
¥¥T U
)
¥¥U V
)
¥¥V W
;
¥¥W X
}
µµ 	
catch
∂∂ 
(
∂∂ #
ItemNotFoundException
∂∂ $
	exception
∂∂% .
)
∂∂. /
{
∑∑ 	
_logger
∏∏ 
.
∏∏ 
LogError
∏∏ 
(
∏∏ 
HelperService
∏∏ *
.
∏∏* +
LoggerMessage
∏∏+ 8
(
∏∏8 9
$str
∏∏9 L
,
∏∏L M
$str
∏∏N m
,
∏∏m n
	exception
∏∏o x
,
∏∏x y
	ArticleId∏∏z É
)∏∏É Ñ
)∏∏Ñ Ö
;∏∏Ö Ü
return
ππ 

BadRequest
ππ 
(
ππ 
Message
ππ %
(
ππ% &
$"
ππ& (
{
ππ( )
	exception
ππ) 2
.
ππ2 3
Message
ππ3 :
}
ππ: ;
"
ππ; <
)
ππ< =
)
ππ= >
;
ππ> ?
}
∫∫ 	
catch
ªª 
(
ªª 
	Exception
ªª 
	exception
ªª "
)
ªª" #
{
ºº 	
_logger
ΩΩ 
.
ΩΩ 
LogError
ΩΩ 
(
ΩΩ 
HelperService
ΩΩ *
.
ΩΩ* +
LoggerMessage
ΩΩ+ 8
(
ΩΩ8 9
$str
ΩΩ9 L
,
ΩΩL M
$str
ΩΩN m
,
ΩΩm n
	exception
ΩΩo x
,
ΩΩx y
	ArticleIdΩΩz É
)ΩΩÉ Ñ
)ΩΩÑ Ö
;ΩΩÖ Ü
return
ææ 
Problem
ææ 
(
ææ 
$"
ææ 
$str
ææ R
{
ææR S
	ArticleId
ææS \
}
ææ\ ]
"
ææ] ^
)
ææ^ _
;
ææ_ `
}
øø 	
}
¿¿ 
[
ŒŒ 
HttpGet
ŒŒ 
]
ŒŒ 
public
œœ 

async
œœ 
Task
œœ 
<
œœ 
ActionResult
œœ "
>
œœ" #
GetAll
œœ$ *
(
œœ* +
)
œœ+ ,
{
–– 
try
““ 
{
”” 	
var
’’ 
Articles
’’ 
=
’’ 
_articleService
’’ *
.
’’* +
GetListOfArticles
’’+ <
(
’’< =
)
’’= >
;
’’> ?
return
◊◊ 
await
◊◊ 
Task
◊◊ 
.
◊◊ 

FromResult
◊◊ (
(
◊◊( )
Ok
◊◊) +
(
◊◊+ ,
Articles
◊◊, 4
)
◊◊4 5
)
◊◊5 6
;
◊◊6 7
}
ÿÿ 	
catch
ŸŸ 
(
ŸŸ 
	Exception
ŸŸ 
	exception
ŸŸ "
)
ŸŸ" #
{
⁄⁄ 	
_logger
€€ 
.
€€ 
LogError
€€ 
(
€€ 
HelperService
€€ *
.
€€* +
LoggerMessage
€€+ 8
(
€€8 9
$str
€€9 L
,
€€L M
$str
€€N Y
,
€€Y Z
	exception
€€[ d
)
€€d e
)
€€e f
;
€€f g
return
‹‹ 
Problem
‹‹ 
(
‹‹ 
$str
‹‹ H
)
‹‹H I
;
‹‹I J
}
›› 	
}
ﬁﬁ 
[
ÎÎ 
HttpGet
ÎÎ 
]
ÎÎ 
public
ÏÏ 

async
ÏÏ 
Task
ÏÏ 
<
ÏÏ 
ActionResult
ÏÏ "
>
ÏÏ" #!
GetArticlesByUserId
ÏÏ$ 7
(
ÏÏ7 8
)
ÏÏ8 9
{
ÌÌ 
try
ÔÔ 
{
 	
var
ÒÒ #
ListOfArticleByUserId
ÒÒ %
=
ÒÒ& '
_articleService
ÒÒ( 7
.
ÒÒ7 8!
GetArticlesByUserId
ÒÒ8 K
(
ÒÒK L
GetCurrentUser
ÒÒL Z
(
ÒÒZ [
)
ÒÒ[ \
.
ÒÒ\ ]
UserId
ÒÒ] c
)
ÒÒc d
;
ÒÒd e
return
ÛÛ 
await
ÛÛ 
Task
ÛÛ 
.
ÛÛ 

FromResult
ÛÛ (
(
ÛÛ( )
Ok
ÛÛ) +
(
ÛÛ+ ,#
ListOfArticleByUserId
ÛÛ, A
)
ÛÛA B
)
ÛÛB C
;
ÛÛC D
}
ÙÙ 	
catch
ˆˆ 
(
ˆˆ 
	Exception
ˆˆ 
	exception
ˆˆ "
)
ˆˆ" #
{
˜˜ 	
_logger
¯¯ 
.
¯¯ 
LogError
¯¯ 
(
¯¯ 
HelperService
¯¯ *
.
¯¯* +
LoggerMessage
¯¯+ 8
(
¯¯8 9
$str
¯¯9 L
,
¯¯L M
$str
¯¯N o
,
¯¯o p
	exception
¯¯q z
)
¯¯z {
)
¯¯{ |
;
¯¯| }
return
˘˘ 
Problem
˘˘ 
(
˘˘ 
$"
˘˘ 
$str
˘˘ b
"
˘˘b c
)
˘˘c d
;
˘˘d e
}
˙˙ 	
}
¸¸ 
[
ìì 
HttpGet
ìì 
]
ìì 
public
îî 

async
îî 
Task
îî 
<
îî 
ActionResult
îî "
>
îî" # 
GetPrivateArticles
îî$ 6
(
îî6 7
int
îî7 :
UserId
îî; A
)
îîA B
{
ïï 
if
ññ 

(
ññ 
UserId
ññ 
<=
ññ 
$num
ññ 
)
ññ 
return
ññ 

BadRequest
ññ  *
(
ññ* +
Message
ññ+ 2
(
ññ2 3
$str
ññ3 R
)
ññR S
)
ññS T
;
ññT U
try
óó 
{
òò 	
var
ôô #
ListOfPrivateArticles
ôô %
=
ôô& '
_articleService
ôô( 7
.
ôô7 8 
GetPrivateArticles
ôô8 J
(
ôôJ K
UserId
ôôK Q
)
ôôQ R
;
ôôR S
return
õõ 
await
õõ 
Task
õõ 
.
õõ 

FromResult
õõ (
(
õõ( )
Ok
õõ) +
(
õõ+ ,#
ListOfPrivateArticles
õõ, A
)
õõA B
)
õõB C
;
õõC D
}
úú 	
catch
ûû 
(
ûû 
	Exception
ûû 
	exception
ûû "
)
ûû" #
{
üü 	
_logger
†† 
.
†† 
LogError
†† 
(
†† 
HelperService
†† *
.
††* +
LoggerMessage
††+ 8
(
††8 9
$str
††9 L
,
††L M
$str
††N o
,
††o p
	exception
††q z
,
††z {
UserId††| Ç
)††Ç É
)††É Ñ
;††Ñ Ö
return
°° 
Problem
°° 
(
°° 
$"
°° 
$str
°° H
"
°°H I
)
°°I J
;
°°J K
}
¢¢ 	
}
§§ 
[
ºº 
HttpGet
ºº 
]
ºº 
public
ΩΩ 

async
ΩΩ 
Task
ΩΩ 
<
ΩΩ 
ActionResult
ΩΩ "
>
ΩΩ" # 
GetArticlesByTitle
ΩΩ$ 6
(
ΩΩ6 7
string
ΩΩ7 =
Title
ΩΩ> C
)
ΩΩC D
{
ææ 
if
øø 

(
øø 
String
øø 
.
øø 
IsNullOrEmpty
øø  
(
øø  !
Title
øø! &
)
øø& '
)
øø' (
return
øø) /

BadRequest
øø0 :
(
øø: ;
Message
øø; B
(
øøB C
$str
øøC X
)
øøX Y
)
øøY Z
;
øøZ [
try
¿¿ 
{
¡¡ 	
var
¬¬ #
ListOfArticlesByTitle
¬¬ %
=
¬¬& '
_articleService
¬¬( 7
.
¬¬7 8 
GetArticlesByTitle
¬¬8 J
(
¬¬J K
Title
¬¬K P
)
¬¬P Q
;
¬¬Q R
return
ƒƒ 
await
ƒƒ 
Task
ƒƒ 
.
ƒƒ 

FromResult
ƒƒ (
(
ƒƒ( )
Ok
ƒƒ) +
(
ƒƒ+ ,#
ListOfArticlesByTitle
ƒƒ, A
)
ƒƒA B
)
ƒƒB C
;
ƒƒC D
}
≈≈ 	
catch
«« 
(
«« 
	Exception
«« 
	exception
«« "
)
««" #
{
»» 	
_logger
…… 
.
…… 
LogError
…… 
(
…… 
HelperService
…… *
.
……* +
LoggerMessage
……+ 8
(
……8 9
$str
……9 L
,
……L M
$str
……N p
,
……p q
	exception
……r {
,
……{ |
Title……} Ç
)……Ç É
)……É Ñ
;……Ñ Ö
return
   
Problem
   
(
   
$"
   
$str
   U
{
  U V
Title
  V [
}
  [ \
"
  \ ]
)
  ] ^
;
  ^ _
}
ÃÃ 	
}
œœ 
[
ÁÁ 
HttpGet
ÁÁ 
]
ÁÁ 
public
ËË 

async
ËË 
Task
ËË 
<
ËË 
ActionResult
ËË "
>
ËË" #!
GetArticlesByAuthor
ËË$ 7
(
ËË7 8
string
ËË8 >

AuthorName
ËË? I
)
ËËI J
{
ÈÈ 
if
ÍÍ 

(
ÍÍ 
String
ÍÍ 
.
ÍÍ 
IsNullOrEmpty
ÍÍ  
(
ÍÍ  !

AuthorName
ÍÍ! +
)
ÍÍ+ ,
)
ÍÍ, -
return
ÍÍ. 4

BadRequest
ÍÍ5 ?
(
ÍÍ? @
Message
ÍÍ@ G
(
ÍÍG H
$str
ÍÍH c
)
ÍÍc d
)
ÍÍd e
;
ÍÍe f
try
ÎÎ 
{
ÏÏ 	
var
ÌÌ $
ListOfArticlesByAuthor
ÌÌ &
=
ÌÌ' (
_articleService
ÌÌ) 8
.
ÌÌ8 9 
GetArticlesByTitle
ÌÌ9 K
(
ÌÌK L

AuthorName
ÌÌL V
)
ÌÌV W
;
ÌÌW X
return
ÔÔ 
await
ÔÔ 
Task
ÔÔ 
.
ÔÔ 

FromResult
ÔÔ (
(
ÔÔ( )
Ok
ÔÔ) +
(
ÔÔ+ ,$
ListOfArticlesByAuthor
ÔÔ, B
)
ÔÔB C
)
ÔÔC D
;
ÔÔD E
}
 	
catch
ÚÚ 
(
ÚÚ 
	Exception
ÚÚ 
	exception
ÚÚ "
)
ÚÚ" #
{
ÛÛ 	
_logger
ÙÙ 
.
ÙÙ 
LogError
ÙÙ 
(
ÙÙ 
HelperService
ÙÙ *
.
ÙÙ* +
LoggerMessage
ÙÙ+ 8
(
ÙÙ8 9
$str
ÙÙ9 L
,
ÙÙL M
$str
ÙÙN v
,
ÙÙv w
	exceptionÙÙx Å
,ÙÙÅ Ç

AuthorNameÙÙÉ ç
)ÙÙç é
)ÙÙé è
;ÙÙè ê
return
ıı 
Problem
ıı 
(
ıı 
$"
ıı 
$str
ıı U
{
ııU V

AuthorName
ııV `
}
ıı` a
"
ııa b
)
ııb c
;
ııc d
}
˜˜ 	
}
˘˘ 
[
èè 
HttpGet
èè 
]
èè 
public
êê 

async
êê 
Task
êê 
<
êê 
IActionResult
êê #
>
êê# $*
GetArticlesByArticleStatusId
êê% A
(
êêA B
int
êêB E
ArticleStatusID
êêF U
)
êêU V
{
ëë 
if
ìì 

(
ìì 
ArticleStatusID
ìì 
<=
ìì 
$num
ìì  
||
ìì! #
ArticleStatusID
ìì$ 3
>
ìì4 5
$num
ìì6 7
)
ìì7 8
return
ìì9 ?

BadRequest
ìì@ J
(
ììJ K
Message
ììK R
(
ììR S
$"
ììS U
$strììU è
{ììè ê
ArticleStatusIDììê ü
}ììü †
"ìì† °
)ìì° ¢
)ìì¢ £
;ìì£ §
try
îî 
{
ïï 	
var
óó 
ListOfArticles
óó 
=
óó  
_articleService
óó! 0
.
óó0 1*
GetArticlesByArticleStatusId
óó1 M
(
óóM N
ArticleStatusID
óóN ]
)
óó] ^
;
óó^ _
return
òò 
await
òò 
Task
òò 
.
òò 

FromResult
òò (
(
òò( )
Ok
òò) +
(
òò+ ,
ListOfArticles
òò, :
)
òò: ;
)
òò; <
;
òò< =
}
õõ 	
catch
úú 
(
úú 
	Exception
úú 
	exception
úú "
)
úú" #
{
ùù 	
_logger
ûû 
.
ûû 
LogError
ûû 
(
ûû 
HelperService
ûû *
.
ûû* +
LoggerMessage
ûû+ 8
(
ûû8 9
$str
ûû9 L
,
ûûL M
$strûûN Å
,ûûÅ Ç
	exceptionûûÉ å
)ûûå ç
,ûûç é
ArticleStatusIDûûè û
)ûûû ü
;ûûü †
return
üü 
Problem
üü 
(
üü 
$str
üü 9
)
üü9 :
;
üü: ;
}
†† 	
}
¢¢ 
[
∫∫ 
HttpGet
∫∫ 
]
∫∫ 
public
ªª 

async
ªª 
Task
ªª 
<
ªª 
ActionResult
ªª "
>
ªª" #
GetComments
ªª$ /
(
ªª/ 0
int
ªª0 3
	ArticleId
ªª4 =
)
ªª= >
{
ºº 
if
ΩΩ 

(
ΩΩ 
	ArticleId
ΩΩ 
<=
ΩΩ 
$num
ΩΩ 
)
ΩΩ 
return
ΩΩ "

BadRequest
ΩΩ# -
(
ΩΩ- .
Message
ΩΩ. 5
(
ΩΩ5 6
$str
ΩΩ6 X
)
ΩΩX Y
)
ΩΩY Z
;
ΩΩZ [
try
ææ 
{
øø 	
var
¿¿ 
ListOfComments
¿¿ 
=
¿¿  
_articleService
¿¿! 0
.
¿¿0 1
GetComments
¿¿1 <
(
¿¿< =
	ArticleId
¿¿= F
)
¿¿F G
;
¿¿G H
return
¬¬ 
await
¬¬ 
Task
¬¬ 
.
¬¬ 

FromResult
¬¬ (
(
¬¬( )
Ok
¬¬) +
(
¬¬+ ,
ListOfComments
¬¬, :
)
¬¬: ;
)
¬¬; <
;
¬¬< =
}
√√ 	
catch
≈≈ 
(
≈≈ 
	Exception
≈≈ 
	exception
≈≈ "
)
≈≈" #
{
∆∆ 	
_logger
«« 
.
«« 
LogError
«« 
(
«« 
HelperService
«« *
.
««* +
LoggerMessage
««+ 8
(
««8 9
$str
««9 L
,
««L M
nameof
««N T
(
««T U
GetComments
««U `
)
««` a
,
««a b
	exception
««c l
,
««l m
	ArticleId
««n w
)
««w x
)
««x y
;
««y z
return
»» 
Problem
»» 
(
»» 
$"
»» 
$str
»» Y
{
»»Y Z
	ArticleId
»»Z c
}
»»c d
"
»»d e
)
»»e f
;
»»f g
}
ÀÀ 	
}
œœ 
}‘‘ 
}’’ π
WC:\Users\manimaran.venkat\Documents\Backup\AspireOverflow\Controllers\BaseController.cs
	namespace 	
AspireOverflow
 
. 
Controllers $
{ 
public

 

class

 
BaseController

 
:

  !
ControllerBase

" 0
{ 
	protected 
object 
Message  
(  !
string! '
message( /
,/ 0
object1 7
?7 8
obj9 <
== >
null? C
)C D
{ 	
if 
( 
Message 
!= 
null 
&&  "
obj# &
==' )
null* .
). /
return0 6
new7 :
{; <
Message= D
=E F
messageG N
}O P
;P Q
else 
if 
( 
Message 
!= 
null  $
&&% '
obj( +
!=, .
null/ 3
)3 4
return5 ;
new< ?
{@ A
MessageB I
=J K
messageL S
,S T

DataPassedU _
=` a
objb e
}f g
;g h
else 
return 
new 
{ 
} 
;  
} 	
	protected 
CurrentUser 
GetCurrentUser ,
(, -
)- .
{ 	
var 
CurrentUser 
= 
new !
CurrentUser" -
(- .
). /
;/ 0
if 
( 
User 
!= 
null 
) 
{ 
CurrentUser 
. 
UserId "
=# $
Convert% ,
., -
ToInt32- 4
(4 5
User5 9
.9 :
	FindFirst: C
(C D
$strD L
)L M
?M N
.N O
ValueO T
)T U
;U V
CurrentUser 
. 
Email !
=" #
User$ (
.( )
	FindFirst) 2
(2 3

ClaimTypes3 =
.= >
Email> C
)C D
?D E
.E F
ValueF K
;K L
CurrentUser 
. 
RoleId "
=# $
Convert% ,
., -
ToInt32- 4
(4 5
User5 9
.9 :
	FindFirst: C
(C D

ClaimTypesD N
.N O
RoleO S
)S T
?T U
.U V
ValueV [
)[ \
;\ ]
CurrentUser 
. 

IsReviewer &
=' (
Convert) 0
.0 1
	ToBoolean1 :
(: ;
User; ?
.? @
	FindFirst@ I
(I J
$strJ V
)V W
?W X
.X Y
ValueY ^
)^ _
;_ `
return 
CurrentUser "
;" #
}   
return!! 
CurrentUser!! 
;!! 
}%% 	
}&& 
}'' áD
\C:\Users\manimaran.venkat\Documents\Backup\AspireOverflow\Controllers\DashboardController.cs
	namespace		 	
AspireOverflow		
 
.		 
Controllers		 $
{

 
[ 
ApiController 
] 
[ 
	Authorize 
] 
[ 
Route 

(
 
$str "
)" #
]# $
public 

class 
DashboardController $
:% &
BaseController' 5
{ 
private 
readonly 
ILogger  
<  !
DashboardController! 4
>4 5
_logger6 =
;= >
private 
readonly 
IArticleService (
_articleService) 8
;8 9
private 
readonly 
IQueryService &
_queryService' 4
;4 5
private 
readonly 
IUserService %
_userService& 2
;2 3
public 
DashboardController "
(" #
ILogger# *
<* +
DashboardController+ >
>> ?
logger@ F
,F G
IArticleServiceH W
articleServiceX f
,f g
IQueryServiceh u
queryService	v Ç
,
Ç É
IUserService
Ñ ê
userService
ë ú
)
ú ù
{ 	
_logger 
= 
logger 
; 
_articleService 
= 
articleService ,
;, -
_userService 
= 
userService &
;& '
_queryService 
= 
queryService (
;( )
} 	
[11 	
HttpGet11	 
]11 
public33 
async33 
Task33 
<33 
ActionResult33 &
>33& ' 
GetReviewerDashboard33( <
(33< =
)33= >
{44 	
try55 
{66 
int66 

ReviewerId66 
=66 
GetCurrentUser66 *
(66* +
)66+ ,
.66, -
UserId66- 3
;663 4
var77  
DashboardInformation77 (
=77) *
new77+ .
{88 !
TotalNumberOfArticles99 )
=99* +
_articleService99, ;
.99; <
GetAll99< B
(99B C
)99C D
.99D E
Count99E J
(99J K
)99K L
,99L M 
ArticlesTobeReviewed:: (
=::) *
_articleService::+ :
.::: ;(
GetArticlesByArticleStatusId::; W
(::W X
$num::X Y
)::Y Z
.::Z [
Count::[ `
(::` a
)::a b
,::b c
ArticlesReviewed;; $
=;;% &
_articleService;;& 5
.;;5 6(
GetArticlesByArticleStatusId;;6 R
(;;R S
$num;;S T
);;T U
.;;U V
Count;;V [
(;;[ \
);;\ ]
,;;] ^
ArticlesPublished<< %
=<<& '
_articleService<<( 7
.<<7 8#
GetArticlesByReviewerId<<8 O
(<<O P

ReviewerId<<P Z
)<<Z [
.<<[ \
Count<<\ a
(<<a b
)<<b c
,<<c d
}?? 
;?? 
return?? 
await?? 
Task??  $
.??$ %

FromResult??% /
(??/ 0
Ok??0 2
(??2 3 
DashboardInformation??3 G
)??G H
)??H I
;??I J
}@@ 
catchAA 
(AA 
	ExceptionAA 
	exceptionAA &
)AA& '
{BB 
_loggerCC 
.CC 
LogErrorCC  
(CC  !
HelperServiceCC! .
.CC. /
LoggerMessageCC/ <
(CC< =
$strCC= R
,CCR S
$strCCT z
,CCz {
	exception	CC| Ö
)
CCÖ Ü
)
CCÜ á
;
CCá à
returnDD 

BadRequestDD !
(DD! "
$strDD" O
)DDO P
;DDP Q
}EE 
}FF 	
[UU 	
HttpGetUU	 
]UU 
publicWW 
asyncWW 
TaskWW 
<WW 
ActionResultWW &
>WW& '
GetAdminDashboardWW( 9
(WW9 :
)WW: ;
{XX 	
tryYY 
{ZZ 
var[[  
DashboardInformation[[ (
=[[) *
new[[+ .
{\\ !
TotalNumberOfArticles]] )
=]]* +
_articleService]], ;
.]]; <
GetAll]]< B
(]]B C
)]]C D
.]]D E
Count]]E J
(]]J K
)]]K L
,]]L M
TotalNumberOfUsers^^ &
=^^' (
_userService^^) 5
.^^5 6
GetUsers^^6 >
(^^> ?
)^^? @
.^^@ A
Count^^A F
(^^F G
)^^G H
,^^H I!
TotalNumberOfReviwers__ )
=__* +
_userService__, 8
.__8 9 
GetUsersByIsReviewer__9 M
(__M N
true__N R
)__R S
.__S T
Count__T Y
(__Y Z
)__Z [
,__[ \ 
TotalNumberofQueries`` (
=``) *
_queryService``+ 8
.``8 9
GetListOfQueries``9 I
(``I J
)``J K
.``K L
Count``L Q
(``Q R
)``R S
,``S T%
TotaNumberofSolvedQueriesaa -
=aa. /
_queryServiceaa0 =
.aa= >

GetQueriesaa> H
(aaH I
trueaaI M
)aaM N
.aaN O
CountaaO T
(aaT U
)aaU V
,aaV W(
TotalNumberOfUnSolvedQueriesbb 0
=bb1 2
_queryServicebb3 @
.bb@ A

GetQueriesbbA K
(bbK L
falsebbL Q
)bbQ R
.bbR S
CountbbS X
(bbX Y
)bbY Z
,bbZ [
}dd 
;dd 
returndd 
awaitdd 
Taskdd  $
.dd$ %

FromResultdd% /
(dd/ 0
Okdd0 2
(dd2 3 
DashboardInformationdd3 G
)ddG H
)ddH I
;ddI J
}ee 
catchff 
(ff 
	Exceptionff 
	exceptionff &
)ff& '
{gg 
_loggerhh 
.hh 
LogErrorhh  
(hh  !
HelperServicehh! .
.hh. /
LoggerMessagehh/ <
(hh< =
$strhh= R
,hhR S
$strhhT i
,hhi j
	exceptionhhk t
)hht u
)hhu v
;hhv w
returnii 

BadRequestii !
(ii! "
$strii" O
)iiO P
;iiP Q
}jj 
}kk 	
[yy 	
HttpGetyy	 
]yy 
public{{ 
async{{ 
Task{{ 
<{{ 
ActionResult{{ &
>{{& '
GetHomePage{{( 3
({{3 4
){{4 5
{|| 	
try}} 
{~~ 
var 
Data 
= 
new 
{
ÄÄ 
TrendingArticles
ÅÅ $
=
ÅÅ% &
_articleService
ÅÅ' 6
.
ÅÅ6 7!
GetTrendingArticles
ÅÅ7 J
(
ÅÅJ K
)
ÅÅK L
,
ÅÅL M
LatestArticles
ÇÇ "
=
ÇÇ# $
_articleService
ÇÇ% 4
.
ÇÇ4 5
GetLatestArticles
ÇÇ5 F
(
ÇÇF G
)
ÇÇG H
,
ÇÇH I
TrendingQueries
ÉÉ #
=
ÉÉ$ %
_queryService
ÉÉ& 3
.
ÉÉ3 4 
GetTrendingQueries
ÉÉ4 F
(
ÉÉF G
)
ÉÉG H
,
ÉÉH I
LatestQueries
ÑÑ !
=
ÑÑ" #
_queryService
ÑÑ$ 1
.
ÑÑ1 2
GetLatestQueries
ÑÑ2 B
(
ÑÑB C
)
ÑÑC D
,
ÑÑD E
}
áá 
;
áá 
return
áá 
await
áá 
Task
áá  $
.
áá$ %

FromResult
áá% /
(
áá/ 0
Ok
áá0 2
(
áá2 3
Data
áá3 7
)
áá7 8
)
áá8 9
;
áá9 :
}
àà 
catch
ââ 
(
ââ 
	Exception
ââ 
	exception
ââ &
)
ââ& '
{
ää 
_logger
ãã 
.
ãã 
LogError
ãã  
(
ãã  !
HelperService
ãã! .
.
ãã. /
LoggerMessage
ãã/ <
(
ãã< =
$str
ãã= R
,
ããR S
$str
ããT c
,
ããc d
	exception
ããe n
)
ããn o
)
ãão p
;
ããp q
return
åå 

BadRequest
åå !
(
åå! "
$str
åå" O
)
ååO P
;
ååP Q
}
çç 
}
éé 	
}
íí 
}ìì «ï
XC:\Users\manimaran.venkat\Documents\Backup\AspireOverflow\Controllers\QueryController.cs
	namespace 	
AspireOverflow
 
. 
Controllers $
{ 
[ 
ApiController 
] 
[ 
Route 

(
 
$str "
)" #
]# $
public 

class 
QueryController  
:! "
BaseController# 1
{ 
private 
readonly 
ILogger  
<  !
QueryController! 0
>0 1
_logger2 9
;9 :
private 
readonly 
IQueryService &
_queryService' 4
;4 5
public 
QueryController 
( 
ILogger &
<& '
QueryController' 6
>6 7
logger8 >
,> ?
IQueryService@ M
queryServiceN Z
)Z [
{ 	
_logger 
= 
logger 
; 
_queryService 
= 
queryService (
;( )
} 	
[88 	
HttpPost88	 
]88 
public:: 
async:: 
Task:: 
<:: 
ActionResult:: &
>::& '
CreateQuery::( 3
(::3 4
Query::4 9
query::: ?
)::? @
{;; 	
if<< 
(<< 
query<< 
==<< 
null<< 
)<< 
return<< %

BadRequest<<& 0
(<<0 1
Message<<1 8
(<<8 9
$str<<9 V
)<<V W
)<<W X
;<<X Y
try== 
{>> 
query?? 
.?? 
	CreatedBy?? 
=?? 
GetCurrentUser?? -
(??- .
)??. /
.??/ 0
UserId??0 6
;??6 7
return@@ 
_queryService@@ $
.@@$ %
CreateQuery@@% 0
(@@0 1
query@@1 6
)@@6 7
?@@8 9
await@@: ?
Task@@@ D
.@@D E

FromResult@@E O
(@@O P
Ok@@P R
(@@R S
Message@@S Z
(@@Z [
$str@@[ q
)@@q r
)@@r s
)@@s t
:@@u v

BadRequest	@@w Å
(
@@Å Ç
Message
@@Ç â
(
@@â ä
$"
@@ä å
$str
@@å Æ
{
@@Æ Ø
HelperService
@@Ø º
.
@@º Ω
PropertyList
@@Ω …
(
@@…  
query
@@  œ
)
@@œ –
}
@@– —
"
@@— “
)
@@“ ”
)
@@” ‘
;
@@‘ ’
}AA 
catchBB 
(BB 
ValidationExceptionBB &
	exceptionBB' 0
)BB0 1
{CC 
_loggerEE 
.EE 
LogErrorEE  
(EE  !
HelperServiceEE! .
.EE. /
LoggerMessageEE/ <
(EE< =
$strEE= N
,EEN O
$strEEP j
,EEj k
	exceptionEEl u
,EEu v
queryEEw |
)EE| }
)EE} ~
;EE~ 
returnFF 

BadRequestFF !
(FF! "
MessageFF" )
(FF) *
$"FF* ,
{FF, -
	exceptionFF- 6
.FF6 7
MessageFF7 >
}FF> ?
"FF? @
,FF@ A
queryFFA F
)FFF G
)FFG H
;FFH I
}GG 
catchHH 
(HH 
	ExceptionHH 
	exceptionHH &
)HH& '
{II 
_loggerJJ 
.JJ 
LogErrorJJ  
(JJ  !
HelperServiceJJ! .
.JJ. /
LoggerMessageJJ/ <
(JJ< =
$strJJ= N
,JJN O
$strJJP j
,JJj k
	exceptionJJl u
,JJu v
queryJJw |
)JJ| }
)JJ} ~
;JJ~ 
returnKK 
ProblemKK 
(KK 
$"KK !
$strKK! C
{KKC D
HelperServiceKKD Q
.KKQ R
PropertyListKKR ^
(KK^ _
queryKK_ d
)KKd e
}KKe f
"KKf g
)KKg h
;KKh i
}LL 
}MM 	
[ff 	

HttpDeleteff	 
]ff 
publicgg 
asyncgg 
Taskgg 
<gg 
ActionResultgg &
>gg& ' 
RemoveQueryByQueryIdgg( <
(gg< =
intgg= @
QueryIdggA H
)ggH I
{hh 	
ifii 
(ii 
QueryIdii 
<=ii 
$numii 
)ii 
returnii $

BadRequestii% /
(ii/ 0
Messageii0 7
(ii7 8
$strii8 Y
)iiY Z
)iiZ [
;ii[ \
tryjj 
{kk 
returnll 
_queryServicell $
.ll$ % 
RemoveQueryByQueryIdll% 9
(ll9 :
QueryIdll: A
)llA B
?llC D
awaitllE J
TaskllK O
.llO P

FromResultllP Z
(llZ [
Okll[ ]
(ll] ^
$"ll^ `
$str	ll` é
{
llé è
QueryId
llè ñ
}
llñ ó
"
lló ò
)
llò ô
)
llô ö
:
llõ ú

BadRequest
llù ß
(
llß ®
Message
ll® Ø
(
llØ ∞
$"
ll∞ ≤
$str
ll≤ ‰
{
ll‰ Â
QueryId
llÂ Ï
}
llÏ Ì
"
llÌ Ó
)
llÓ Ô
)
llÔ 
;
ll Ò
}mm 
catchoo 
(oo !
ItemNotFoundExceptionoo (
	exceptionoo) 2
)oo2 3
{pp 
_loggerqq 
.qq 
LogErrorqq  
(qq  !
HelperServiceqq! .
.qq. /
LoggerMessageqq/ <
(qq< =
$strqq= N
,qqN O
$strqqP s
,qqs t
	exceptionqqu ~
,qq~ 
QueryId
qqÄ á
)
qqá à
)
qqà â
;
qqâ ä
returnrr 
NotFoundrr 
(rr  
$"rr  "
{rr" #
	exceptionrr# ,
.rr, -
Messagerr- 4
}rr4 5
"rr5 6
)rr6 7
;rr7 8
}ss 
catchtt 
(tt 
	Exceptiontt 
	exceptiontt &
)tt& '
{uu 
_loggervv 
.vv 
LogErrorvv  
(vv  !
HelperServicevv! .
.vv. /
LoggerMessagevv/ <
(vv< =
$strvv= N
,vvN O
$strvvP s
,vvs t
	exceptionvvu ~
,vv~ 
QueryId
vvÄ á
)
vvá à
)
vvà â
;
vvâ ä
returnww 
Problemww 
(ww 
$"ww !
$strww! S
{wwS T
QueryIdwwT [
}ww[ \
"ww\ ]
)ww] ^
;ww^ _
}xx 
}yy 	
[|| 	
	HttpPatch||	 
]|| 
public}} 
async}} 
Task}} 
<}} 
ActionResult}} &
>}}& '
MarkQueryAsSolved}}( 9
(}}9 :
int}}: =
QueryId}}> E
)}}E F
{~~ 	
if 
( 
QueryId 
<= 
$num 
) 
return $

BadRequest% /
(/ 0
Message0 7
(7 8
$str8 Y
)Y Z
)Z [
;[ \
try
ÄÄ 
{
ÅÅ 
return
ÇÇ 
_queryService
ÇÇ $
.
ÇÇ$ %
MarkQueryAsSolved
ÇÇ% 6
(
ÇÇ6 7
QueryId
ÇÇ7 >
)
ÇÇ> ?
?
ÇÇ@ A
await
ÇÇB G
Task
ÇÇH L
.
ÇÇL M

FromResult
ÇÇM W
(
ÇÇW X
Ok
ÇÇX Z
(
ÇÇZ [
$"
ÇÇ[ ]
$strÇÇ] ù
{ÇÇù û
QueryIdÇÇû •
}ÇÇ• ¶
"ÇÇ¶ ß
)ÇÇß ®
)ÇÇ® ©
:ÇÇ™ ´

BadRequestÇÇ¨ ∂
(ÇÇ∂ ∑
MessageÇÇ∑ æ
(ÇÇæ ø
$"ÇÇø ¡
$strÇÇ¡ ¸
{ÇÇ¸ ˝
QueryIdÇÇ˝ Ñ
}ÇÇÑ Ö
"ÇÇÖ Ü
)ÇÇÜ á
)ÇÇá à
;ÇÇà â
}
ÉÉ 
catch
ÖÖ 
(
ÖÖ #
ItemNotFoundException
ÖÖ (
	exception
ÖÖ) 2
)
ÖÖ2 3
{
ÜÜ 
_logger
áá 
.
áá 
LogError
áá  
(
áá  !
HelperService
áá! .
.
áá. /
LoggerMessage
áá/ <
(
áá< =
$str
áá= N
,
ááN O
$str
ááP p
,
ááp q
	exception
áár {
,
áá{ |
QueryIdáá} Ñ
)ááÑ Ö
)ááÖ Ü
;ááÜ á
return
àà 
NotFound
àà 
(
àà  
$"
àà  "
{
àà" #
	exception
àà# ,
.
àà, -
Message
àà- 4
}
àà4 5
"
àà5 6
)
àà6 7
;
àà7 8
}
ââ 
catch
ää 
(
ää 
	Exception
ää 
	exception
ää &
)
ää& '
{
ãã 
_logger
åå 
.
åå 
LogError
åå  
(
åå  !
HelperService
åå! .
.
åå. /
LoggerMessage
åå/ <
(
åå< =
$str
åå= N
,
ååN O
$str
ååP p
,
ååp q
	exception
åår {
,
åå{ |
QueryIdåå} Ñ
)ååÑ Ö
)ååÖ Ü
;ååÜ á
return
çç 
Problem
çç 
(
çç 
$"
çç !
$str
çç! \
{
çç\ ]
QueryId
çç] d
}
ççd e
"
ççe f
)
ççf g
;
ççg h
}
éé 
}
èè 	
[
ûû 	
HttpGet
ûû	 
]
ûû 
public
üü 
async
üü 
Task
üü 
<
üü 
ActionResult
üü &
>
üü& '
GetQuery
üü( 0
(
üü0 1
int
üü1 4
QueryId
üü5 <
)
üü< =
{
†† 	
if
°° 
(
°° 
QueryId
°° 
<=
°° 
$num
°° 
)
°° 
return
°° $

BadRequest
°°% /
(
°°/ 0
Message
°°0 7
(
°°7 8
$str
°°8 Y
)
°°Y Z
)
°°Z [
;
°°[ \
try
¢¢ 
{
££ 
var
§§ 
Query
§§ 
=
§§ 
_queryService
§§ )
.
§§) *
GetQuery
§§* 2
(
§§2 3
QueryId
§§3 :
)
§§: ;
;
§§; <
return
¶¶ 
await
¶¶ 
Task
¶¶ !
.
¶¶! "

FromResult
¶¶" ,
(
¶¶, -
Ok
¶¶- /
(
¶¶/ 0
Query
¶¶0 5
)
¶¶5 6
)
¶¶6 7
;
¶¶7 8
}
®® 
catch
©© 
(
©© #
ItemNotFoundException
©© (
	exception
©©) 2
)
©©2 3
{
™™ 
_logger
´´ 
.
´´ 
LogError
´´  
(
´´  !
HelperService
´´! .
.
´´. /
LoggerMessage
´´/ <
(
´´< =
$str
´´= N
,
´´N O
$str
´´P g
,
´´g h
	exception
´´i r
,
´´r s
QueryId
´´t {
)
´´{ |
)
´´| }
;
´´} ~
return
¨¨ 
Problem
¨¨ 
(
¨¨ 
$"
¨¨ !
{
¨¨! "
	exception
¨¨" +
.
¨¨+ ,
Message
¨¨, 3
}
¨¨3 4
$str
¨¨4 B
{
¨¨B C
QueryId
¨¨C J
}
¨¨J K
"
¨¨K L
)
¨¨L M
;
¨¨M N
}
≠≠ 
catch
ÆÆ 
(
ÆÆ 
	Exception
ÆÆ 
	exception
ÆÆ &
)
ÆÆ& '
{
ØØ 
_logger
∞∞ 
.
∞∞ 
LogError
∞∞  
(
∞∞  !
HelperService
∞∞! .
.
∞∞. /
LoggerMessage
∞∞/ <
(
∞∞< =
$str
∞∞= N
,
∞∞N O
$str
∞∞P g
,
∞∞g h
	exception
∞∞i r
,
∞∞r s
QueryId
∞∞t {
)
∞∞{ |
)
∞∞| }
;
∞∞} ~
return
±± 

BadRequest
±± !
(
±±! "
Message
±±" )
(
±±) *
$"
±±* ,
$str
±±, ]
{
±±] ^
QueryId
±±^ e
}
±±e f
"
±±f g
)
±±g h
)
±±h i
;
±±i j
}
≤≤ 
}
≥≥ 	
[
¡¡ 	
HttpGet
¡¡	 
]
¡¡ 
public
¬¬ 
async
¬¬ 
Task
¬¬ 
<
¬¬ 
ActionResult
¬¬ &
>
¬¬& '
GetAll
¬¬( .
(
¬¬. /
)
¬¬/ 0
{
√√ 	
try
ƒƒ 
{
≈≈ 
var
∆∆ 
Queries
∆∆ 
=
∆∆ 
_queryService
∆∆ +
.
∆∆+ ,
GetListOfQueries
∆∆, <
(
∆∆< =
)
∆∆= >
;
∆∆> ?
return
«« 
await
«« 
Task
«« !
.
««! "

FromResult
««" ,
(
««, -
Ok
««- /
(
««/ 0
Queries
««0 7
)
««7 8
)
««8 9
;
««9 :
}
»» 
catch
…… 
(
…… 
	Exception
…… 
	exception
…… &
)
……& '
{
   
_logger
ÀÀ 
.
ÀÀ 
LogError
ÀÀ  
(
ÀÀ  !
HelperService
ÀÀ! .
.
ÀÀ. /
LoggerMessage
ÀÀ/ <
(
ÀÀ< =
$str
ÀÀ= N
,
ÀÀN O
$str
ÀÀP Z
,
ÀÀZ [
	exception
ÀÀ\ e
)
ÀÀe f
)
ÀÀf g
;
ÀÀg h
return
ÃÃ 
Problem
ÃÃ 
(
ÃÃ 
$str
ÃÃ L
)
ÃÃL M
;
ÃÃM N
}
ÕÕ 
}
ŒŒ 	
[
‰‰ 	
HttpGet
‰‰	 
]
‰‰ 
public
ÂÂ 
async
ÂÂ 
Task
ÂÂ 
<
ÂÂ 
ActionResult
ÂÂ &
>
ÂÂ& '
GetLatestQueries
ÂÂ( 8
(
ÂÂ8 9
int
ÂÂ9 <
Range
ÂÂ= B
=
ÂÂC D
$num
ÂÂE F
)
ÂÂF G
{
ÊÊ 	
try
ÁÁ 
{
ËË 
var
ÈÈ 
Queries
ÈÈ 
=
ÈÈ 
_queryService
ÈÈ +
.
ÈÈ+ ,
GetLatestQueries
ÈÈ, <
(
ÈÈ< =
)
ÈÈ= >
.
ÈÈ> ?
ToList
ÈÈ? E
(
ÈÈE F
)
ÈÈF G
;
ÈÈG H
if
ÎÎ 
(
ÎÎ 
Range
ÎÎ 
<=
ÎÎ 
Queries
ÎÎ $
.
ÎÎ$ %
Count
ÎÎ% *
)
ÎÎ* +
{
ÏÏ 
Queries
ÌÌ 
=
ÌÌ 
Range
ÌÌ #
>
ÌÌ$ %
$num
ÌÌ& '
?
ÌÌ( )
Queries
ÌÌ* 1
.
ÌÌ1 2
GetRange
ÌÌ2 :
(
ÌÌ: ;
$num
ÌÌ; <
,
ÌÌ< =
Range
ÌÌ> C
)
ÌÌC D
:
ÌÌE F
Queries
ÌÌG N
;
ÌÌN O
return
ÓÓ 
await
ÓÓ  
Task
ÓÓ! %
.
ÓÓ% &

FromResult
ÓÓ& 0
(
ÓÓ0 1
Ok
ÓÓ1 3
(
ÓÓ3 4
Queries
ÓÓ4 ;
)
ÓÓ; <
)
ÓÓ< =
;
ÓÓ= >
}
ÔÔ 
else
 
return
 

BadRequest
 &
(
& '
Message
' .
(
. /
$str
/ E
)
E F
)
F G
;
G H
}
ÚÚ 
catch
ÛÛ 
(
ÛÛ 
	Exception
ÛÛ 
	exception
ÛÛ &
)
ÛÛ& '
{
ÙÙ 
_logger
ıı 
.
ıı 
LogError
ıı  
(
ıı  !
HelperService
ıı! .
.
ıı. /
LoggerMessage
ıı/ <
(
ıı< =
$str
ıı= N
,
ııN O
$str
ııP o
,
ııo p
	exception
ııq z
)
ıız {
)
ıı{ |
;
ıı| }
return
ˆˆ 
Problem
ˆˆ 
(
ˆˆ 
$str
ˆˆ L
)
ˆˆL M
;
ˆˆM N
}
˜˜ 
}
¯¯ 	
[
ãã 	
HttpGet
ãã	 
]
ãã 
public
åå 
async
åå 
Task
åå 
<
åå 
ActionResult
åå &
>
åå& ' 
GetTrendingQueries
åå( :
(
åå: ;
int
åå; >
Range
åå? D
=
ååE F
$num
ååG H
)
ååH I
{
çç 	
try
éé 
{
èè 
var
êê 
Queries
êê 
=
êê 
_queryService
êê +
.
êê+ , 
GetTrendingQueries
êê, >
(
êê> ?
)
êê? @
.
êê@ A
ToList
êêA G
(
êêG H
)
êêH I
;
êêI J
if
íí 
(
íí 
Range
íí 
<=
íí 
Queries
íí $
.
íí$ %
Count
íí% *
)
íí* +
{
ìì 
Queries
îî 
=
îî 
Range
îî #
>
îî$ %
$num
îî& '
?
îî( )
Queries
îî* 1
.
îî1 2
GetRange
îî2 :
(
îî: ;
$num
îî; <
,
îî< =
Range
îî> C
)
îîC D
:
îîE F
Queries
îîG N
;
îîN O
return
ïï 
await
ïï  
Task
ïï! %
.
ïï% &

FromResult
ïï& 0
(
ïï0 1
Ok
ïï1 3
(
ïï3 4
Queries
ïï4 ;
)
ïï; <
)
ïï< =
;
ïï= >
}
ññ 
else
óó 
return
óó 

BadRequest
óó &
(
óó& '
Message
óó' .
(
óó. /
$str
óó/ E
)
óóE F
)
óóF G
;
óóG H
}
òò 
catch
ôô 
(
ôô 
	Exception
ôô 
	exception
ôô &
)
ôô& '
{
öö 
_logger
õõ 
.
õõ 
LogError
õõ  
(
õõ  !
HelperService
õõ! .
.
õõ. /
LoggerMessage
õõ/ <
(
õõ< =
$str
õõ= N
,
õõN O
$str
õõP q
,
õõq r
	exception
õõs |
)
õõ| }
)
õõ} ~
;
õõ~ 
return
úú 
Problem
úú 
(
úú 
$str
úú L
)
úúL M
;
úúM N
}
ùù 
}
ûû 	
[
¢¢ 	
HttpGet
¢¢	 
]
¢¢ 
public
££ 
async
££ 
Task
££ 
<
££ 
ActionResult
££ &
>
££& ' 
GetQueriesByUserId
££( :
(
££: ;
)
££; <
{
§§ 	
int
•• 
UserId
•• 
=
•• 
GetCurrentUser
•• %
(
••% &
)
••& '
.
••' (
UserId
••( .
;
••. /
try
¶¶ 
{
ßß 
var
®® #
ListOfQueriesByUserId
®® )
=
®®* +
_queryService
®®, 9
.
®®9 : 
GetQueriesByUserId
®®: L
(
®®L M
UserId
®®M S
)
®®S T
;
®®T U
return
™™ 
await
™™ 
Task
™™ !
.
™™! "

FromResult
™™" ,
(
™™, -
Ok
™™- /
(
™™/ 0#
ListOfQueriesByUserId
™™0 E
)
™™E F
)
™™F G
;
™™G H
}
´´ 
catch
≠≠ 
(
≠≠ 
	Exception
≠≠ 
	exception
≠≠ &
)
≠≠& '
{
ÆÆ 
_logger
ØØ 
.
ØØ 
LogError
ØØ  
(
ØØ  !
HelperService
ØØ! .
.
ØØ. /
LoggerMessage
ØØ/ <
(
ØØ< =
$str
ØØ= N
,
ØØN O
$str
ØØP p
,
ØØp q
	exception
ØØr {
,
ØØ{ |
UserIdØØ} É
)ØØÉ Ñ
)ØØÑ Ö
;ØØÖ Ü
return
∞∞ 
Problem
∞∞ 
(
∞∞ 
$"
∞∞ !
$str
∞∞! Z
{
∞∞Z [
UserId
∞∞[ a
}
∞∞a b
"
∞∞b c
)
∞∞c d
;
∞∞d e
}
±± 
}
≥≥ 	
[
∂∂ 	
HttpGet
∂∂	 
]
∂∂ 
public
∑∑ 
async
∑∑ 
Task
∑∑ 
<
∑∑ 
ActionResult
∑∑ &
>
∑∑& '
GetQueriesByTitle
∑∑( 9
(
∑∑9 :
string
∑∑: @
Title
∑∑A F
)
∑∑F G
{
∏∏ 	
if
ππ 
(
ππ 
String
ππ 
.
ππ 
IsNullOrEmpty
ππ $
(
ππ$ %
Title
ππ% *
)
ππ* +
)
ππ+ ,
return
ππ- 3

BadRequest
ππ4 >
(
ππ> ?
Message
ππ? F
(
ππF G
$str
ππG \
)
ππ\ ]
)
ππ] ^
;
ππ^ _
try
∫∫ 
{
ªª 
var
ºº "
ListOfQueriesByTitle
ºº (
=
ºº) *
_queryService
ºº+ 8
.
ºº8 9
GetQueriesByTitle
ºº9 J
(
ººJ K
Title
ººK P
)
ººP Q
;
ººQ R
return
ΩΩ 
await
ΩΩ 
Task
ΩΩ !
.
ΩΩ! "

FromResult
ΩΩ" ,
(
ΩΩ, -
Ok
ΩΩ- /
(
ΩΩ/ 0"
ListOfQueriesByTitle
ΩΩ0 D
)
ΩΩD E
)
ΩΩE F
;
ΩΩF G
}
ææ 
catch
¿¿ 
(
¿¿ 
	Exception
¿¿ 
	exception
¿¿ &
)
¿¿& '
{
¡¡ 
_logger
¬¬ 
.
¬¬ 
LogError
¬¬  
(
¬¬  !
HelperService
¬¬! .
.
¬¬. /
LoggerMessage
¬¬/ <
(
¬¬< =
$str
¬¬= N
,
¬¬N O
$str
¬¬P q
,
¬¬q r
	exception
¬¬s |
,
¬¬| }
Title¬¬~ É
)¬¬É Ñ
)¬¬Ñ Ö
;¬¬Ö Ü
return
√√ 
Problem
√√ 
(
√√ 
$"
√√ !
$str
√√! Y
{
√√Y Z
Title
√√Z _
}
√√_ `
"
√√` a
)
√√a b
;
√√b c
}
≈≈ 
}
»» 	
[
ﬁﬁ 	
HttpGet
ﬁﬁ	 
]
ﬁﬁ 
public
ﬂﬂ 
async
ﬂﬂ 
Task
ﬂﬂ 
<
ﬂﬂ 
ActionResult
ﬂﬂ &
>
ﬂﬂ& '"
GetQueriesByIsSolved
ﬂﬂ( <
(
ﬂﬂ< =
bool
ﬂﬂ= A
IsSolved
ﬂﬂB J
)
ﬂﬂJ K
{
‡‡ 	
try
‚‚ 
{
„„ 
var
‰‰ %
ListOfQueriesByIsSolved
‰‰ +
=
‰‰, -
_queryService
‰‰. ;
.
‰‰; <

GetQueries
‰‰< F
(
‰‰F G
IsSolved
‰‰G O
)
‰‰O P
;
‰‰P Q
return
ÂÂ 
await
ÂÂ 
Task
ÂÂ !
.
ÂÂ! "

FromResult
ÂÂ" ,
(
ÂÂ, -
Ok
ÂÂ- /
(
ÂÂ/ 0%
ListOfQueriesByIsSolved
ÂÂ0 G
)
ÂÂG H
)
ÂÂH I
;
ÂÂI J
}
ÊÊ 
catch
ÁÁ 
(
ÁÁ 
	Exception
ÁÁ 
	exception
ÁÁ &
)
ÁÁ& '
{
ËË 
_logger
ÈÈ 
.
ÈÈ 
LogError
ÈÈ  
(
ÈÈ  !
HelperService
ÈÈ! .
.
ÈÈ. /
LoggerMessage
ÈÈ/ <
(
ÈÈ< =
$str
ÈÈ= N
,
ÈÈN O
$str
ÈÈP u
,
ÈÈu v
	exceptionÈÈw Ä
,ÈÈÄ Å
IsSolvedÈÈÇ ä
)ÈÈä ã
)ÈÈã å
;ÈÈå ç
return
ÍÍ 
Problem
ÍÍ 
(
ÍÍ 
$"
ÍÍ !
$str
ÍÍ! \
{
ÍÍ\ ]
IsSolved
ÍÍ] e
}
ÍÍe f
"
ÍÍf g
)
ÍÍg h
;
ÍÍh i
}
ÏÏ 
}
ÓÓ 	
[
ää 	
HttpPost
ää	 
]
ää 
public
ãã 
async
ãã 
Task
ãã 
<
ãã 
ActionResult
ãã &
>
ãã& '
CreateComment
ãã( 5
(
ãã5 6
QueryComment
ãã6 B
comment
ããC J
)
ããJ K
{
åå 	
if
éé 
(
éé 
comment
éé 
==
éé 
null
éé 
)
éé  
return
éé! '

BadRequest
éé( 2
(
éé2 3
Message
éé3 :
(
éé: ;
$str
éé; X
)
ééX Y
)
ééY Z
;
ééZ [
try
èè 
{
êê 
comment
ëë 
.
ëë 
	CreatedBy
ëë !
=
ëë! "
GetCurrentUser
ëë" 0
(
ëë0 1
)
ëë1 2
.
ëë2 3
UserId
ëë3 9
;
ëë9 :
return
íí 
_queryService
íí $
.
íí$ %
CreateComment
íí% 2
(
íí2 3
comment
íí3 :
)
íí: ;
?
íí< =
await
íí> C
Task
ííD H
.
ííH I

FromResult
ííI S
(
ííS T
Ok
ííT V
(
ííV W
$strííW Ä
)ííÄ Å
)ííÅ Ç
:ííÉ Ñ

BadRequestííÖ è
(ííè ê
Messageííê ó
(ííó ò
$"ííò ö
$strííö æ
{ííæ ø
HelperServiceííø Ã
.ííÃ Õ
PropertyListííÕ Ÿ
(ííŸ ⁄
commentíí⁄ ·
)íí· ‚
}íí‚ „
"íí„ ‰
)íí‰ Â
)ííÂ Ê
;ííÊ Á
}
ìì 
catch
îî 
(
îî !
ValidationException
îî &
	exception
îî' 0
)
îî0 1
{
ïï 
_logger
ññ 
.
ññ 
LogError
ññ  
(
ññ  !
HelperService
ññ! .
.
ññ. /
LoggerMessage
ññ/ <
(
ññ< =
$str
ññ= N
,
ññN O
$str
ññP v
,
ññv w
	exceptionññx Å
,ññÅ Ç
commentññÉ ä
)ññä ã
)ññã å
;ññå ç
return
óó 

BadRequest
óó !
(
óó! "
Message
óó" )
(
óó) *
$"
óó* ,
{
óó, -
	exception
óó- 6
.
óó6 7
Message
óó7 >
}
óó> ?
"
óó? @
,
óó@ A
comment
óóA H
)
óóH I
)
óóI J
;
óóJ K
}
òò 
catch
öö 
(
öö 
	Exception
öö 
	exception
öö &
)
öö& '
{
õõ 
_logger
úú 
.
úú 
LogError
úú  
(
úú  !
HelperService
úú! .
.
úú. /
LoggerMessage
úú/ <
(
úú< =
$str
úú= N
,
úúN O
$str
úúP v
,
úúv w
	exceptionúúx Å
,úúÅ Ç
commentúúÉ ä
)úúä ã
)úúã å
;úúå ç
return
ùù 
Problem
ùù 
(
ùù 
$"
ùù !
$str
ùù! E
{
ùùE F
HelperService
ùùF S
.
ùùS T
PropertyList
ùùT `
(
ùù` a
comment
ùùa h
)
ùùh i
}
ùùi j
"
ùùj k
)
ùùk l
;
ùùl m
}
ûû 
}
†† 	
[
∑∑ 	
HttpGet
∑∑	 
]
∑∑ 
public
∏∏ 
async
∏∏ 
Task
∏∏ 
<
∏∏ 
ActionResult
∏∏ &
>
∏∏& '
GetComments
∏∏( 3
(
∏∏3 4
int
∏∏4 7
QueryId
∏∏8 ?
)
∏∏? @
{
ππ 	
if
∫∫ 
(
∫∫ 
QueryId
∫∫ 
<=
∫∫ 
$num
∫∫ 
)
∫∫ 
return
∫∫ $

BadRequest
∫∫% /
(
∫∫/ 0
Message
∫∫0 7
(
∫∫7 8
$str
∫∫8 X
)
∫∫X Y
)
∫∫Y Z
;
∫∫Z [
try
ªª 
{
ºº 
var
ΩΩ 
ListOfComments
ΩΩ "
=
ΩΩ# $
_queryService
ΩΩ% 2
.
ΩΩ2 3
GetComments
ΩΩ3 >
(
ΩΩ> ?
QueryId
ΩΩ? F
)
ΩΩF G
;
ΩΩG H
return
ææ 
await
ææ 
Task
ææ !
.
ææ! "

FromResult
ææ" ,
(
ææ, -
Ok
ææ- /
(
ææ/ 0
ListOfComments
ææ0 >
)
ææ> ?
)
ææ? @
;
ææ@ A
}
øø 
catch
¡¡ 
(
¡¡ 
	Exception
¡¡ 
	exception
¡¡ &
)
¡¡& '
{
¬¬ 
_logger
√√ 
.
√√ 
LogError
√√  
(
√√  !
HelperService
√√! .
.
√√. /
LoggerMessage
√√/ <
(
√√< =
$str
√√= N
,
√√N O
$str
√√P k
,
√√k l
	exception
√√m v
,
√√v w
QueryId
√√x 
)√√ Ä
)√√Ä Å
;√√Å Ç
return
ƒƒ 
Problem
ƒƒ 
(
ƒƒ 
$"
ƒƒ !
$str
ƒƒ! [
{
ƒƒ[ \
QueryId
ƒƒ\ c
}
ƒƒc d
"
ƒƒd e
)
ƒƒe f
;
ƒƒf g
}
«« 
}
…… 	
[
„„ 	
HttpPost
„„	 
]
„„ 
public
‰‰ 
async
‰‰ 
Task
‰‰ 
<
‰‰ 
ActionResult
‰‰ &
>
‰‰& '
AddSpam
‰‰( /
(
‰‰/ 0
Spam
‰‰0 4
spam
‰‰5 9
)
‰‰9 :
{
ÂÂ 	
if
ÊÊ 
(
ÊÊ 
spam
ÊÊ 
==
ÊÊ 
null
ÊÊ 
)
ÊÊ 
return
ÊÊ %

BadRequest
ÊÊ& 0
(
ÊÊ0 1
Message
ÊÊ1 8
(
ÊÊ8 9
$str
ÊÊ9 U
)
ÊÊU V
)
ÊÊV W
;
ÊÊW X
try
ËË 
{
ÈÈ 
spam
ÍÍ 
.
ÍÍ 
UserId
ÍÍ 
=
ÍÍ 
GetCurrentUser
ÍÍ *
(
ÍÍ* +
)
ÍÍ+ ,
.
ÍÍ, -
UserId
ÍÍ- 3
;
ÍÍ3 4
return
ÎÎ 
_queryService
ÎÎ $
.
ÎÎ$ %
AddSpam
ÎÎ% ,
(
ÎÎ, -
spam
ÎÎ. 2
)
ÎÎ2 3
?
ÎÎ4 5
await
ÎÎ6 ;
Task
ÎÎ< @
.
ÎÎ@ A

FromResult
ÎÎA K
(
ÎÎK L
Ok
ÎÎL N
(
ÎÎN O
Message
ÎÎO V
(
ÎÎV W
$str
ÎÎW ~
)
ÎÎ~ 
)ÎÎ Ä
)ÎÎÄ Å
:ÎÎÇ É

BadRequestÎÎÑ é
(ÎÎé è
MessageÎÎè ñ
(ÎÎñ ó
$strÎÎó ∆
)ÎÎ∆ «
)ÎÎ« »
;ÎÎ» …
}
ÏÏ 
catch
ÌÌ 
(
ÌÌ !
ValidationException
ÌÌ &
	exception
ÌÌ' 0
)
ÌÌ0 1
{
ÓÓ 
_logger
ÔÔ 
.
ÔÔ 
LogError
ÔÔ  
(
ÔÔ  !
HelperService
ÔÔ! .
.
ÔÔ. /
LoggerMessage
ÔÔ/ <
(
ÔÔ< =
$str
ÔÔ= N
,
ÔÔN O
$str
ÔÔP f
,
ÔÔf g
	exception
ÔÔh q
,
ÔÔq r
spam
ÔÔs w
)
ÔÔw x
)
ÔÔx y
;
ÔÔy z
return
 
Problem
 
(
 
$"
 !
{
! "
	exception
" +
.
+ ,
Message
, 3
}
3 4
"
4 5
)
5 6
;
6 7
}
ÒÒ 
catch
ÚÚ 
(
ÚÚ 
	Exception
ÚÚ 
	exception
ÚÚ &
)
ÚÚ& '
{
ÛÛ 
_logger
ÙÙ 
.
ÙÙ 
LogError
ÙÙ  
(
ÙÙ  !
HelperService
ÙÙ! .
.
ÙÙ. /
LoggerMessage
ÙÙ/ <
(
ÙÙ< =
$str
ÙÙ= N
,
ÙÙN O
$str
ÙÙP d
,
ÙÙd e
	exception
ÙÙf o
,
ÙÙo p
spam
ÙÙq u
)
ÙÙu v
)
ÙÙv w
;
ÙÙw x
return
ıı 

BadRequest
ıı !
(
ıı! "
Message
ıı" )
(
ıı) *
$str
ıı* [
,
ıı[ \
spam
ıı\ `
)
ıı` a
)
ııa b
;
ııb c
}
ˆˆ 
}
˜˜ 	
[
ÖÖ 	
HttpGet
ÖÖ	 
]
ÖÖ 
public
ÜÜ 
async
ÜÜ 
Task
ÜÜ 
<
ÜÜ 
ActionResult
ÜÜ &
>
ÜÜ& '
GetListOfSpams
ÜÜ( 6
(
ÜÜ6 7
)
ÜÜ7 8
{
áá 	
try
àà 
{
ââ 
var
ää 
ListOfSpams
ää 
=
ää  !
_queryService
ää" /
.
ää/ 0
GetSpams
ää0 8
(
ää8 9
$num
ää9 :
)
ää: ;
;
ää; <
return
ãã 
await
ãã 
Task
ãã !
.
ãã! "

FromResult
ãã" ,
(
ãã, -
Ok
ãã- /
(
ãã/ 0
ListOfSpams
ãã0 ;
)
ãã; <
)
ãã< =
;
ãã= >
}
åå 
catch
çç 
(
çç 
	Exception
çç 
	exception
çç &
)
çç& '
{
éé 
_logger
èè 
.
èè 
LogError
èè  
(
èè  !
HelperService
èè! .
.
èè. /
LoggerMessage
èè/ <
(
èè< =
$str
èè= N
,
èèN O
$str
èèP b
,
èèb c
	exception
èèd m
)
èèm n
)
èèn o
;
èèo p
return
êê 
Problem
êê 
(
êê 
$str
êê L
)
êêL M
;
êêM N
}
ëë 
}
íí 	
[
´´ 
	HttpPatch
´´ 
]
´´ 
public
¨¨ 

ActionResult
¨¨ 
UpdateSpamStatus
¨¨ (
(
¨¨( )
int
¨¨) ,
QueryId
¨¨- 4
,
¨¨4 5
int
¨¨6 9
VerifyStatusID
¨¨: H
)
¨¨H I
{
≠≠ 
if
ÆÆ 

(
ÆÆ 
QueryId
ÆÆ 
<=
ÆÆ 
$num
ÆÆ 
)
ÆÆ 
return
ÆÆ  

BadRequest
ÆÆ! +
(
ÆÆ+ ,
Message
ÆÆ, 3
(
ÆÆ3 4
$"
ÆÆ4 6
$str
ÆÆ6 g
{
ÆÆg h
QueryId
ÆÆh o
}
ÆÆo p
"
ÆÆp q
)
ÆÆq r
)
ÆÆr s
;
ÆÆs t
if
ØØ 

(
ØØ 
VerifyStatusID
ØØ 
<=
ØØ 
$num
ØØ 
||
ØØ  "
VerifyStatusID
ØØ# 1
>
ØØ2 3
$num
ØØ4 5
)
ØØ5 6
return
ØØ7 =

BadRequest
ØØ> H
(
ØØH I
Message
ØØI P
(
ØØP Q
$"
ØØQ S
$strØØS ü
{ØØü †
VerifyStatusIDØØ† Æ
}ØØÆ Ø
"ØØØ ∞
)ØØ∞ ±
)ØØ± ≤
;ØØ≤ ≥
try
∞∞ 
{
±± 	
return
≤≤ 
_queryService
≤≤  
.
≤≤  !
ChangeSpamStatus
≤≤! 1
(
≤≤1 2
QueryId
≤≤2 9
,
≤≤9 :
VerifyStatusID
≤≤; I
)
≤≤I J
?
≤≤J K
Ok
≤≤L N
(
≤≤N O
Message
≤≤O V
(
≤≤V W
$str
≤≤W m
)
≤≤m n
)
≤≤n o
:
≤≤o p

BadRequest
≤≤q {
(
≤≤{ |
Message≤≤| É
(≤≤É Ñ
$"≤≤Ñ Ü
$str≤≤Ü ø
{≤≤ø ¿
QueryId≤≤¿ «
}≤≤« »
$str≤≤» ‹
{≤≤‹ ›
VerifyStatusID≤≤› Î
}≤≤Î Ï
"≤≤Ï Ì
)≤≤Ì Ó
)≤≤Ó Ô
;≤≤Ô 
}
≥≥ 	
catch
¥¥ 
(
¥¥ 
	Exception
¥¥ 
	exception
¥¥ "
)
¥¥" #
{
µµ 	
_logger
∂∂ 
.
∂∂ 
LogError
∂∂ 
(
∂∂ 
HelperService
∂∂ *
.
∂∂* +
LoggerMessage
∂∂+ 8
(
∂∂8 9
$"
∂∂9 ;
$str
∂∂; G
"
∂∂G H
,
∂∂H I
$str
∂∂J }
,
∂∂} ~
	exception∂∂ à
,∂∂à â
QueryId∂∂ä ë
,∂∂ë í
VerifyStatusID∂∂ì °
)∂∂° ¢
)∂∂¢ £
;∂∂£ §
return
∑∑ 
Problem
∑∑ 
(
∑∑ 
$"
∑∑ 
$str
∑∑ V
{
∑∑V W
QueryId
∑∑W ^
}
∑∑^ _
$str
∑∑_ s
{
∑∑s t
VerifyStatusID∑∑t Ç
}∑∑Ç É
"∑∑É Ñ
)∑∑Ñ Ö
;∑∑Ö Ü
}
∏∏ 	
}
ππ 
}
ΩΩ 
}ææ Ã
XC:\Users\manimaran.venkat\Documents\Backup\AspireOverflow\Controllers\TokenController.cs
	namespace		 	
AspireOverflow		
 
.		 
Controllers		 $
{

 
[ 
ApiController 
] 
[ 
Route 

(
 
$str "
)" #
]# $
public 

class 
TokenController  
:! "
BaseController# 1
{ 
private 
readonly 
ITokenService &
_tokenService' 4
;4 5
private 
readonly 
ILogger  
<  !
TokenController! 0
>0 1
_logger2 9
;9 :
public 
TokenController 
( 
ITokenService ,
tokenService- 9
,9 :
ILogger; B
<B C
TokenControllerC R
>R S
loggerT Z
)Z [
{ 	
_tokenService 
= 
tokenService (
;( )
_logger 
= 
logger 
; 
} 	
[-- 	
HttpPost--	 
]-- 
public.. 
IActionResult.. 
	AuthToken.. &
(..& '
Login..' ,
Crendentials..- 9
)..9 :
{// 	
try00
 
{11 
if22 
(22 
Crendentials22 !
==22" $
null22% )
||22* ,
!22- .

Validation22. 8
.228 9#
ValidateUserCredentials229 P
(22P Q
Crendentials22Q ]
.22] ^
Email22^ c
!22c d
,22d e
Crendentials22f r
.22r s
Password22s {
!22{ |
)22| }
)22} ~
return	22 Ö

BadRequest
22Ü ê
(
22ê ë
$str
22ë ≥
)
22≥ ¥
;
22¥ µ
var33 
Result33 
=33 
_tokenService33 *
.33* +
GenerateToken33+ 8
(338 9
Crendentials339 E
)33E F
;33F G
return44 
Ok44 
(44 
Result44  
)44  !
;44! "
}66 
catch77 
(77 
ValidationException77 &
	exception77' 0
)770 1
{88 
_logger99 
.99 
LogError99  
(99  !
HelperService99! .
.99. /
LoggerMessage99/ <
(99< =
$str99= N
,99N O
$str99P z
,99z {
	exception	99| Ö
,
99Ö Ü
Crendentials
99á ì
.
99ì î
Email
99î ô
!
99ô ö
)
99ö õ
)
99õ ú
;
99ú ù
return:: 

BadRequest:: !
(::! "
	exception::" +
.::+ ,
Message::, 3
)::3 4
;::4 5
}<< 
catch== 
(== 
	Exception== 
	exception== &
)==& '
{>> 
_logger?? 
.?? 
LogError??  
(??  !
HelperService??! .
.??. /
LoggerMessage??/ <
(??< =
$str??= N
,??N O
$str??P z
,??z {
	exception	??| Ö
,
??Ö Ü
Crendentials
??á ì
.
??ì î
Email
??î ô
!
??ô ö
)
??ö õ
)
??õ ú
;
??ú ù
return@@ 

BadRequest@@ !
(@@! "
Message@@" )
(@@) *
$str@@* \
)@@\ ]
)@@] ^
;@@^ _
}AA 
}CC 	
}FF 
}II üæ
WC:\Users\manimaran.venkat\Documents\Backup\AspireOverflow\Controllers\UserController.cs
	namespace 	
AspireOverflow
 
. 
Controllers $
;$ %
[ 
ApiController 
] 
[ 
	Authorize 
] 
[ 
Route 
( 
$str 
) 
]  
public 
class 
UserController 
: 
BaseController ,
{ 
private 
readonly 
ILogger 
< 
UserController +
>+ ,
_logger- 4
;4 5
private 
readonly 
IUserService !
_UserService" .
;. /
public 

UserController 
( 
ILogger !
<! "
UserController" 0
>0 1
logger2 8
,8 9
IUserService: F
UserServiceG R
)R S
{ 
_logger 
= 
logger 
; 
_UserService 
= 
UserService "
;" #
} 
[55 
HttpPost55 
]55 
[55 
AllowAnonymous55 
]55 
public66 

async66 
Task66 
<66 
ActionResult66 "
>66" #

CreateUser66$ .
(66. /
User66/ 3
User664 8
)668 9
{77 
if99 

(99 
User99 
==99 
null99 
)99 
return99  

BadRequest99! +
(99+ ,
Message99, 3
(993 4
$str994 Q
)99Q R
)99R S
;99S T
try:: 
{;; 	
return== 
_UserService== 
.==  

CreateUser==  *
(==* +
User==+ /
)==/ 0
?==1 2
await==3 8
Task==9 =
.=== >

FromResult==> H
(==H I
Ok==I K
(==K L
$str==L b
)==b c
)==c d
:==e f

BadRequest==g q
(==q r
Message==r y
(==y z
$"==z |
$str	==| ù
{
==ù û
HelperService
==û ´
.
==´ ¨
PropertyList
==¨ ∏
(
==∏ π
User
==π Ω
)
==Ω æ
}
==æ ø
"
==ø ¿
)
==¿ ¡
)
==¡ ¬
;
==¬ √
}>> 	
catch?? 
(?? 
ValidationException?? "
	exception??# ,
)??, -
{@@ 	
_loggerBB 
.BB 
LogErrorBB 
(BB 
HelperServiceBB *
.BB* +
LoggerMessageBB+ 8
(BB8 9
$strBB9 I
,BBI J
$strBBK c
,BBc d
	exceptionBBe n
,BBn o
UserBBp t
)BBt u
)BBu v
;BBv w
returnCC 

BadRequestCC 
(CC 
MessageCC %
(CC% &
$"CC& (
{CC( )
	exceptionCC) 2
.CC2 3
MessageCC3 :
}CC: ;
"CC; <
,CC< =
UserCC= A
)CCA B
)CCB C
;CCC D
}DD 	
catchEE 
(EE 
	ExceptionEE 
	exceptionEE "
)EE" #
{FF 	
_loggerGG 
.GG 
LogErrorGG 
(GG 
HelperServiceGG *
.GG* +
LoggerMessageGG+ 8
(GG8 9
$strGG9 I
,GGI J
$strGGK c
,GGc d
	exceptionGGe n
,GGn o
UserGGp t
)GGt u
)GGu v
;GGv w
returnHH 
ProblemHH 
(HH 
$"HH 
$strHH >
{HH> ?
HelperServiceHH? L
.HHL M
PropertyListHHM Y
(HHY Z
UserHHZ ^
)HH^ _
}HH_ `
"HH` a
)HHa b
;HHb c
}II 	
}JJ 
[aa 
	HttpPatchaa 
]aa 
publicbb 

asyncbb 
Taskbb 
<bb 
ActionResultbb "
>bb" #"
ChangeUserVerifyStatusbb$ :
(bb: ;
intbb; >
UserIdbb? E
,bbE F
boolbbG K

IsVerifiedbbL V
)bbV W
{cc 
ifdd 

(dd 
UserIddd 
<=dd 
$numdd 
)dd 
returndd 

BadRequestdd  *
(dd* +
Messagedd+ 2
(dd2 3
$strdd3 S
)ddS T
)ddT U
;ddU V
tryee 
{ff 	
ifgg 
(gg 

IsVerifiedgg 
)gg 
returngg "
_UserServicegg# /
.gg/ 0(
ChangeUserVerificationStatusgg0 L
(ggL M
UserIdggM S
,ggS T
$numggU V
)ggV W
?ggX Y
awaitggZ _
Taskgg` d
.ggd e

FromResultgge o
(ggo p
Okggp r
(ggr s
$"ggs u
$str	ggu µ
{
ggµ ∂
UserId
gg∂ º
}
ggº Ω
"
ggΩ æ
)
ggæ ø
)
ggø ¿
:
gg¡ ¬

BadRequest
gg√ Õ
(
ggÕ Œ
Message
ggŒ ’
(
gg’ ÷
$"
gg÷ ÿ
$str
ggÿ ì
{
ggì î
UserId
ggî ö
}
ggö õ
"
ggõ ú
)
ggú ù
)
ggù û
;
ggû ü
elsehh 
returnhh 
_UserServicehh $
.hh$ %(
ChangeUserVerificationStatushh% A
(hhA B
UserIdhhB H
,hhH I
$numhhJ K
)hhK L
?hhM N
awaithhO T
TaskhhU Y
.hhY Z

FromResulthhZ d
(hhd e
Okhhe g
(hhg h
$"hhh j
$str	hhj ¨
{
hh¨ ≠
UserId
hh≠ ≥
}
hh≥ ¥
"
hh¥ µ
)
hhµ ∂
)
hh∂ ∑
:
hh∏ π

BadRequest
hh∫ ƒ
(
hhƒ ≈
Message
hh≈ Ã
(
hhÃ Õ
$"
hhÕ œ
$str
hhœ å
{
hhå ç
UserId
hhç ì
}
hhì î
"
hhî ï
)
hhï ñ
)
hhñ ó
;
hhó ò
}ii 	
catchjj 
(jj !
ItemNotFoundExceptionjj $
	exceptionjj% .
)jj. /
{kk 	
_loggerll 
.ll 
LogErrorll 
(ll 
HelperServicell *
.ll* +
LoggerMessagell+ 8
(ll8 9
$strll9 I
,llI J
$str	llK Å
,
llÅ Ç
	exception
llÉ å
,
llå ç
UserId
llé î
)
llî ï
)
llï ñ
;
llñ ó
returnmm 
NotFoundmm 
(mm 
$"mm 
{mm 
	exceptionmm (
.mm( )
Messagemm) 0
}mm0 1
"mm1 2
)mm2 3
;mm3 4
}nn 	
catchoo 
(oo 
	Exceptionoo 
	exceptionoo "
)oo" #
{pp 	
_loggerqq 
.qq 
LogErrorqq 
(qq 
HelperServiceqq *
.qq* +
LoggerMessageqq+ 8
(qq8 9
$strqq9 I
,qqI J
$str	qqK Å
,
qqÅ Ç
	exception
qqÉ å
,
qqå ç
UserId
qqé î
)
qqî ï
)
qqï ñ
;
qqñ ó
returnrr 
Problemrr 
(rr 
$"rr 
$strrr `
{rr` a
UserIdrra g
}rrg h
"rrh i
)rri j
;rrj k
}ss 	
}tt 
[
ãã 
	HttpPatch
ãã 
]
ãã 
public
åå 

async
åå 
Task
åå 
<
åå 
ActionResult
åå "
>
åå" #$
UpdateUserByIsReviewer
åå$ :
(
åå: ;
int
åå; >
UserId
åå? E
,
ååE F
bool
ååG K

IsReviewer
ååL V
)
ååV W
{
çç 
if
éé 

(
éé 
UserId
éé 
<=
éé 
$num
éé 
)
éé 
return
éé 

BadRequest
éé  *
(
éé* +
Message
éé+ 2
(
éé2 3
$str
éé3 S
)
ééS T
)
ééT U
;
ééU V
try
èè 
{
êê 	
return
ëë 
_UserService
ëë 
.
ëë $
UpdateUserByIsReviewer
ëë 5
(
ëë5 6
UserId
ëë6 <
,
ëë< =

IsReviewer
ëë> H
)
ëëH I
?
ëëJ K
await
ëëL Q
Task
ëëR V
.
ëëV W

FromResult
ëëW a
(
ëëa b
Ok
ëëc e
(
ëëe f
$"
ëëf h
$strëëh û
{ëëû ü
UserIdëëü •
}ëë• ¶
"ëë¶ ß
)ëëß ®
)ëë® ©
:ëë™ ´

BadRequestëë¨ ∂
(ëë∂ ∑
Messageëë∑ æ
(ëëæ ø
$"ëëø ¡
$strëë¡ Ä
{ëëÄ Å
UserIdëëÅ á
}ëëá à
"ëëà â
)ëëâ ä
)ëëä ã
;ëëã å
}
ìì 	
catch
îî 
(
îî #
ItemNotFoundException
îî $
	exception
îî% .
)
îî. /
{
ïï 	
_logger
ññ 
.
ññ 
LogError
ññ 
(
ññ 
HelperService
ññ *
.
ññ* +
LoggerMessage
ññ+ 8
(
ññ8 9
$str
ññ9 I
,
ññI J
$strññK Ç
,ññÇ É
	exceptionññÑ ç
,ññç é
UserIdññè ï
)ññï ñ
)ñññ ó
;ññó ò
return
óó 
NotFound
óó 
(
óó 
$"
óó 
{
óó 
	exception
óó (
.
óó( )
Message
óó) 0
}
óó0 1
"
óó1 2
)
óó2 3
;
óó3 4
}
òò 	
catch
ôô 
(
ôô 
	Exception
ôô 
	exception
ôô "
)
ôô" #
{
öö 	
_logger
õõ 
.
õõ 
LogError
õõ 
(
õõ 
HelperService
õõ *
.
õõ* +
LoggerMessage
õõ+ 8
(
õõ8 9
$str
õõ9 I
,
õõI J
$strõõK Ä
,õõÄ Å
	exceptionõõÇ ã
,õõã å
UserIdõõç ì
)õõì î
)õõî ï
;õõï ñ
return
úú 
Problem
úú 
(
úú 
$"
úú 
$str
úú ]
{
úú] ^
UserId
úú^ d
}
úúd e
"
úúe f
)
úúf g
;
úúg h
}
ùù 	
}
ûû 
[
ππ 

HttpDelete
ππ 
]
ππ 
public
∫∫ 

async
∫∫ 
Task
∫∫ 
<
∫∫ 
ActionResult
∫∫ "
>
∫∫" #

RemoveUser
∫∫$ .
(
∫∫. /
int
∫∫/ 2
UserId
∫∫3 9
)
∫∫9 :
{
ªª 
if
ºº 

(
ºº 
UserId
ºº 
<=
ºº 
$num
ºº 
)
ºº 
return
ºº 

BadRequest
ºº  *
(
ºº* +
Message
ºº+ 2
(
ºº2 3
$str
ºº3 S
)
ººS T
)
ººT U
;
ººU V
try
ΩΩ 
{
ææ 	
return
øø 
_UserService
øø 
.
øø  

RemoveUser
øø  *
(
øø* +
UserId
øø+ 1
)
øø1 2
?
øø3 4
await
øø5 :
Task
øø; ?
.
øø? @

FromResult
øø@ J
(
øøJ K
Ok
øøK M
(
øøM N
$str
øøN }
)
øø} ~
)
øø~ 
:øøÄ Å

BadRequestøøÇ å
(øøå ç
Messageøøç î
(øøî ï
$"øøï ó
$strøøó æ
{øøæ ø
UserIdøøø ≈
}øø≈ ∆
"øø∆ «
)øø« »
)øø» …
;øø…  
}
¿¿ 	
catch
¡¡ 
(
¡¡ #
ItemNotFoundException
¡¡ $
	exception
¡¡% .
)
¡¡. /
{
¬¬ 	
_logger
√√ 
.
√√ 
LogError
√√ 
(
√√ 
HelperService
√√ *
.
√√* +
LoggerMessage
√√+ 8
(
√√8 9
$str
√√9 I
,
√√I J
$str
√√K c
,
√√c d
	exception
√√e n
,
√√n o
UserId
√√p v
)
√√v w
)
√√w x
;
√√x y
return
ƒƒ 

BadRequest
ƒƒ 
(
ƒƒ 
Message
ƒƒ %
(
ƒƒ% &
$"
ƒƒ& (
{
ƒƒ( )
	exception
ƒƒ) 2
.
ƒƒ2 3
Message
ƒƒ3 :
}
ƒƒ: ;
"
ƒƒ; <
)
ƒƒ< =
)
ƒƒ= >
;
ƒƒ> ?
}
≈≈ 	
catch
∆∆ 
(
∆∆ 
	Exception
∆∆ 
	exception
∆∆ "
)
∆∆" #
{
«« 	
_logger
»» 
.
»» 
LogError
»» 
(
»» 
HelperService
»» *
.
»»* +
LoggerMessage
»»+ 8
(
»»8 9
$str
»»9 I
,
»»I J
$str
»»K c
,
»»c d
	exception
»»e n
,
»»n o
UserId
»»p v
)
»»v w
)
»»w x
;
»»x y
return
…… 
Problem
…… 
(
…… 
$"
…… 
$str
…… M
{
……M N
UserId
……N T
}
……T U
"
……U V
)
……V W
;
……W X
}
   	
}
ÀÀ 
[
⁄⁄ 
HttpGet
⁄⁄ 
]
⁄⁄ 
public
€€ 

async
€€ 
Task
€€ 
<
€€ 
ActionResult
€€ "
>
€€" #
GetUser
€€$ +
(
€€+ ,
)
€€, -
{
‹‹ 
int
›› 
UserId
›› 
=
›› 
GetCurrentUser
›› !
(
››! "
)
››" #
.
››# $
UserId
››$ *
;
››* +
try
ﬁﬁ 
{
ﬂﬂ 	
return
‡‡ 
await
‡‡ 
Task
‡‡ 
.
‡‡ 

FromResult
‡‡ (
(
‡‡( )
Ok
‡‡) +
(
‡‡+ ,
_UserService
‡‡- 9
.
‡‡9 :
GetUserByID
‡‡: E
(
‡‡E F
UserId
‡‡F L
)
‡‡L M
)
‡‡M N
)
‡‡N O
;
‡‡O P
}
‚‚ 	
catch
„„ 
(
„„ 
	Exception
„„ 
	exception
„„ "
)
„„" #
{
‰‰ 	
_logger
ÂÂ 
.
ÂÂ 
LogError
ÂÂ 
(
ÂÂ 
HelperService
ÂÂ *
.
ÂÂ* +
LoggerMessage
ÂÂ+ 8
(
ÂÂ8 9
$str
ÂÂ9 I
,
ÂÂI J
$str
ÂÂK V
,
ÂÂV W
	exception
ÂÂX a
,
ÂÂa b
UserId
ÂÂc i
)
ÂÂi j
)
ÂÂj k
;
ÂÂk l
return
ÊÊ 
Problem
ÊÊ 
(
ÊÊ 
$"
ÊÊ 
$str
ÊÊ L
{
ÊÊL M
UserId
ÊÊM S
}
ÊÊS T
"
ÊÊT U
)
ÊÊU V
;
ÊÊV W
}
ÁÁ 	
}
ËË 
[
ÄÄ 
HttpGet
ÄÄ 
]
ÄÄ 
public
ÅÅ 

async
ÅÅ 
Task
ÅÅ 
<
ÅÅ 
ActionResult
ÅÅ "
>
ÅÅ" #&
GetUsersByVerifyStatusId
ÅÅ$ <
(
ÅÅ< =
int
ÅÅ= @
VerifyStatusID
ÅÅA O
)
ÅÅO P
{
ÇÇ 
if
ÉÉ 

(
ÉÉ 
VerifyStatusID
ÉÉ 
<=
ÉÉ 
$num
ÉÉ 
||
ÉÉ  "
VerifyStatusID
ÉÉ# 1
>
ÉÉ2 3
$num
ÉÉ4 5
)
ÉÉ5 6
return
ÉÉ7 =

BadRequest
ÉÉ> H
(
ÉÉH I
Message
ÉÉI P
(
ÉÉP Q
$"
ÉÉQ S
$strÉÉS ö
{ÉÉö õ
VerifyStatusIDÉÉõ ©
}ÉÉ© ™
"ÉÉ™ ´
)ÉÉ´ ¨
)ÉÉ¨ ≠
;ÉÉ≠ Æ
try
ÑÑ 
{
ÖÖ 	
var
ÜÜ 
ListOfUsers
ÜÜ 
=
ÜÜ 
_UserService
ÜÜ *
.
ÜÜ* +$
GetUsersByVerifyStatus
ÜÜ+ A
(
ÜÜA B
VerifyStatusID
ÜÜB P
)
ÜÜP Q
;
ÜÜQ R
return
áá 
await
áá 
Task
áá 
.
áá 

FromResult
áá (
(
áá( )
Ok
áá) +
(
áá+ ,
ListOfUsers
áá, 7
)
áá7 8
)
áá8 9
;
áá9 :
}
àà 	
catch
ââ 
(
ââ 
	Exception
ââ 
	exception
ââ "
)
ââ" #
{
ää 	
_logger
ãã 
.
ãã 
LogError
ãã 
(
ãã 
HelperService
ãã *
.
ãã* +
LoggerMessage
ãã+ 8
(
ãã8 9
$str
ãã9 I
,
ããI J
$str
ããK y
,
ããy z
	exceptionãã{ Ñ
)ããÑ Ö
)ããÖ Ü
;ããÜ á
return
åå 
Problem
åå 
(
åå 
$"
åå 
$str
åå ]
{
åå] ^
VerifyStatusID
åå^ l
}
åål m
"
ååm n
)
åån o
;
ååo p
}
çç 	
}
éé 
[
•• 
HttpGet
•• 
]
•• 
public
¶¶ 

async
¶¶ 
Task
¶¶ 
<
¶¶ 
ActionResult
¶¶ "
>
¶¶" #"
GetUsersByUserRoleId
¶¶$ 8
(
¶¶8 9
int
¶¶9 <
RoleId
¶¶= C
)
¶¶C D
{
ßß 
if
®® 

(
®® 
RoleId
®® 
<=
®® 
$num
®® 
||
®® 
RoleId
®® !
>
®®" #
$num
®®$ %
)
®®% &
return
®®' -

BadRequest
®®. 8
(
®®8 9
Message
®®9 @
(
®®@ A
$"
®®A C
$str
®®C z
{
®®z {
RoleId®®{ Å
}®®Å Ç
"®®Ç É
)®®É Ñ
)®®Ñ Ö
;®®Ö Ü
try
©© 
{
™™ 	
var
´´ 
ListOfUsers
´´ 
=
´´ 
_UserService
´´ *
.
´´* +"
GetUsersByUserRoleID
´´+ ?
(
´´? @
RoleId
´´@ F
)
´´F G
;
´´G H
return
¨¨ 
await
¨¨ 
Task
¨¨ 
.
¨¨ 

FromResult
¨¨ (
(
¨¨( )
Ok
¨¨) +
(
¨¨+ ,
ListOfUsers
¨¨, 7
)
¨¨7 8
)
¨¨8 9
;
¨¨9 :
}
≠≠ 	
catch
ÆÆ 
(
ÆÆ 
	Exception
ÆÆ 
	exception
ÆÆ "
)
ÆÆ" #
{
ØØ 	
_logger
∞∞ 
.
∞∞ 
LogError
∞∞ 
(
∞∞ 
HelperService
∞∞ *
.
∞∞* +
LoggerMessage
∞∞+ 8
(
∞∞8 9
$str
∞∞9 I
,
∞∞I J
$str
∞∞K m
,
∞∞m n
	exception
∞∞o x
)
∞∞x y
)
∞∞y z
;
∞∞z {
return
±± 
Problem
±± 
(
±± 
$"
±± 
$str
±± U
{
±±U V
RoleId
±±V \
}
±±\ ]
"
±±] ^
)
±±^ _
;
±±_ `
}
≤≤ 	
}
≥≥ 
[
   
HttpGet
   
]
   
public
ÀÀ 

async
ÀÀ 
Task
ÀÀ 
<
ÀÀ 
ActionResult
ÀÀ "
>
ÀÀ" #"
GetUsersByIsReviewer
ÀÀ$ 8
(
ÀÀ8 9
bool
ÀÀ9 =

IsReviewer
ÀÀ> H
)
ÀÀH I
{
ÃÃ 
try
ŒŒ 
{
œœ 	
var
–– 
ListOfUsers
–– 
=
–– 
_UserService
–– *
.
––* +"
GetUsersByIsReviewer
––+ ?
(
––? @

IsReviewer
––@ J
)
––J K
;
––K L
return
—— 
await
—— 
Task
—— 
.
—— 

FromResult
—— (
(
——( )
Ok
——) +
(
——+ ,
ListOfUsers
——, 7
)
——7 8
)
——8 9
;
——9 :
}
““ 	
catch
”” 
(
”” 
	Exception
”” 
	exception
”” "
)
””" #
{
‘‘ 	
_logger
’’ 
.
’’ 
LogError
’’ 
(
’’ 
HelperService
’’ *
.
’’* +
LoggerMessage
’’+ 8
(
’’8 9
$str
’’9 I
,
’’I J
$str
’’K s
,
’’s t
	exception
’’u ~
)
’’~ 
)’’ Ä
;’’Ä Å
return
÷÷ 
Problem
÷÷ 
(
÷÷ 
$"
÷÷ 
$str
÷÷ Y
{
÷÷Y Z

IsReviewer
÷÷Z d
}
÷÷d e
"
÷÷e f
)
÷÷f g
;
÷÷g h
}
◊◊ 	
}
ÿÿ 
[
€€ 
HttpGet
€€ 
]
€€ 
[
€€ 
AllowAnonymous
€€ 
]
€€ 
public
‹‹ 

async
‹‹ 
Task
‹‹ 
<
‹‹ 
IActionResult
‹‹ #
>
‹‹# $

GetGenders
‹‹% /
(
‹‹/ 0
)
‹‹0 1
{
›› 
try
ﬁﬁ 
{
ﬂﬂ 	
return
‡‡ 
await
‡‡ 
Task
‡‡ 
.
‡‡ 

FromResult
‡‡ (
(
‡‡( )
Ok
‡‡) +
(
‡‡+ ,
_UserService
‡‡, 8
.
‡‡8 9

GetGenders
‡‡9 C
(
‡‡C D
)
‡‡D E
)
‡‡E F
)
‡‡F G
;
‡‡G H
}
·· 	
catch
‚‚ 
(
‚‚ 
	Exception
‚‚ 
	exception
‚‚ "
)
‚‚" #
{
„„ 	
_logger
‰‰ 
.
‰‰ 
LogError
‰‰ 
(
‰‰ 
HelperService
‰‰ *
.
‰‰* +
LoggerMessage
‰‰+ 8
(
‰‰8 9
$str
‰‰9 I
,
‰‰I J
$str
‰‰K Z
,
‰‰Z [
	exception
‰‰\ e
)
‰‰e f
)
‰‰f g
;
‰‰g h
return
ÂÂ 
Problem
ÂÂ 
(
ÂÂ 
$str
ÂÂ @
)
ÂÂ@ A
;
ÂÂA B
}
ÊÊ 	
}
ÁÁ 
[
ÎÎ 
HttpGet
ÎÎ 
]
ÎÎ 
[
ÎÎ 
AllowAnonymous
ÎÎ 
]
ÎÎ 
public
ÏÏ 

async
ÏÏ 
Task
ÏÏ 
<
ÏÏ 
IActionResult
ÏÏ #
>
ÏÏ# $
GetDesignations
ÏÏ% 4
(
ÏÏ4 5
)
ÏÏ5 6
{
ÌÌ 
try
ÓÓ 
{
ÔÔ 	
return
 
await
 
Task
 
.
 

FromResult
 (
(
( )
Ok
) +
(
+ ,
_UserService
, 8
.
8 9
GetDesignations
9 H
(
H I
)
I J
)
J K
)
K L
;
L M
}
ÛÛ 	
catch
ÙÙ 
(
ÙÙ 
	Exception
ÙÙ 
	exception
ÙÙ "
)
ÙÙ" #
{
ıı 	
_logger
ˆˆ 
.
ˆˆ 
LogError
ˆˆ 
(
ˆˆ 
HelperService
ˆˆ *
.
ˆˆ* +
LoggerMessage
ˆˆ+ 8
(
ˆˆ8 9
$str
ˆˆ9 I
,
ˆˆI J
$str
ˆˆK _
,
ˆˆ_ `
	exception
ˆˆa j
)
ˆˆj k
)
ˆˆk l
;
ˆˆl m
return
˜˜ 
Problem
˜˜ 
(
˜˜ 
$str
˜˜ >
)
˜˜> ?
;
˜˜? @
}
¯¯ 	
}
˘˘ 
[
áá 
HttpGet
áá 
]
áá 
[
áá 
AllowAnonymous
áá 
]
áá 
public
àà 

async
àà 
Task
àà 
<
àà 
IActionResult
àà #
>
àà# $
GetDepartments
àà% 3
(
àà3 4
)
àà4 5
{
ââ 
try
ää 
{
ãã 	
return
åå 
await
åå 
Task
åå 
.
åå 

FromResult
åå (
(
åå( )
Ok
åå) +
(
åå+ ,
_UserService
åå, 8
.
åå8 9
GetDepartments
åå9 G
(
ååG H
)
ååH I
)
ååI J
)
ååJ K
;
ååK L
}
çç 	
catch
éé 
(
éé 
	Exception
éé 
	exception
éé "
)
éé" #
{
èè 	
_logger
êê
 
.
êê 
LogError
êê 
(
êê 
HelperService
êê (
.
êê( )
LoggerMessage
êê) 6
(
êê6 7
$str
êê7 G
,
êêG H
$str
êêI \
,
êê\ ]
	exception
êê^ g
)
êêg h
)
êêh i
;
êêi j
return
ëë
 
Problem
ëë 
(
ëë 
$str
ëë >
)
ëë> ?
;
ëë? @
}
íí 	
}
ìì 
}óó ¸
cC:\Users\manimaran.venkat\Documents\Backup\AspireOverflow\CustomExceptions\ItemNotFoundException.cs
	namespace 	
AspireOverflow
 
. 
CustomExceptions )
{ 
public 

class !
ItemNotFoundException &
:' (
	Exception) 2
{ 
public !
ItemNotFoundException $
($ %
)% &
:' (
base) -
(- .
$str. >
)> ?
{@ A
}B C
public		 !
ItemNotFoundException		 $
(		$ %
string		% +
message		, 3
)		3 4
:		5 6
base		7 ;
(		; <
message		< C
)		C D
{		E F
}		G H
public !
ItemNotFoundException $
($ %
string% +
message, 3
,3 4
	Exception5 >
innerException? M
)M N
:O P
baseQ U
(U V
messageV ]
,] ^
innerException_ m
)m n
{o p
}q r
} 
} œB
jC:\Users\manimaran.venkat\Documents\Backup\AspireOverflow\DataAccessLayer\Context\AspireOverflowContext.cs
	namespace 	
AspireOverflow
 
. 
DataAccessLayer (
{ 
public 

class !
AspireOverflowContext &
:' (
	DbContext) 2
{ 
public

 !
AspireOverflowContext

 $
(

$ %
DbContextOptions

% 5
<

5 6!
AspireOverflowContext

6 K
>

K L
options

M T
)

T U
:

V W
base

X \
(

\ ]
options

] d
)

d e
{ 	
} 	
public 
virtual 
DbSet 
< 
User !
>! "
Users# (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
=7 8
null9 =
!= >
;> ?
public 
virtual 
DbSet 
< 
UserRole %
>% &
	UserRoles' 0
{1 2
get3 6
;6 7
set8 ;
;; <
}= >
=? @
nullA E
!E F
;F G
public 
DbSet 
< 
Query 
> 
Queries #
{$ %
get& )
;) *
set+ .
;. /
}0 1
=2 3
null4 8
!8 9
;9 :
public 
DbSet 
< 
QueryComment !
>! "
QueryComments# 0
{1 2
get3 6
;6 7
set8 ;
;; <
}= >
=? @
nullA E
!E F
;F G
public 
virtual 
DbSet 
< 

Department '
>' (
Departments) 4
{5 6
get7 :
;: ;
set< ?
;? @
}A B
=C D
nullE I
!I J
;J K
public 
virtual 
DbSet 
< 
Designation (
>( )
Designations* 6
{7 8
get9 <
;< =
set> A
;A B
}C D
=E F
nullG K
!K L
;L M
public 
virtual 
DbSet 
< 
Gender #
># $
Genders% ,
{- .
get/ 2
;2 3
set4 7
;7 8
}9 :
=; <
null= A
!A B
;B C
public 
virtual 
DbSet 
< 
Spam 
> 
Spams  %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
=4 5
null6 :
!: ;
;; <
public 
virtual 
DbSet 
< 
PrivateArticle +
>+ ,
PrivateArticles- <
{= >
get? B
;B C
setD G
;G H
}I J
=K L
nullM Q
!Q R
;R S
public 
virtual 
DbSet 
< 
ArticleLike (
>( )
ArticleLikes* 6
{7 8
get9 <
;< =
set> A
;A B
}C D
=E F
nullG K
!K L
;L M
public 	
DbSet
 
< 
Article 
> 
Articles !
{" #
get$ '
;' (
set) ,
;, -
}. /
=0 1
null2 6
!6 7
;7 8
public 
DbSet 
< 
ArticleComment #
># $
ArticleComments% 4
{5 6
get7 :
;: ;
set< ?
;? @
}A B
=C D
nullE I
!I J
;J K
	protected   
override   
void   
OnModelCreating    /
(  / 0
ModelBuilder  0 <
modelBuilder  = I
)  I J
{!! 	
modelBuilder## 
.## 
Entity## 
<## 
Gender## "
>##" #
(### $
entity##$ *
=>##+ -
{$$ 
entity%%  
.%%  !
HasData%%! (
(%%( )
new%%) ,
Gender%%- 3
{%%4 5
GenderId%%6 >
=%%? @
$num%%A B
,%%B C
Name%%D H
=%%I J
$str%%K Q
}%%R S
)%%S T
;%%T U
entity&&  
.&&  !
HasData&&! (
(&&( )
new&&) ,
Gender&&- 3
{&&4 5
GenderId&&6 >
=&&? @
$num&&A B
,&&B C
Name&&D H
=&&I J
$str&&K S
}&&T U
)&&U V
;&&V W
}'' 
)'' 
;'' 
modelBuilder)) 
.)) 
Entity)) 
<))  
VerifyStatus))  ,
>)), -
())- .
entity)). 4
=>))5 7
{** 
entity++ 
.++ 
HasData++ 
(++ 
new++ "
VerifyStatus++# /
{++0 1
VerifyStatusID++2 @
=++A B
$num++C D
,++D E
Name++F J
=++K L
$str++M W
}++X Y
)++Y Z
;++Z [
entity,, 
.,, 
HasData,, 
(,, 
new,, "
VerifyStatus,,# /
{,,0 1
VerifyStatusID,,2 @
=,,A B
$num,,C D
,,,D E
Name,,F J
=,,K L
$str,,M W
},,X Y
),,Y Z
;,,Z [
entity-- 
.-- 
HasData-- 
(-- 
new-- "
VerifyStatus--# /
{--0 1
VerifyStatusID--2 @
=--A B
$num--C D
,--D E
Name--F J
=--K L
$str--M Z
}--[ \
)--\ ]
;--] ^
}.. 
).. 
;.. 
modelBuilder00 
.00 
Entity00 
<00  
UserRole00  (
>00( )
(00) *
entity00* 0
=>001 3
{11 
entity22 
.22 
HasData22 
(22 
new22 !
UserRole22" *
{22+ ,

UserRoleId22- 7
=228 9
$num22: ;
,22; <
RoleName22= E
=22F G
$str22H O
}22P Q
)22Q R
;22R S
entity33 
.33 
HasData33 
(33 
new33 !
UserRole33" *
{33+ ,

UserRoleId33- 7
=338 9
$num33: ;
,33; <
RoleName33= E
=33F G
$str33H N
}33O P
)33P Q
;33Q R
}55 
)55 
;55 
modelBuilder66 
.66 
Entity66  
<66  !
ArticleStatus66! .
>66. /
(66/ 0
entity660 6
=>667 9
{77 
entity88 
.88 
HasData88 
(88 
new88 "
ArticleStatus88# 0
{881 2
ArticleStatusID883 B
=88C D
$num88E F
,88F G
Status88H N
=88O P
$str88Q Z
}88[ \
)88\ ]
;88] ^
entity99 
.99 
HasData99 
(99 
new99 "
ArticleStatus99# 0
{991 2
ArticleStatusID993 B
=99C D
$num99E F
,99F G
Status99H N
=99O P
$str99Q a
}99b c
)99c d
;99d e
entity:: 
.:: 
HasData:: 
(:: 
new:: "
ArticleStatus::# 0
{::1 2
ArticleStatusID::3 B
=::C D
$num::E F
,::F G
Status::H N
=::O P
$str::Q _
}::` a
)::a b
;::b c
entity;; 
.;; 
HasData;; 
(;;  
new;;  #
ArticleStatus;;$ 1
{;;2 3
ArticleStatusID;;4 C
=;;D E
$num;;F G
,;;G H
Status;;I O
=;;P Q
$str;;R ]
};;^ _
);;_ `
;;;` a
}<< 
)<< 
;<< 
}>> 	
}?? 
}@@ æ
qC:\Users\manimaran.venkat\Documents\Backup\AspireOverflow\DataAccessLayer\Factory\AspireOverflowContextFactory.cs
	namespace 	
AspireOverflow
 
. 
DataAccessLayer (
{ 
public 

class (
AspireOverflowContextFactory -
{

 
private !
AspireOverflowContext &
?& '"
_aspireOverflowContext( >
;> ?
public !
AspireOverflowContext %*
GetAspireOverflowContextObject& D
(D E
)E F
{ 	
var 
optionsBuilder 
=  
new! $#
DbContextOptionsBuilder% <
<< =!
AspireOverflowContext= R
>R S
(S T
)T U
;U V
try 
{ 
IConfigurationRoot "
configuration# 0
=1 2
new3 6 
ConfigurationBuilder7 K
(K L
)L M
. 
SetBasePath 
( 
	AppDomain &
.& '
CurrentDomain' 4
.4 5
BaseDirectory5 B
)B C
. 
AddJsonFile 
( 
$str /
)/ 0
. 
Build 
( 
) 
; 
var 
connectionString $
=% &
configuration' 4
.4 5
GetConnectionString5 H
(H I
$strI R
)R S
;S T
optionsBuilder 
. 
UseSqlServer +
(+ ,
connectionString, <
??) +
throw, 1
new2 5"
NullReferenceException6 L
(L M
$"- /
$str/ S
{S T
nameofT Z
(Z [
connectionString[ k
)k l
}l m
"m n
)n o
)o p
;p q"
_aspireOverflowContext (
=) *
new, /!
AspireOverflowContext0 E
(E F
optionsBuilderF T
.T U
OptionsU \
)\ ]
;] ^
return "
_aspireOverflowContext /
;/ 0
} 
catch 
( 
	Exception 
	exception &
)& '
{   
Console!! 
.!! 
	WriteLine!! !
(!!! "
	exception!!" +
.!!+ ,
Message!!, 3
)!!3 4
;!!4 5
throw"" 
;"" 
}## 
}(( 	
}** 
},, ¬
jC:\Users\manimaran.venkat\Documents\Backup\AspireOverflow\DataAccessLayer\Interfaces\IArticleRepository.cs
	namespace 	
AspireOverflow
 
. 
DataAccessLayer (
.( )

Interfaces) 3
{ 
public 

	interface 
IArticleRepository '
:( )
IArticleComment* 9
,9 :
IArticleLike; G
{ 
bool 

AddArticle 
( 
Article 
article  '
)' (
;( )
public		
 
bool		 
AddPrivateArticle		 '
(		' (
Article		( /
article		0 7
,		7 8
List		9 =
<		= >
int		> A
>		A B
SharedUsersId		C P
)		P Q
;		Q R
bool

 
UpdateArticle

 
(

 
int

 
	ArticleId

 (
,

( )
int

* -
ArticleStatusID

. =
,

= >
int

> A
UpdatedByUserId

B Q
)

Q R
;

R S
bool 
UpdateArticle 
( 
Article "
article# *
)* +
;+ ,
Article 
GetArticleByID 
( 
int "
	ArticleId# ,
), -
;- .
bool 
DeleteArticle 
( 
int 
	ArticleId #
)# $
;$ %
IEnumerable 
< 
Article 
> 
GetArticles (
(( )
)) *
;* +
public
 
IEnumerable 
< 
PrivateArticle +
>+ ,
GetPrivateArticles- ?
(? @
)@ A
;A B
} 
public 

	interface 
IArticleComment $
{ 
IEnumerable 
< 
ArticleComment "
>" #
GetComments$ /
(/ 0
)0 1
;1 2
bool 

AddComment 
( 
ArticleComment &
comment' .
). /
;/ 0
} 
public 

	interface 
IArticleLike !
{ 
public 
bool 
AddLike 
( 
ArticleLike '
like( ,
), -
;- .
public 
IEnumerable 
< 
ArticleLike &
>& '
GetLikes( 0
(0 1
)1 2
;2 3
}   
}!! Ÿ
gC:\Users\manimaran.venkat\Documents\Backup\AspireOverflow\DataAccessLayer\Interfaces\IArticleService.cs
	namespace 	
AspireOverflow
 
. 
DataAccessLayer (
.( )

Interfaces) 3
{ 
public 

	interface 
IArticleService $
:% &"
IArticleCommentService' =
,= >
IArticleLikeService? R
{ 
bool		 
CreateArticle		 
(		 
Article		 "
article		# *
,		* +
List		, 0
<		0 1
int		1 4
>		4 5
?		5 6
SharedUsersId		7 D
=		E F
default		G N
!		N O
)		O P
;		P Q
bool

 $
DeleteArticleByArticleId

 %
(

% &
int

& )
	ArticleId

* 3
)

3 4
;

4 5
bool 
ChangeArticleStatus  
(  !
int! $
	ArticleID% .
,. /
int0 3
ArticleStatusID4 C
,C D
intE H
UserIdI O
)O P
;P Q
bool 
UpdateArticle 
( 
Article "
article# *
,* +
int, /
_currentUserId0 >
)> ?
;? @
Object 
GetArticleById 
( 
int !
	ArticleId" +
)+ ,
;, -
IEnumerable 
< 
Object 
> 
GetTrendingArticles /
(/ 0
)0 1
;1 2
IEnumerable 
< 
Object 
> 
GetLatestArticles -
(- .
). /
;/ 0
IEnumerable 
< 
Object 
> 
GetListOfArticles -
(- .
). /
;/ 0
IEnumerable 
< 
Object 
> 
GetPrivateArticles .
(. /
int/ 2
UserId3 9
)9 :
;: ;
IEnumerable 
< 
Object 
> 
GetArticlesByTitle .
(. /
string/ 5
Title6 ;
); <
;< =
IEnumerable 
< 
Object 
> 
GetArticlesByAuthor /
(/ 0
string0 6

AuthorName7 A
)A B
;B C
IEnumerable 
< 
Object 
> 
GetArticlesByUserId /
(/ 0
int0 3
UserId4 :
): ;
;; <
IEnumerable 
< 
Article 
> 
GetAll #
(# $
)$ %
;% &
IEnumerable 
< 
Object 
> #
GetArticlesByReviewerId 3
(3 4
int4 7

ReviewerId8 B
)B C
;C D
IEnumerable 
< 
object 
> (
GetArticlesByArticleStatusId 8
(8 9
int9 <
ArticleStatusID= L
)L M
;M N
} 
public   

	interface   "
IArticleCommentService   +
{!! 
bool"" 
CreateComment"" 
("" 
ArticleComment"" )
comment""* 1
)""1 2
;""2 3
IEnumerable## 
<## 
object## 
>## 
GetComments## '
(##' (
int##( +
	ArticleID##, 5
)##5 6
;##6 7
}%% 
public'' 

	interface'' 
IArticleLikeService'' (
{(( 
bool)) 
AddLikeToArticle)) 
()) 
ArticleLike)) )
Like))* .
))). /
;))/ 0
int** 
GetLikesCount** 
(** 
int** 
	ArticleID** '
)**' (
;**( )
},, 
}-- Ù
eC:\Users\manimaran.venkat\Documents\Backup\AspireOverflow\DataAccessLayer\Interfaces\IEmailService.cs
	namespace 	
AspireOverflow
 
. 
DataAccessLayer (
.( )

Interfaces) 3
{3 4
public 

	interface 
IEmailService "
{ 
Task 
SendEmailAsync	 
( 
MailRequest #
mailRequest$ /
)/ 0
;0 1
} 
} ¬
hC:\Users\manimaran.venkat\Documents\Backup\AspireOverflow\DataAccessLayer\Interfaces\IQueryRepository.cs
	namespace 	
AspireOverflow
 
. 
DataAccessLayer (
.( )

Interfaces) 3
{ 
public 

	interface 
IQueryRepository %
:& '#
IQueryCommentRepository( ?
,? @!
ISpamReportRepository@ U
{ 
bool	 
AddQuery 
( 
Query 
query "
)" #
;# $
bool	 
UpdateQuery 
( 
int 
QueryId %
,% &
bool' +
IsSolved, 4
=5 6
false7 <
,< =
bool> B
IsDeleteC K
=L M
falseN S
)S T
;T U
Query	 
GetQueryByID 
( 
int 
QueryId  '
)' (
;( )
IEnumerable	 
< 
Query 
> 

GetQueries &
(& '
)' (
;( )
} 
public 

	interface #
IQueryCommentRepository ,
{ 
IEnumerable	 
< 
QueryComment !
>! "
GetComments# .
(. /
)/ 0
;0 1
bool	 

AddComment 
( 
QueryComment %
comment& -
)- .
;. /
} 
public 
	interface !
ISpamReportRepository +
{ 
IEnumerable	 
< 
Spam 
> 
GetSpams #
(# $
)$ %
;% &
bool  	 
AddSpam   
(   
Spam   
spam   
)    
;    !
bool""	 

UpdateSpam"" 
("" 
int"" 
SpamId"" #
,""# $
int""% (
VerifyStatusID"") 7
)""7 8
;""8 9
}$$ 
}%%  
eC:\Users\manimaran.venkat\Documents\Backup\AspireOverflow\DataAccessLayer\Interfaces\IQueryService.cs
	namespace 	
AspireOverflow
 
. 
DataAccessLayer (
.( )

Interfaces) 3
{ 
public 

	interface 
IQueryService "
:# $ 
IQueryCommentService% 9
,9 :
IQuerySpamService; L
{ 
bool 
CreateQuery 
( 
Query 
query $
)$ %
;% &
bool		  
RemoveQueryByQueryId		 !
(		! "
int		" %
QueryId		& -
)		- .
;		. /
bool

 
MarkQueryAsSolved

 
(

 
int

 "
QueryId

# *
)

* +
;

+ ,
Object 
GetQuery 
( 
int 
QueryID #
)# $
;$ %
IEnumerable 
< 
Object 
> 
GetListOfQueries ,
(, -
)- .
;. /
IEnumerable 
< 
Object 
> 
GetTrendingQueries .
(. /
)/ 0
;0 1
IEnumerable 
< 
Object 
> 
GetLatestQueries ,
(, -
)- .
;. /
IEnumerable 
< 
Object 
> 
GetQueriesByUserId .
(. /
int/ 2
UserId3 9
)9 :
;: ;
IEnumerable 
< 
Object 
> 
GetQueriesByTitle -
(- .
String. 4
Title5 :
): ;
;; <
IEnumerable 
< 
Object 
> 

GetQueries &
(& '
bool' +
IsSolved, 4
)4 5
;5 6
} 
public 

	interface  
IQueryCommentService )
{ 
bool 
CreateComment 
( 
QueryComment '
comment( /
)/ 0
;0 1
IEnumerable 
< 
Object 
> 
GetComments '
(' (
int( +
QueryId, 3
)3 4
;4 5
} 
public!! 

	interface!! 
IQuerySpamService!! &
{"" 
bool## 
AddSpam## 
(## 
Spam## 
spam## 
)## 
;##  
IEnumerable$$ 
<$$ 
object$$ 
>$$ 
GetSpams$$ $
($$$ %
int$$% (
VerifyStatusID$$) 7
)$$7 8
;$$8 9
bool%% 
ChangeSpamStatus%% 
(%% 
int%% !
QueryId%%" )
,%%) *
int%%+ .
VerifyStatusID%%/ =
)%%= >
;%%> ?
}'' 
})) á
eC:\Users\manimaran.venkat\Documents\Backup\AspireOverflow\DataAccessLayer\Interfaces\ITokenService.cs
	namespace 	
AspireOverflow
 
. 
DataAccessLayer (
.( )

Interfaces) 3
{3 4
public 
	interface 
ITokenService 
{ 
public 
object 
GenerateToken "
(" #
Login# (
Credentials) 4
)4 5
;5 6
} 
}

 Ë
gC:\Users\manimaran.venkat\Documents\Backup\AspireOverflow\DataAccessLayer\Interfaces\IUserRepository.cs
	namespace 	
AspireOverflow
 
. 
DataAccessLayer (
.( )

Interfaces) 3
{ 
public 

	interface 
IUserRepository $
{ 
public 
bool 

CreateUser 
( 
User #
User$ (
)( )
;) *
public 
User 
GetUserByID 
(  
int  #
UserId$ *
)* +
;+ ,
public 
IEnumerable 
< 
User 
>  
GetUsers! )
() *
)* +
;+ ,
public 
bool $
UpdateUserByVerifyStatus ,
(, -
int- 0
UserId1 7
,7 8
int9 <
VerifyStatusID= K
)K L
;L M
public 
bool  
UpdateUserByReviewer (
(( )
int) ,
UserId- 3
,3 4
bool5 9

IsReviewer: D
)D E
;E F
public 
bool 

RemoveUser 
( 
int "
UserId# )
)) *
;* +
public 
IEnumerable 
< 

Department %
>% &
GetDepartments' 5
(5 6
)6 7
;7 8
public 
IEnumerable 
< 
Gender !
>! "

GetGenders# -
(- .
). /
;/ 0
public	 
IEnumerable 
< 
Designation '
>' (
GetDesignations) 8
(8 9
)9 :
;: ;
} 
} «
dC:\Users\manimaran.venkat\Documents\Backup\AspireOverflow\DataAccessLayer\Interfaces\IUserService.cs
	namespace 	
AspireOverflow
 
. 
DataAccessLayer (
.( )

Interfaces) 3
{ 
public 

	interface 
IUserService !
:" #
IDesignations$ 1
,1 2
IGenders3 ;
{ 
public 
bool 

CreateUser 
( 
User #
user$ (
)( )
;) *
public 
bool 

RemoveUser 
( 
int "
UserId# )
)) *
;* +
public		 
bool		 "
UpdateUserByIsReviewer		 *
(		* +
int		+ .
UserId		/ 5
,		5 6
bool		7 ;

IsReviewer		< F
)		F G
;		G H
public

 
User

 
GetUser

 
(

 
string

 "
Email

# (
,

( )
string

* 0
Password

1 9
)

9 :
;

: ;
public 
IEnumerable 
< 
User 
>  
GetUsers! )
() *
)* +
;+ ,
public 
IEnumerable 
< 
Object !
>! ""
GetUsersByVerifyStatus# 9
(9 :
int: =
VerifyStatusID> L
)L M
;M N
public 
object 
GetUserByID !
(! "
int" %
UserID& ,
), -
;- .
public 
IEnumerable 
< 
Object !
>! " 
GetUsersByUserRoleID# 7
(7 8
int8 ;

UserRoleID< F
)F G
;G H
public 
bool (
ChangeUserVerificationStatus 0
(0 1
int1 4
UserID5 ;
,; <
int= @
VerifyStatusIDA O
)O P
;P Q
public 
IEnumerable 
< 
Object !
>! " 
GetUsersByIsReviewer# 7
(7 8
bool8 <

IsReviewer= G
)G H
;H I
} 
public 

	interface 
IDesignations "
{ 
public 
IEnumerable 
< 
Object !
>! "
GetDesignations# 2
(2 3
)3 4
;4 5
public 
IEnumerable 
< 
Object !
>! "
GetDepartments# 1
(1 2
)2 3
;3 4
} 
public 

	interface 
IGenders 
{ 
public 
IEnumerable 
< 
Object !
>! "

GetGenders# -
(- .
). /
;/ 0
} 
} û†
iC:\Users\manimaran.venkat\Documents\Backup\AspireOverflow\DataAccessLayer\Repository\ArticleRepository.cs
	namespace 	
AspireOverflow
 
. 
DataAccessLayer (
{		 
public

 

class

 
ArticleRepository

 "
:

# $
IArticleRepository

% 7
{ 
private 
readonly !
AspireOverflowContext .
_context/ 7
;7 8
private 
readonly 
ILogger  
<  !
ArticleRepository! 2
>2 3
_logger4 ;
;; <
public 
ArticleRepository  
(  !!
AspireOverflowContext! 6
context7 >
,> ?
ILogger@ G
<G H
ArticleRepositoryH Y
>Y Z
logger[ a
)a b
{ 	
_context 
= 
context 
; 
_logger 
= 
logger 
; 
} 	
public 
bool 

AddArticle 
( 
Article &
article' .
). /
{ 	

Validation 
. 
ValidateArticle &
(& '
article' .
). /
;/ 0
try 
{ 
_context 
. 
Articles !
.! "
Add" %
(% &
article& -
)- .
;. /
_context 
. 
SaveChanges $
($ %
)% &
;& '
return 
true 
; 
}   
catch!! 
(!! 
	Exception!! 
	exception!! &
)!!& '
{"" 
_logger## 
.## 
LogError##  
(##  !
HelperService##! .
.##. /
LoggerMessage##/ <
(##< =
$str##= P
,##P Q
$str##R o
,##o p
	exception##q z
,##z {
article	##| É
)
##É Ñ
)
##Ñ Ö
;
##Ö Ü
return%% 
false%% 
;%% 
}(( 
})) 	
public++ 
bool++ 
AddPrivateArticle++ %
(++% &
Article++& -
article++. 5
,++5 6
List++7 ;
<++; <
int++< ?
>++? @
SharedUsersId++A N
)++N O
{,, 	

Validation-- 
.-- 
ValidateArticle-- &
(--& '
article--' .
)--. /
;--/ 0
try.. 
{// 
var00 
entry00 
=00 
_context00 $
.00$ %
Articles00% -
.00- .
Add00. 1
(001 2
article002 9
)009 :
;00: ;
_context11 
.11 
SaveChanges11 $
(11$ %
)11% &
;11& '
if22 
(22 
article22 
.22 
	IsPrivate22 %
&&22& (
SharedUsersId22) 6
!=227 9
null22: >
&&22? A
SharedUsersId22B O
.22O P
Count22P U
>22V W
$num22X Y
)22Y Z
{33 
SharedUsersId44 !
.44! "
ForEach44" )
(44) *
item44* .
=>44/ 1
_context442 :
.44: ;
PrivateArticles44; J
.44J K
AddAsync44K S
(44S T
new44T W
PrivateArticle44X f
(44f g
entry44g l
.44l m
Entity44m s
.44s t
ArtileId44t |
,44| }
item	44~ Ç
)
44Ç É
)
44É Ñ
)
44Ñ Ö
;
44Ö Ü
_context55 
.55 
SaveChanges55 (
(55( )
)55) *
;55* +
}66 
return88 
true88 
;88 
}99 
catch:: 
(:: 
	Exception:: 
	exception:: &
)::& '
{;; 
_logger<< 
.<< 
LogError<<  
(<<  !
HelperService<<! .
.<<. /
LoggerMessage<</ <
(<<< =
$str<<= P
,<<P Q
$str	<<R è
,
<<è ê
	exception
<<ë ö
,
<<ö õ
article
<<ú £
)
<<£ §
)
<<§ •
;
<<• ¶
return>> 
false>> 
;>> 
}@@ 
}AA 	
publicCC 
boolCC 
UpdateArticleCC !
(CC! "
ArticleCC" )
articleCC* 1
)CC1 2
{DD 	

ValidationEE 
.EE 
ValidateArticleEE &
(EE& '
articleEE' .
)EE. /
;EE/ 0
tryFF 
{GG 
_contextHH 
.HH 
ArticlesHH !
.HH! "
UpdateHH" (
(HH( )
articleHH) 0
)HH0 1
;HH1 2
_contextII 
.II 
SaveChangesII $
(II$ %
)II% &
;II& '
returnJJ 
trueJJ 
;JJ 
}KK 
catchLL 
(LL 
	ExceptionLL 
	exceptionLL &
)LL& '
{MM 
_loggerNN 
.NN 
LogErrorNN  
(NN  !
HelperServiceNN! .
.NN. /
LoggerMessageNN/ <
(NN< =
$strNN= P
,NNP Q
$strNNR r
,NNr s
	exceptionNNt }
,NN} ~
article	NN Ü
)
NNÜ á
)
NNá à
;
NNà â
returnPP 
falsePP 
;PP 
}SS 
}TT 	
publicVV 
boolVV 
UpdateArticleVV !
(VV! "
intVV" %
	ArticleIdVV& /
,VV/ 0
intVV1 4
ArticleStatusIDVV5 D
,VVD E
intVVF I
UpdatedByUserIdVVJ Y
)VVY Z
{WW 	
ifYY 
(YY 
	ArticleIdYY 
<=YY 
$numYY 
)YY 
throwYY  %
newYY& )
ArgumentExceptionYY* ;
(YY; <
$"YY< >
$strYY> p
{YYp q
	ArticleIdYYq z
}YYz {
"YY{ |
)YY| }
;YY} ~
ifZZ 
(ZZ 
ArticleStatusIDZZ 
<=ZZ  "
$numZZ# $
||ZZ% '
ArticleStatusIDZZ( 7
>ZZ8 9
$numZZ: ;
)ZZ; <
throwZZ= B
newZZC F
ArgumentExceptionZZG X
(ZZX Y
$"ZZY [
$str	ZZ[ ï
{
ZZï ñ
ArticleStatusID
ZZñ •
}
ZZ• ¶
"
ZZ¶ ß
)
ZZß ®
;
ZZ® ©
try[[ 
{\\ 
var]] 
ExistingArticle]] #
=]]$ %
GetArticleByID]]& 4
(]]4 5
	ArticleId]]5 >
)]]> ?
;]]? @
ExistingArticle^^ 
.^^  
ArticleStatusID^^  /
=^^0 1
ArticleStatusID^^2 A
;^^A B
ExistingArticle__ 
.__  
	UpdatedOn__  )
=__* +
DateTime__, 4
.__4 5
Now__5 8
;__8 9
ExistingArticle`` 
.``  
	UpdatedBy``  )
=``* +
UpdatedByUserId``, ;
;``; <
_contextdd 
.dd 
Articlesdd !
.dd! "
Updatedd" (
(dd( )
ExistingArticledd) 8
)dd8 9
;dd9 :
_contextee 
.ee 
SaveChangesee $
(ee$ %
)ee% &
;ee& '
returnff 
trueff 
;ff 
}gg 
catchhh 
(hh 
	Exceptionhh 
	exceptionhh &
)hh& '
{ii 
_loggerjj 
.jj 
LogErrorjj  
(jj  !
HelperServicejj! .
.jj. /
LoggerMessagejj/ <
(jj< =
$strjj= P
,jjP Q
$str	jjR ö
,
jjö õ
	exception
jjú •
)
jj• ¶
)
jj¶ ß
;
jjß ®
returnkk 
falsekk 
;kk 
}mm 
}nn 	
publicpp 
boolpp 
DeleteArticlepp !
(pp! "
intpp" %
	ArticleIdpp& /
)pp/ 0
{qq 	
ifrr 
(rr 
	ArticleIdrr 
<=rr 
$numrr 
)rr 
throwrr  %
newrr& )
ArgumentExceptionrr* ;
(rr; <
$"rr< >
$strrr> p
{rrp q
	ArticleIdrrq z
}rrz {
"rr{ |
)rr| }
;rr} ~
tryss 
{tt 
varuu  
ExistingDraftArticleuu (
=uu) *
GetArticlesuu+ 6
(uu6 7
)uu7 8
.uu8 9
ToListuu9 ?
(uu? @
)uu@ A
.uuA B
FinduuB F
(uuF G
itemuuG K
=>uuL N
itemuuO S
.uuS T
ArtileIduuT \
==uu] _
	ArticleIduu` i
&&uuj l
itemuum q
.uuq r
ArticleStatusID	uur Å
==
uuÇ Ñ
$num
uuÖ Ü
)
uuÜ á
;
uuá à
ifvv 
(vv  
ExistingDraftArticlevv (
==vv) +
nullvv, 0
)vv0 1
throwvv2 7
newvv8 ;!
ItemNotFoundExceptionvv< Q
(vvQ R
$"vvR T
$strvvT z
{vvz {
	ArticleId	vv{ Ñ
}
vvÑ Ö
"
vvÖ Ü
)
vvÜ á
;
vvá à
_contextxx 
.xx 
Articlesxx !
.xx! "
Removexx" (
(xx( ) 
ExistingDraftArticlexx) =
)xx= >
;xx> ?
_contextyy 
.yy 
SaveChangesyy $
(yy$ %
)yy% &
;yy& '
returnzz 
truezz 
;zz 
}|| 
catch}} 
(}} 
	Exception}} 
	exception}} &
)}}& '
{~~ 
_logger 
. 
LogError  
(  !
HelperService! .
.. /
LoggerMessage/ <
(< =
$str= P
,P Q
$strR p
,p q
	exceptionr {
,{ |
	ArticleId	} Ü
)
Ü á
)
á à
;
à â
return
ÄÄ 
false
ÄÄ 
;
ÄÄ 
}
ÇÇ 
}
ÉÉ 	
public
ÑÑ 
Article
ÑÑ 
GetArticleByID
ÑÑ %
(
ÑÑ% &
int
ÑÑ& )
	ArticleId
ÑÑ* 3
)
ÑÑ3 4
{
ÖÖ 	
if
ÜÜ 
(
ÜÜ 
	ArticleId
ÜÜ 
<=
ÜÜ 
$num
ÜÜ 
)
ÜÜ 
throw
ÜÜ  %
new
ÜÜ& )
ArgumentException
ÜÜ* ;
(
ÜÜ; <
$"
ÜÜ< >
$str
ÜÜ> p
{
ÜÜp q
	ArticleId
ÜÜq z
}
ÜÜz {
"
ÜÜ{ |
)
ÜÜ| }
;
ÜÜ} ~
Article
áá 
?
áá 
ExistingArticle
áá $
;
áá$ %
try
àà 
{
ââ 
ExistingArticle
ää 
=
ää  !
GetArticles
ää" -
(
ää- .
)
ää. /
.
ää/ 0
ToList
ää0 6
(
ää6 7
)
ää7 8
.
ää8 9
Find
ää9 =
(
ää= >
item
ää> B
=>
ääC E
item
ääF J
.
ääJ K
ArtileId
ääK S
==
ääT V
	ArticleId
ääW `
)
ää` a
;
ääa b
return
ãã 
ExistingArticle
ãã &
!=
ãã' )
null
ãã* .
?
ãã/ 0
ExistingArticle
ãã1 @
:
ããA B
throw
ããC H
new
ããI L#
ItemNotFoundException
ããM b
(
ããb c
$"
ããc e
$strããe ó
{ããó ò
	ArticleIdããò °
}ãã° ¢
"ãã¢ £
)ãã£ §
;ãã§ •
}
åå 
catch
çç 
(
çç 
	Exception
çç 
	exception
çç &
)
çç& '
{
éé 
_logger
èè 
.
èè 
LogError
èè  
(
èè  !
HelperService
èè! .
.
èè. /
LoggerMessage
èè/ <
(
èè< =
$str
èè= P
,
èèP Q
$str
èèR q
,
èèq r
	exception
èès |
,
èè| }
	ArticleIdèè~ á
)èèá à
)èèà â
;èèâ ä
throw
êê 
;
êê 
}
ëë 
}
íí 	
public
îî 
IEnumerable
îî 
<
îî 
Article
îî "
>
îî" #
GetArticles
îî$ /
(
îî/ 0
)
îî0 1
{
ïï 	
try
ññ 
{
óó 
var
òò 
ListOfArticle
òò !
=
òò" #
_context
òò$ ,
.
òò, -
Articles
òò- 5
.
òò5 6
Include
òò6 =
(
òò= >
e
òò> ?
=>
òò? A
e
òòA B
.
òòB C
ArticleStatus
òòC P
)
òòP Q
.
òòQ R
Include
òòR Y
(
òòY Z
e
òòZ [
=>
òò[ ]
e
òò] ^
.
òò^ _
User
òò_ c
)
òòc d
.
òòd e
ToList
òòe k
(
òòk l
)
òòl m
;
òòm n
return
ôô 
ListOfArticle
ôô $
;
ôô$ %
}
õõ 
catch
úú 
(
úú 
	Exception
úú 
	exception
úú &
)
úú& '
{
ùù 
_logger
ûû 
.
ûû 
LogError
ûû  
(
ûû  !
HelperService
ûû! .
.
ûû. /
LoggerMessage
ûû/ <
(
ûû< =
$str
ûû= P
,
ûûP Q
$str
ûûR a
,
ûûa b
	exception
ûûc l
)
ûûl m
)
ûûm n
;
ûûn o
throw
†† 
;
†† 
}
°° 
}
§§ 	
public
¶¶ 
IEnumerable
¶¶ 
<
¶¶ 
PrivateArticle
¶¶ )
>
¶¶) * 
GetPrivateArticles
¶¶+ =
(
¶¶= >
)
¶¶> ?
{
ßß 	
try
®® 
{
©© 
var
™™ #
ListofPrivateArticles
™™ )
=
™™* +
_context
™™, 4
.
™™4 5
PrivateArticles
™™5 D
.
™™D E
ToList
™™E K
(
™™K L
)
™™L M
;
™™M N
return
´´ #
ListofPrivateArticles
´´ ,
;
´´, -
}
≠≠ 
catch
ÆÆ 
(
ÆÆ 
	Exception
ÆÆ 
	exception
ÆÆ &
)
ÆÆ& '
{
ØØ 
_logger
∞∞ 
.
∞∞ 
LogError
∞∞  
(
∞∞  !
HelperService
∞∞! .
.
∞∞. /
LoggerMessage
∞∞/ <
(
∞∞< =
$str
∞∞= P
,
∞∞P Q
$str
∞∞R h
,
∞∞h i
	exception
∞∞j s
)
∞∞s t
)
∞∞t u
;
∞∞u v
throw
≤≤ 
;
≤≤ 
}
≥≥ 
}
∂∂ 	
public
∏∏ 
bool
∏∏ 

AddComment
∏∏ 
(
∏∏ 
ArticleComment
∏∏ -
comment
∏∏. 5
)
∏∏5 6
{
ππ 	

Validation
∫∫ 
.
∫∫ $
ValidateArticleComment
∫∫ -
(
∫∫- .
comment
∫∫. 5
)
∫∫5 6
;
∫∫6 7
try
ªª 
{
ºº 
_context
ΩΩ 
.
ΩΩ 
ArticleComments
ΩΩ (
.
ΩΩ( )
Add
ΩΩ) ,
(
ΩΩ, -
comment
ΩΩ- 4
)
ΩΩ4 5
;
ΩΩ5 6
_context
ææ 
.
ææ 
SaveChanges
ææ $
(
ææ$ %
)
ææ% &
;
ææ& '
return
¿¿ 
true
¿¿ 
;
¿¿ 
}
¡¡ 
catch
¬¬ 
(
¬¬ 
	Exception
¬¬ 
	exception
¬¬ &
)
¬¬& '
{
√√ 
_logger
ƒƒ 
.
ƒƒ 
LogError
ƒƒ  
(
ƒƒ  !
HelperService
ƒƒ! .
.
ƒƒ. /
LoggerMessage
ƒƒ/ <
(
ƒƒ< =
$str
ƒƒ= P
,
ƒƒP Q
$str
ƒƒR v
,
ƒƒv w
	exceptionƒƒx Å
,ƒƒÅ Ç
commentƒƒÉ ä
)ƒƒä ã
)ƒƒã å
;ƒƒå ç
return
∆∆ 
false
∆∆ 
;
∆∆ 
}
…… 
}
   	
public
ŒŒ 
IEnumerable
ŒŒ 
<
ŒŒ 
ArticleComment
ŒŒ )
>
ŒŒ) *
GetComments
ŒŒ+ 6
(
ŒŒ6 7
)
ŒŒ7 8
{
œœ 	
try
—— 
{
““ 
var
”” 
ListOfComments
”” "
=
””# $
_context
””% -
.
””- .
ArticleComments
””. =
.
””= >
ToList
””> D
(
””D E
)
””E F
;
””F G
return
‘‘ 
ListOfComments
‘‘ %
;
‘‘% &
}
÷÷ 
catch
◊◊ 
(
◊◊ 
	Exception
◊◊ 
	exception
◊◊ &
)
◊◊& '
{
ÿÿ 
_logger
ŸŸ 
.
ŸŸ 
LogError
ŸŸ  
(
ŸŸ  !
HelperService
ŸŸ! .
.
ŸŸ. /
LoggerMessage
ŸŸ/ <
(
ŸŸ< =
$str
ŸŸ= P
,
ŸŸP Q
$str
ŸŸR a
,
ŸŸa b
	exception
ŸŸc l
)
ŸŸl m
)
ŸŸm n
;
ŸŸn o
throw
€€ 
;
€€ 
}
‹‹ 
}
›› 	
public
‡‡ 
bool
‡‡ 
AddLike
‡‡ 
(
‡‡ 
ArticleLike
‡‡ '
like
‡‡( ,
)
‡‡, -
{
·· 	
if
‚‚ 
(
‚‚ 
like
‚‚ 
.
‚‚ 
	ArticleId
‚‚ 
<=
‚‚ !
$num
‚‚" #
)
‚‚# $
throw
‚‚% *
new
‚‚+ .
ArgumentException
‚‚/ @
(
‚‚@ A
$"
‚‚A C
$str
‚‚C u
{
‚‚u v
like
‚‚v z
.
‚‚z {
	ArticleId‚‚{ Ñ
}‚‚Ñ Ö
"‚‚Ö Ü
)‚‚Ü á
;‚‚á à
if
„„ 
(
„„ 
like
„„ 
.
„„ 
UserId
„„ 
<=
„„ 
$num
„„  
)
„„  !
throw
„„" '
new
„„( +
ArgumentException
„„, =
(
„„= >
$"
„„> @
$str
„„@ l
{
„„l m
like
„„m q
.
„„q r
UserId
„„r x
}
„„x y
"
„„y z
)
„„z {
;
„„{ |
try
‰‰ 
{
ÂÂ 
_context
ÊÊ 
.
ÊÊ 
ArticleLikes
ÊÊ %
.
ÊÊ% &
Add
ÊÊ& )
(
ÊÊ) *
like
ÊÊ* .
)
ÊÊ. /
;
ÊÊ/ 0
_context
ÁÁ 
.
ÁÁ 
SaveChanges
ÁÁ $
(
ÁÁ$ %
)
ÁÁ% &
;
ÁÁ& '
return
ËË 
true
ËË 
;
ËË 
}
ÈÈ 
catch
ÍÍ 
(
ÍÍ 
	Exception
ÍÍ 
	exception
ÍÍ &
)
ÍÍ& '
{
ÎÎ 
_logger
ÏÏ 
.
ÏÏ 
LogError
ÏÏ  
(
ÏÏ  !
HelperService
ÏÏ! .
.
ÏÏ. /
LoggerMessage
ÏÏ/ <
(
ÏÏ< =
$str
ÏÏ= P
,
ÏÏP Q
$str
ÏÏR m
,
ÏÏm n
	exception
ÏÏo x
,
ÏÏx y
like
ÏÏz ~
)
ÏÏ~ 
)ÏÏ Ä
;ÏÏÄ Å
return
ÓÓ 
false
ÓÓ 
;
ÓÓ 
}
 
}
ÒÒ 	
public
ÙÙ 
IEnumerable
ÙÙ 
<
ÙÙ 
ArticleLike
ÙÙ &
>
ÙÙ& '
GetLikes
ÙÙ( 0
(
ÙÙ0 1
)
ÙÙ1 2
{
ıı 	
try
˜˜ 
{
¯¯ 
var
˘˘  
ListOfArticleLikes
˘˘ &
=
˘˘' (
_context
˘˘) 1
.
˘˘1 2
ArticleLikes
˘˘2 >
.
˘˘> ?
Include
˘˘? F
(
˘˘F G
e
˘˘G H
=>
˘˘H J
e
˘˘J K
.
˘˘K L
Article
˘˘L S
)
˘˘S T
.
˘˘T U
ToList
˘˘U [
(
˘˘[ \
)
˘˘\ ]
;
˘˘] ^
return
˙˙  
ListOfArticleLikes
˙˙ )
;
˙˙) *
}
¸¸ 
catch
˝˝ 
(
˝˝ 
	Exception
˝˝ 
	exception
˝˝ &
)
˝˝& '
{
˛˛ 
_logger
ˇˇ 
.
ˇˇ 
LogError
ˇˇ  
(
ˇˇ  !
HelperService
ˇˇ! .
.
ˇˇ. /
LoggerMessage
ˇˇ/ <
(
ˇˇ< =
$str
ˇˇ= P
,
ˇˇP Q
$str
ˇˇR ^
,
ˇˇ^ _
	exception
ˇˇ` i
)
ˇˇi j
)
ˇˇj k
;
ˇˇk l
throw
ÅÅ 
;
ÅÅ 
}
ÇÇ 
}
ÉÉ 	
}
ÑÑ 
}ÖÖ ∆Ç
gC:\Users\manimaran.venkat\Documents\Backup\AspireOverflow\DataAccessLayer\Repository\QueryRepository.cs
	namespace

 	
AspireOverflow


 
.

 
DataAccessLayer

 (
{ 
public 

class 
QueryRepository  
:! "
IQueryRepository# 3
{ 
private 
readonly !
AspireOverflowContext .
_context/ 7
;7 8
private 
readonly 
ILogger  
<  !
QueryRepository! 0
>0 1
_logger2 9
;9 :
public 
QueryRepository 
( !
AspireOverflowContext 4
context5 <
,< =
ILogger> E
<E F
QueryRepositoryF U
>U V
loggerW ]
)] ^
{ 	
_context 
= 
context 
; 
_logger 
= 
logger 
; 
} 	
public 
bool 
AddQuery 
( 
Query "
query# (
)( )
{ 	

Validation 
. 
ValidateQuery $
($ %
query% *
)* +
;+ ,
try 
{ 
_context!! 
.!! 
Queries!!  
.!!  !
Add!!! $
(!!$ %
query!!% *
)!!* +
;!!+ ,
_context"" 
."" 
SaveChanges"" $
(""$ %
)""% &
;""& '
return$$ 
true$$ 
;$$ 
}%% 
catch&& 
(&& 
	Exception&& 
	exception&& &
)&&& '
{'' 
_logger(( 
.(( 
LogError((  
(((  !
HelperService((! .
.((. /
LoggerMessage((/ <
(((< =
$str((= N
,((N O
$str((P g
,((g h
	exception((i r
,((r s
query((t y
)((y z
)((z {
;(({ |
return** 
false** 
;** 
}-- 
}// 	
public33 
bool33 

AddComment33 
(33 
QueryComment33 +
comment33, 3
)333 4
{44 	

Validation55 
.55 
ValidateComment55 &
(55& '
comment55' .
)55. /
;55/ 0
try66 
{77 
_context88 
.88 
QueryComments88 &
.88& '
Add88' *
(88* +
comment88+ 2
)882 3
;883 4
_context99 
.99 
SaveChanges99 $
(99$ %
)99% &
;99& '
return:: 
true:: 
;:: 
}<< 
catch== 
(== 
	Exception== 
	exception== &
)==& '
{>> 
_logger?? 
.?? 
LogError??  
(??  !
HelperService??! .
.??. /
LoggerMessage??/ <
(??< =
$str??= N
,??N O
$str??P r
,??r s
	exception??t }
,??} ~
comment	?? Ü
)
??Ü á
)
??á à
;
??à â
return@@ 
false@@ 
;@@ 
}BB 
}CC 	
publicGG 
boolGG 
UpdateQueryGG 
(GG  
intGG  #
QueryIdGG$ +
,GG+ ,
boolGG- 1
IsSolvedGG2 :
=GG: ;
falseGG; @
,GG@ A
boolGGB F
IsDeleteGGG O
=GGO P
falseGGP U
)GGU V
{HH 	
ifII 
(II 
QueryIdII 
<=II 
$numII 
)II 
throwII #
newII$ '
ArgumentExceptionII( 9
(II9 :
$"II: <
$strII< j
{IIj k
QueryIdIIk r
}IIr s
"IIs t
)IIt u
;IIu v
ifJJ 
(JJ 
IsSolvedJJ 
==JJ 
IsDeleteJJ $
)JJ$ %
throwJJ& +
newJJ, /
ArgumentExceptionJJ0 A
(JJA B
$strJJB x
)JJx y
;JJy z
tryKK 
{LL 
varMM 
ExistingQueryMM !
=MM" #
GetQueryByIDMM$ 0
(MM0 1
QueryIdMM1 8
)MM8 9
;MM9 :
ifNN 
(NN 
IsSolvedNN 
)NN 
ExistingQueryNN +
.NN+ ,
IsSolvedNN, 4
=NN5 6
IsSolvedNN7 ?
;NN? @
ifOO 
(OO 
IsDeleteOO 
)OO 
ExistingQueryOO +
.OO+ ,
IsActiveOO, 4
=OO5 6
falseOO7 <
;OO< =
_contextPP 
.PP 
QueriesPP  
.PP  !
UpdatePP! '
(PP' (
ExistingQueryPP( 5
)PP5 6
;PP6 7
_contextQQ 
.QQ 
SaveChangesQQ $
(QQ$ %
)QQ% &
;QQ& '
returnRR 
trueRR 
;RR 
}SS 
catchTT 
(TT 
	ExceptionTT 
	exceptionTT &
)TT& '
{UU 
_loggerVV 
.VV 
LogErrorVV  
(VV  !
HelperServiceVV! .
.VV. /
LoggerMessageVV/ <
(VV< =
$strVV= N
,VVN O
$str	VVP à
,
VVà â
	exception
VVä ì
,
VVì î
IsSolved
VVï ù
?
VVû ü
IsSolved
VV† ®
:
VV© ™
IsDelete
VV´ ≥
)
VV≥ ¥
)
VV¥ µ
;
VVµ ∂
returnWW 
falseWW 
;WW 
}YY 
}ZZ 	
public]] 
Query]] 
GetQueryByID]] !
(]]! "
int]]" %
QueryId]]& -
)]]- .
{^^ 	
if__ 
(__ 
QueryId__ 
<=__ 
$num__ 
)__ 
throw__ $
new__% (
ArgumentException__) :
(__: ;
$"__; =
$str__= k
{__k l
QueryId__l s
}__s t
"__t u
)__u v
;__v w
Query`` 
?`` 
ExistingQuery``  
;``  !
tryaa 
{bb 
ExistingQuerycc 
=cc 

GetQueriescc  *
(cc* +
)cc+ ,
.cc, -
ToListcc- 3
(cc3 4
)cc4 5
.cc5 6
Findcc6 :
(cc: ;
querycc; @
=>ccA C
queryccC H
.ccH I
QueryIdccI P
==ccP R
QueryIdccR Y
)ccY Z
;ccZ [
returndd 
ExistingQuerydd $
!=dd% '
nulldd( ,
?dd- .
ExistingQuerydd/ <
:dd= >
throwdd? D
newddE H!
ItemNotFoundExceptionddI ^
(dd^ _
$"dd_ a
$str	dda è
{
ddè ê
QueryId
ddê ó
}
ddó ò
"
ddò ô
)
ddô ö
;
ddö õ
}ee 
catchff 
(ff 
	Exceptionff 
	exceptionff &
)ff& '
{gg 
_loggerhh 
.hh 
LogErrorhh  
(hh  !
HelperServicehh! .
.hh. /
LoggerMessagehh/ <
(hh< =
$strhh= N
,hhN O
$strhhP k
,hhk l
	exceptionhhm v
,hhv w
QueryIdhhx 
)	hh Ä
)
hhÄ Å
;
hhÅ Ç
throwii 
;ii 
}jj 
}kk 	
publicmm 
IEnumerablemm 
<mm 
Querymm  
>mm  !

GetQueriesmm" ,
(mm, -
)mm- .
{nn 	
tryoo 
{pp 
varqq 
ListOfQueriesqq !
=qq" #
_contextqq$ ,
.qq, -
Queriesqq- 4
.qq4 5
Whereqq5 :
(qq: ;
itemqq; ?
=>qq@ B
itemqqC G
.qqG H
IsActiveqqH P
)qqP Q
.qqQ R
IncludeqqR Y
(qqY Z
eqqZ [
=>qq[ ]
eqq] ^
.qq^ _
Userqq_ c
)qqc d
.qqd e
ToListqqe k
(qqk l
)qql m
;qqm n
returnrr 
ListOfQueriesrr $
;rr$ %
}tt 
catchuu 
(uu 
	Exceptionuu 
	exceptionuu &
)uu& '
{vv 
_loggerww 
.ww 
LogErrorww  
(ww  !
HelperServiceww! .
.ww. /
LoggerMessageww/ <
(ww< =
$strww= N
,wwN O
$strwwP ^
,ww^ _
	exceptionww` i
)wwi j
)wwj k
;wwk l
throwyy 
;yy 
}zz 
}}} 	
public
ÄÄ 
IEnumerable
ÄÄ 
<
ÄÄ 
QueryComment
ÄÄ '
>
ÄÄ' (
GetComments
ÄÄ) 4
(
ÄÄ4 5
)
ÄÄ5 6
{
ÅÅ 	
try
ÇÇ 
{
ÉÉ 
var
ÑÑ 
ListOfComments
ÑÑ "
=
ÑÑ# $
_context
ÑÑ% -
.
ÑÑ- .
QueryComments
ÑÑ. ;
.
ÑÑ; <
Include
ÑÑ< C
(
ÑÑC D
e
ÑÑD E
=>
ÑÑE G
e
ÑÑG H
.
ÑÑH I
Query
ÑÑI N
)
ÑÑN O
.
ÑÑO P
Include
ÑÑP W
(
ÑÑW X
e
ÑÑX Y
=>
ÑÑY [
e
ÑÑ[ \
.
ÑÑ\ ]
User
ÑÑ] a
)
ÑÑa b
.
ÑÑb c
ToList
ÑÑc i
(
ÑÑi j
)
ÑÑj k
;
ÑÑk l
return
ÖÖ 
ListOfComments
ÖÖ %
;
ÖÖ% &
}
áá 
catch
àà 
(
àà 
	Exception
àà 
	exception
àà &
)
àà& '
{
ââ 
_logger
ää 
.
ää 
LogError
ää  
(
ää  !
HelperService
ää! .
.
ää. /
LoggerMessage
ää/ <
(
ää< =
$str
ää= N
,
ääN O
$str
ääP _
,
ää_ `
	exception
ääa j
)
ääj k
)
ääk l
;
ääl m
throw
åå 
;
åå 
}
çç 
}
éé 	
public
êê 
bool
êê 
AddSpam
êê 
(
êê 
Spam
êê  
spam
êê! %
)
êê% &
{
ëë 	

Validation
íí 
.
íí 
ValidateSpam
íí "
(
íí" #
spam
íí# '
)
íí' (
;
íí( )
try
ìì 
{
îî 
if
ïï 
(
ïï 
GetSpams
ïï 
(
ïï 
)
ïï 
.
ïï 
AsEnumerable
ïï *
(
ïï* +
)
ïï+ ,
.
ïï, -
Any
ïï- 0
(
ïï0 1
item
ïï1 5
=>
ïï6 8
item
ïï9 =
.
ïï= >
UserId
ïï> D
==
ïïE G
spam
ïïH L
.
ïïL M
UserId
ïïM S
&&
ïïT V
item
ïïW [
.
ïï[ \
QueryId
ïï\ c
==
ïïd f
spam
ïïg k
.
ïïk l
QueryId
ïïl s
)
ïïs t
)
ïït u
throw
ïïv {
new
ïï| !
ArgumentExceptionïïÄ ë
(ïïë í
$strïïí »
)ïï» …
;ïï…  
_context
óó 
.
óó 
Spams
óó 
.
óó 
AddRange
óó '
(
óó' (
spam
óó( ,
)
óó, -
;
óó- .
_context
òò 
.
òò 
SaveChanges
òò $
(
òò$ %
)
òò% &
;
òò& '
return
ôô 
true
ôô 
;
ôô 
}
öö 
catch
õõ 
(
õõ 
	Exception
õõ 
	exception
õõ &
)
õõ& '
{
úú 
_logger
ùù 
.
ùù 
LogError
ùù  
(
ùù  !
HelperService
ùù! .
.
ùù. /
LoggerMessage
ùù/ <
(
ùù< =
$str
ùù= N
,
ùùN O
$str
ùùP d
,
ùùd e
	exception
ùùf o
,
ùùo p
spam
ùùq u
)
ùùu v
)
ùùv w
;
ùùw x
return
üü 
false
üü 
;
üü 
}
°° 
}
¢¢ 	
public
•• 
IEnumerable
•• 
<
•• 
Spam
•• 
>
••  
GetSpams
••! )
(
••) *
)
••* +
{
¶¶ 	
try
ßß 
{
®® 
var
©© 
ListOfSpams
©© 
=
©©  !
_context
©©" *
.
©©* +
Spams
©©+ 0
.
©©0 1
Include
©©1 8
(
©©8 9
e
©©9 :
=>
©©: <
e
©©< =
.
©©= >
Query
©©> C
)
©©C D
.
©©D E
Include
©©E L
(
©©L M
e
©©M N
=>
©©N P
e
©©P Q
.
©©Q R
User
©©R V
)
©©V W
.
©©W X
ToList
©©X ^
(
©©^ _
)
©©_ `
;
©©` a
return
™™ 
ListOfSpams
™™ "
;
™™" #
}
¨¨ 
catch
≠≠ 
(
≠≠ 
	Exception
≠≠ 
	exception
≠≠ &
)
≠≠& '
{
ÆÆ 
_logger
ØØ 
.
ØØ 
LogError
ØØ  
(
ØØ  !
HelperService
ØØ! .
.
ØØ. /
LoggerMessage
ØØ/ <
(
ØØ< =
$str
ØØ= N
,
ØØN O
$str
ØØP \
,
ØØ\ ]
	exception
ØØ^ g
)
ØØg h
)
ØØh i
;
ØØi j
throw
∞∞ 
;
∞∞ 
}
±± 
}
≤≤ 	
public
∂∂ 
bool
∂∂ 

UpdateSpam
∂∂ 
(
∂∂ 
int
∂∂ "
QueryId
∂∂# *
,
∂∂* +
int
∂∂, /
VerifyStatusID
∂∂0 >
)
∂∂> ?
{
∑∑ 	
if
ππ 
(
ππ 
QueryId
ππ 
<=
ππ 
$num
ππ 
)
ππ 
throw
ππ #
new
ππ$ '
ArgumentException
ππ( 9
(
ππ9 :
$"
ππ: <
$str
ππ< j
{
ππj k
QueryId
ππk r
}
ππr s
"
ππs t
)
ππt u
;
ππu v
if
∫∫ 
(
∫∫ 
VerifyStatusID
∫∫ 
<=
∫∫ !
$num
∫∫" #
||
∫∫$ &
VerifyStatusID
∫∫' 5
>
∫∫6 7
$num
∫∫8 9
)
∫∫9 :
throw
∫∫; @
new
∫∫A D
ArgumentException
∫∫E V
(
∫∫V W
$"
∫∫W Y
$str∫∫Y ñ
{∫∫ñ ó
VerifyStatusID∫∫ó •
}∫∫• ¶
"∫∫¶ ß
)∫∫ß ®
;∫∫® ©
try
ºº 
{
ΩΩ 
var
ææ 
ExistingSpam
ææ 
=
ææ  
GetSpams
ææ! )
(
ææ) *
)
ææ* +
.
ææ+ ,
Where
ææ, 1
(
ææ1 2
item
ææ2 6
=>
ææ6 8
item
ææ8 <
.
ææ< =
QueryId
ææ= D
==
ææD F
QueryId
ææF M
)
ææM N
.
ææN O
ToList
ææO U
(
ææU V
)
ææV W
;
ææW X
if
øø 
(
øø 
ExistingSpam
øø 
==
øø !
null
øø" &
)
øø& '
throw
øø( -
new
øø. 1#
ItemNotFoundException
øø2 G
(
øøG H
$"
øøH J
$str
øøJ w
{
øøw x
QueryId
øøx 
}øø Ä
"øøÄ Å
)øøÅ Ç
;øøÇ É
ExistingSpam
¿¿ 
.
¿¿ 
ForEach
¿¿ %
(
¿¿% &
Item
¿¿& *
=>
¿¿+ -
Item
¿¿- 1
.
¿¿1 2
VerifyStatusID
¿¿2 @
=
¿¿@ A
VerifyStatusID
¿¿A O
)
¿¿O P
;
¿¿P Q
_context
¡¡ 
.
¡¡ 
Spams
¡¡ 
.
¡¡ 
UpdateRange
¡¡ *
(
¡¡* +
ExistingSpam
¡¡+ 7
)
¡¡7 8
;
¡¡8 9
_context
¬¬ 
.
¬¬ 
SaveChanges
¬¬ $
(
¬¬$ %
)
¬¬% &
;
¬¬& '
return
√√ 
true
√√ 
;
√√ 
}
ƒƒ 
catch
≈≈ 
(
≈≈ 
	Exception
≈≈ 
	exception
≈≈ &
)
≈≈& '
{
∆∆ 
_logger
«« 
.
«« 
LogError
««  
(
««  !
HelperService
««! .
.
««. /
LoggerMessage
««/ <
(
««< =
$str
««= N
,
««N O
$str
««P }
,
««} ~
	exception«« à
,««à â
VerifyStatusID««ä ò
)««ò ô
)««ô ö
;««ö õ
return
»» 
false
»» 
;
»» 
}
   
}
ÀÀ 	
}
–– 
}““ ≈|
fC:\Users\manimaran.venkat\Documents\Backup\AspireOverflow\DataAccessLayer\Repository\UserRepository.cs
	namespace

 	
AspireOverflow


 
.

 
DataAccessLayer

 (
{ 
public 

class 
UserRepository 
:  !
IUserRepository" 1
{ 
private 
readonly !
AspireOverflowContext .
_context/ 7
;7 8
private 
readonly 
ILogger  
<  !
UserRepository! /
>/ 0
_logger1 8
;8 9
public 
UserRepository 
( !
AspireOverflowContext 3
context4 ;
,; <
ILogger= D
<D E
UserRepositoryE S
>S T
loggerU [
)[ \
{ 	
_context 
= 
context 
; 
_logger 
= 
logger 
; 
} 	
public 
bool 

CreateUser 
( 
User #
User$ (
)( )
{ 	

Validation 
. 
ValidateUser #
(# $
User$ (
)( )
;) *
try 
{ 
var 
ExistingUsers !
=" #
_context$ ,
., -
Users- 2
.2 3
ToList3 9
(9 :
): ;
;; <
if   
(   
ExistingUsers   !
.  ! "
Any  " %
(  % &
Item  & *
=>  + -
Item  . 2
.  2 3
	AceNumber  3 <
==  = ?
User  @ D
.  D E
	AceNumber  E N
)  N O
)  O P
throw  Q V
new  W Z
ValidationException  [ n
(  n o
$str	  o ä
)
  ä ã
;
  ã å
if!! 
(!! 
ExistingUsers!! !
.!!! "
Any!!" %
(!!% &
Item!!& *
=>!!+ -
Item!!. 2
.!!2 3
EmailAddress!!3 ?
==!!@ B
User!!C G
.!!G H
EmailAddress!!H T
)!!T U
)!!U V
throw!!W \
new!!] `
ValidationException!!a t
(!!t u
$str	!!u ì
)
!!ì î
;
!!î ï
_context"" 
."" 
Users"" 
."" 
Add"" "
(""" #
User""# '
)""' (
;""( )
_context## 
.## 
SaveChanges## $
(##$ %
)##% &
;##& '
return$$ 
true$$ 
;$$ 
}%% 
catch&& 
(&& 
ValidationException&& &
	exception&&' 0
)&&0 1
{'' 
_logger(( 
.(( 
LogError((  
(((  !
HelperService((! .
.((. /
LoggerMessage((/ <
(((< =
$str((= M
,((M N
$str((O f
,((f g
	exception((h q
,((q r
User((s w
)((w x
)((x y
;((y z
throw)) 
;)) 
}** 
catch++ 
(++ 
	Exception++ 
	exception++ &
)++& '
{,, 
_logger-- 
.-- 
LogError--  
(--  !
HelperService--! .
.--. /
LoggerMessage--/ <
(--< =
$str--= M
,--M N
$str--O f
,--f g
	exception--h q
,--q r
User--s w
)--w x
)--x y
;--y z
return.. 
false.. 
;.. 
}00 
}22 	
public55 
bool55 

RemoveUser55 
(55 
int55 "
UserId55# )
)55) *
{66 	
if77 
(77 
UserId77 
<=77 
$num77 
)77 
throw77 "
new77# &
ArgumentException77' 8
(778 9
$"779 ;
$str77; g
{77g h
UserId77h n
}77n o
"77o p
)77p q
;77q r
try88 
{99 
var:: 
User_NotVerified:: $
=::% &
GetUserByID::' 2
(::2 3
UserId::3 9
)::9 :
;::: ;
if;; 
(;; 
User_NotVerified;; $
.;;$ %
VerifyStatusID;;% 3
==;;4 6
$num;;7 8
);;8 9
{<< 
_context== 
.== 
Users== "
.==" #
Remove==# )
(==) *
User_NotVerified==* :
)==: ;
;==; <
_context>> 
.>> 
SaveChanges>> (
(>>( )
)>>) *
;>>* +
}?? 
return@@ 
true@@ 
;@@ 
}AA 
catchBB 
(BB 
	ExceptionBB 
	exceptionBB &
)BB& '
{CC 
_loggerDD 
.DD 
LogErrorDD  
(DD  !
HelperServiceDD! .
.DD. /
LoggerMessageDD/ <
(DD< =
$strDD= M
,DDM N
$strDDO g
,DDg h
	exceptionDDi r
,DDr s
UserIdDDt z
)DDz {
)DD{ |
;DD| }
returnEE 
falseEE 
;EE 
}GG 
}II 	
publicJJ 
UserJJ 
GetUserByIDJJ 
(JJ  
intJJ  #
UserIdJJ$ *
)JJ* +
{KK 	
ifLL 
(LL 
UserIdLL 
<=LL 
$numLL 
)LL 
throwLL "
newLL# &
ArgumentExceptionLL' 8
(LL8 9
$"LL9 ;
$strLL; g
{LLg h
UserIdLLh n
}LLn o
"LLo p
)LLp q
;LLq r
UserMM 
?MM 
userMM 
;MM 
tryNN 
{OO 
userPP 
=PP 
GetUsersPP 
(PP  
)PP  !
.PP! "
ToListPP" (
(PP( )
)PP) *
.PP* +
FindPP+ /
(PP/ 0
UserPP0 4
=>PP5 7
UserPP8 <
.PP< =
UserIdPP= C
==PPD F
UserIdPPG M
)PPM N
;PPN O
returnQQ 
userQQ 
!=QQ 
nullQQ #
?QQ$ %
userQQ& *
:QQ+ ,
throwQQ- 2
newQQ3 6!
ItemNotFoundExceptionQQ7 L
(QQL M
$"QQM O
$strQQO {
{QQ{ |
UserId	QQ| Ç
}
QQÇ É
"
QQÉ Ñ
)
QQÑ Ö
;
QQÖ Ü
}RR 
catchSS 
(SS 
	ExceptionSS 
	exceptionSS &
)SS& '
{TT 
_loggerUU 
.UU 
LogErrorUU  
(UU  !
HelperServiceUU! .
.UU. /
LoggerMessageUU/ <
(UU< =
$strUU= M
,UUM N
$strUUO h
,UUh i
	exceptionUUj s
,UUs t
UserIdUUu {
)UU{ |
)UU| }
;UU} ~
throwVV 
;VV 
}WW 
}XX 	
public[[ 
IEnumerable[[ 
<[[ 
User[[ 
>[[  
GetUsers[[! )
([[) *
)[[* +
{\\ 	
try]] 
{^^ 
return`` 
_context`` 
.``  
Users``  %
.``% &
Include``& -
(``- .
e``. /
=>``/ 1
e``1 2
.``2 3
Designation``3 >
)``> ?
.``? @
Include``@ G
(``G H
e``H I
=>``I K
e``K L
.``L M
UserRole``M U
)``U V
.``V W
Include``W ^
(``^ _
e``_ `
=>``` b
e``b c
.``c d
Gender``d j
)``j k
.``k l
Include``l s
(``s t
e``t u
=>``u w
e``w x
.``x y
VerifyStatus	``y Ö
)
``Ö Ü
.
``Ü á
ToList
``á ç
(
``ç é
)
``é è
;
``è ê
}aa 
catchbb 
(bb 
	Exceptionbb 
	exceptionbb &
)bb& '
{cc 
_loggerdd 
.dd 
LogErrordd  
(dd  !
HelperServicedd! .
.dd. /
LoggerMessagedd/ <
(dd< =
$strdd= M
,ddM N
$strddO [
,dd[ \
	exceptiondd] f
)ddf g
)ddg h
;ddh i
throwee 
;ee 
}ff 
}gg 	
publicii 
boolii $
UpdateUserByVerifyStatusii ,
(ii, -
intii- 0
UserIdii1 7
,ii7 8
intii9 <
VerifyStatusIDii= K
)iiK L
{jj 	
ifkk 
(kk 
UserIdkk 
<=kk 
$numkk 
)kk 
throwkk "
newkk# &
ArgumentExceptionkk' 8
(kk8 9
$"kk9 ;
$strkk; g
{kkg h
UserIdkkh n
}kkn o
"kko p
)kkp q
;kkq r
ifll 
(ll 
VerifyStatusIDll 
<=ll !
$numll" #
||ll$ &
VerifyStatusIDll' 5
>ll6 7
$numll8 9
)ll9 :
throwll; @
newllA D
ArgumentExceptionllE V
(llV W
$"llW Y
$str	llY ñ
{
llñ ó
VerifyStatusID
lló •
}
ll• ¶
"
ll¶ ß
)
llß ®
;
ll® ©
trymm 
{nn 
varoo 
ExistingUseroo  
=oo! "
GetUserByIDoo# .
(oo. /
UserIdoo/ 5
)oo5 6
;oo6 7
ExistingUserpp 
.pp 
VerifyStatusIDpp +
=pp, -
VerifyStatusIDpp. <
;pp< =
_contextqq 
.qq 
Usersqq 
.qq 
Updateqq %
(qq% &
ExistingUserqq& 2
)qq2 3
;qq3 4
_contextrr 
.rr 
SaveChangesrr $
(rr$ %
)rr% &
;rr& '
returnss 
truess 
;ss 
}tt 
catchuu 
(uu 
	Exceptionuu 
	exceptionuu &
)uu& '
{vv 
_loggerww 
.ww 
LogErrorww  
(ww  !
HelperServiceww! .
.ww. /
LoggerMessageww/ <
(ww< =
$strww= M
,wwM N
$str	wwO â
,
wwâ ä
	exception
wwã î
,
wwî ï
$"
wwñ ò
$str
wwò °
{
ww° ¢
UserId
ww¢ ®
}
ww® ©
$str
ww© ∫
{
ww∫ ª
VerifyStatusID
wwª …
}
ww…  
"
ww  À
)
wwÀ Ã
)
wwÃ Õ
;
wwÕ Œ
throwxx 
;xx 
}zz 
}|| 	
public~~ 
bool~~  
UpdateUserByReviewer~~ (
(~~( )
int~~) ,
UserId~~- 3
,~~3 4
bool~~5 9

IsReviewer~~: D
)~~D E
{ 	
if
ÄÄ 
(
ÄÄ 
UserId
ÄÄ 
<=
ÄÄ 
$num
ÄÄ 
)
ÄÄ 
throw
ÄÄ "
new
ÄÄ# &
ArgumentException
ÄÄ' 8
(
ÄÄ8 9
$"
ÄÄ9 ;
$str
ÄÄ; g
{
ÄÄg h
UserId
ÄÄh n
}
ÄÄn o
"
ÄÄo p
)
ÄÄp q
;
ÄÄq r
try
ÅÅ 
{
ÇÇ 
var
ÉÉ 
ExistingUser
ÉÉ  
=
ÉÉ! "
GetUserByID
ÉÉ# .
(
ÉÉ. /
UserId
ÉÉ/ 5
)
ÉÉ5 6
;
ÉÉ6 7
ExistingUser
ÑÑ 
.
ÑÑ 

IsReviewer
ÑÑ '
=
ÑÑ( )

IsReviewer
ÑÑ* 4
;
ÑÑ4 5
_context
ÖÖ 
.
ÖÖ 
Users
ÖÖ 
.
ÖÖ 
Update
ÖÖ %
(
ÖÖ% &
ExistingUser
ÖÖ& 2
)
ÖÖ2 3
;
ÖÖ3 4
_context
ÜÜ 
.
ÜÜ 
SaveChanges
ÜÜ $
(
ÜÜ$ %
)
ÜÜ% &
;
ÜÜ& '
return
áá 
true
áá 
;
áá 
}
àà 
catch
ââ 
(
ââ 
	Exception
ââ 
	exception
ââ &
)
ââ& '
{
ää 
_logger
ãã 
.
ãã 
LogError
ãã  
(
ãã  !
HelperService
ãã! .
.
ãã. /
LoggerMessage
ãã/ <
(
ãã< =
$str
ãã= M
,
ããM N
$strããO Ç
,ããÇ É
	exceptionããÑ ç
,ããç é
$"ããè ë
$strããë ö
{ããö õ
UserIdããõ °
}ãã° ¢
$strãã¢ Ø
{ããØ ∞

IsReviewerãã∞ ∫
}ãã∫ ª
"ããª º
)ããº Ω
)ããΩ æ
;ããæ ø
throw
åå 
;
åå 
}
éé 
}
êê 	
public
íí 
IEnumerable
íí 
<
íí 
Gender
íí !
>
íí! "

GetGenders
íí# -
(
íí- .
)
íí. /
{
ìì 	
try
îî 
{
ïï 
return
óó 
_context
óó 
.
óó  
Genders
óó  '
.
óó' (
ToList
óó( .
(
óó. /
)
óó/ 0
;
óó0 1
}
òò 
catch
ôô 
(
ôô 
	Exception
ôô 
	exception
ôô &
)
ôô& '
{
öö 
_logger
õõ 
.
õõ 
LogError
õõ  
(
õõ  !
HelperService
õõ! .
.
õõ. /
LoggerMessage
õõ/ <
(
õõ< =
$str
õõ= M
,
õõM N
$str
õõO ^
,
õõ^ _
	exception
õõ` i
)
õõi j
)
õõj k
;
õõk l
throw
úú 
;
úú 
}
ùù 
}
ûû 	
public
†† 
IEnumerable
†† 
<
†† 
Designation
†† &
>
††& '
GetDesignations
††( 7
(
††7 8
)
††8 9
{
°° 	
try
¢¢ 
{
££ 
return
•• 
_context
•• 
.
••  
Designations
••  ,
.
••, -
Include
••- 4
(
••4 5
e
••5 6
=>
••6 8
e
••8 9
.
••9 :

Department
••: D
)
••D E
.
••E F
ToList
••F L
(
••L M
)
••M N
;
••N O
}
¶¶ 
catch
ßß 
(
ßß 
	Exception
ßß 
	exception
ßß &
)
ßß& '
{
®® 
_logger
©© 
.
©© 
LogError
©©  
(
©©  !
HelperService
©©! .
.
©©. /
LoggerMessage
©©/ <
(
©©< =
$str
©©= M
,
©©M N
$str
©©O c
,
©©c d
	exception
©©e n
)
©©n o
)
©©o p
;
©©p q
throw
™™ 
;
™™ 
}
´´ 
}
¨¨ 	
public
ÆÆ 
IEnumerable
ÆÆ 
<
ÆÆ 

Department
ÆÆ %
>
ÆÆ% &
GetDepartments
ÆÆ' 5
(
ÆÆ5 6
)
ÆÆ6 7
{
ØØ 	
try
∞∞ 
{
±± 
return
≤≤ 
_context
≤≤ 
.
≤≤  
Departments
≤≤  +
.
≤≤+ ,
ToList
≤≤, 2
(
≤≤2 3
)
≤≤3 4
;
≤≤4 5
}
≥≥ 
catch
¥¥ 
(
¥¥ 
	Exception
¥¥ 
	exception
¥¥ &
)
¥¥& '
{
µµ 
_logger
∂∂ 
.
∂∂ 
LogError
∂∂  
(
∂∂  !
HelperService
∂∂! .
.
∂∂. /
LoggerMessage
∂∂/ <
(
∂∂< =
$str
∂∂= M
,
∂∂M N
$str
∂∂O b
,
∂∂b c
	exception
∂∂d m
)
∂∂m n
)
∂∂n o
;
∂∂o p
throw
∑∑ 
;
∑∑ 
}
∏∏ 
}
ππ 	
}
ºº 
}ΩΩ õ6
KC:\Users\manimaran.venkat\Documents\Backup\AspireOverflow\Models\Article.cs
	namespace 	
AspireOverflow
 
. 
Models 
{ 
public 

partial 
class 
Article  
:! "
IAuditField# .
{ 
[ 	
Key	 
] 
public 
int 
ArtileId 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
? 
Title 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
? 
Content 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
byte 
[ 
] 
Image 
{ 
get !
;! "
set# &
;& '
}( )
=) *
null* .
!. /
;/ 0
public 
int 
ArticleStatusID "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
int 
? 

ReviewerId 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
DateTime 
Datetime  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
bool 
	IsPrivate 
{ 
get  #
;# $
set% (
;( )
}* +
=, -
false. 3
;3 4
public 
int 
	CreatedBy 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DateTime 
	CreatedOn !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
int 
? 
	UpdatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public!! 
DateTime!! 
?!! 
	UpdatedOn!! "
{!!# $
get!!% (
;!!( )
set!!* -
;!!- .
}!!/ 0
["" 	
	NotMapped""	 
]"" 
public## 
string## 
?## 
ImageString## "
{### $
get##% (
;##( )
set##* -
;##- .
}##/ 0
[%% 	

ForeignKey%%	 
(%% 
$str%% %
)%%% &
]%%& '
[&& 	
InverseProperty&&	 
(&& 
$str&& #
)&&# $
]&&$ %
public'' 
virtual'' 
ArticleStatus'' $
?''$ %
ArticleStatus''& 3
{''4 5
get''6 9
;''9 :
set''; >
;''> ?
}''@ A
[++ 	

ForeignKey++	 
(++ 
$str++ 
)++  
]++  !
[,, 	
InverseProperty,,	 
(,, 
$str,, #
),,# $
],,$ %
public-- 
virtual-- 
User-- 
?-- 
User-- !
{--" #
get--$ '
;--' (
set--) ,
;--, -
}--. /
=--0 1
null--2 6
!--6 7
;--7 8
[// 	
InverseProperty//	 
(// 
$str// "
)//" #
]//# $
public00 
virtual00 
ICollection00 "
<00" #
ArticleComment00# 1
>001 2
?002 3
ArticleComments004 C
{00D E
get00F I
;00I J
set00K N
;00N O
}00P Q
[33 	
InverseProperty33	 
(33 
$str33 "
)33" #
]33# $
public44 
virtual44 
ICollection44 "
<44" #
ArticleLike44# .
>44. /
?44/ 0
ArticleLikes441 =
{44> ?
get44@ C
;44C D
set44E H
;44H I
}44J K
[66 	
InverseProperty66	 
(66 
$str66 "
)66" #
]66# $
public77 
virtual77 
ICollection77 "
<77" #
PrivateArticle77# 1
>771 2
?772 3
PrivateArticles774 C
{77D E
get77F I
;77I J
set77K N
;77N O
}77P Q
}99 
public:: 

partial:: 
class:: 
PrivateArticle:: '
{;; 
public<< 
PrivateArticle<< 
(<< 
int<< !
	articleId<<" +
,<<+ ,
int<<- 0
userId<<1 7
)<<7 8
{== 	
	ArticleId>> 
=>> 
	articleId>> !
;>>! "
UserId?? 
=?? 
userId?? 
;?? 
}@@ 	
[BB 	
KeyBB	 
]BB 
publicCC 
intCC 
IdCC 
{CC 
getCC 
;CC 
setCC  
;CC  !
}CC" #
publicEE 
intEE 
	ArticleIdEE 
{EE 
getEE "
;EE" #
setEE$ '
;EE' (
}EE) *
publicGG 
intGG 
UserIdGG 
{GG 
getGG 
;GG  
setGG! $
;GG$ %
}GG& '
[II 	

ForeignKeyII	 
(II 
$strII 
)II  
]II  !
[JJ 	
InversePropertyJJ	 
(JJ 
$strJJ *
)JJ* +
]JJ+ ,
publicKK 
virtualKK 
ArticleKK 
?KK 
articleKK  '
{KK( )
getKK* -
;KK- .
setKK/ 2
;KK2 3
}KK4 5
[LL 	

ForeignKeyLL	 
(LL 
$strLL 
)LL 
]LL 
[MM 	
InversePropertyMM	 
(MM 
$strMM *
)MM* +
]MM+ ,
publicNN 
virtualNN 
UserNN 
?NN 
userNN !
{NN" #
getNN$ '
;NN' (
setNN) ,
;NN, -
}NN. /
}QQ 
publicSS 

partialSS 
classSS 
PrivateArticleDtoSS *
{SS+ ,
publicUU 
ArticleUU 
?UU 
articleUU 
{UU  !
getUU" %
;UU% &
setUU' *
;UU* +
}UU, -
publicVV 
ListVV 
<VV 
intVV 
>VV 
?VV 
SharedUsersIdVV '
{VV( )
getVV* -
;VV- .
setVV/ 2
;VV2 3
}VV4 5
}WW 
}[[ ø
RC:\Users\manimaran.venkat\Documents\Backup\AspireOverflow\Models\ArticleComment.cs
	namespace 	
AspireOverflow
 
. 
Models 
{		 
public

 

partial

 
class

 
ArticleComment

 '
:

( )
IAuditField

* 5
{ 
public 
ArticleComment 
( 
) 
{ 	
} 	
[ 	
Key	 
] 
public 
int 
ArticleCommentId #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
string 
? 
Comment 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
DateTime 
Datetime  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
int 
UserId 
{ 
get 
;  
set" %
;% &
}& '
public 
int 
	CreatedBy 
{ 
get  
;  !
set! $
;$ %
}% &
public 
int 
	ArticleId 
{ 
get "
;" #
set$ '
;' (
}) *
public   
DateTime   
	CreatedOn   !
{  " #
get  $ '
;  ' (
set  ) ,
;  , -
}  . /
public"" 
int"" 
?"" 
	UpdatedBy"" 
{"" 
get""  #
;""# $
set""% (
;""( )
}""* +
public$$ 
DateTime$$ 
?$$ 
	UpdatedOn$$ "
{$$# $
get$$% (
;$$( )
set$$* -
;$$- .
}$$/ 0
[&& 	

ForeignKey&&	 
(&& 
$str&& 
)&&  
]&&  !
['' 	
InverseProperty''	 
('' 
$str'' *
)''* +
]''+ ,
public(( 
virtual(( 
Article(( 
?(( 
Article((  '
{((( )
get((* -
;((- .
set((/ 2
;((2 3
}((4 5
=((6 7
null((8 <
!((< =
;((= >
[** 	

ForeignKey**	 
(** 
$str** 
)** 
]** 
[++ 	
InverseProperty++	 
(++ 
$str++ *
)++* +
]+++ ,
public,, 
virtual,, 
User,, 
?,, 
User,, !
{,," #
get,,$ '
;,,' (
set,,) ,
;,,, -
},,. /
=,,0 1
null,,2 6
!,,6 7
;,,7 8
}-- 
}.. ∆
OC:\Users\manimaran.venkat\Documents\Backup\AspireOverflow\Models\ArticleLike.cs
	namespace 	
AspireOverflow
 
. 
Models 
{ 
public		 

partial		 
class		 
ArticleLike		 $
{

 
[ 	
Key	 
] 
public 
int 
LikeId 
{ 
get 
;  
set! $
;$ %
}& '
public 
int 
	ArticleId 
{ 
get "
;" #
set$ '
;' (
}) *
public 
int 
UserId 
{ 
get 
;  
set! $
;$ %
}& '
[ 	

ForeignKey	 
( 
$str 
)  
]  !
[ 	
InverseProperty	 
( 
$str '
)' (
]( )
public 
virtual 
Article 
? 
Article  '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
=5 6
null6 :
!: ;
;; <
[ 

ForeignKey 
( 
$str 
) 
] 
[ 
InverseProperty 
( 
$str 
) 
] 
public 

virtual 
User 
? 
	LikedUser "
{# $
get% (
;( )
set* -
;- .
}/ 0
=0 1
null1 5
!5 6
;6 7
} 
} ë
QC:\Users\manimaran.venkat\Documents\Backup\AspireOverflow\Models\ArticleStatus.cs
	namespace 	
AspireOverflow
 
. 
Models 
{ 
public		 

partial		 
class		 
ArticleStatus		 &
{

 
[ 	
Key	 
] 
public 
int 
ArticleStatusID "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
string 
? 
Status 
{ 
get  #
;# $
set% (
;( )
}* +
[ 	
InverseProperty	 
( 
$str (
)( )
]) *
public 
virtual 
ICollection "
<" #
Article# *
>* +
?+ ,
Articles- 5
{6 7
get8 ;
;; <
set= @
;@ A
}B C
} 
} ç
NC:\Users\manimaran.venkat\Documents\Backup\AspireOverflow\Models\Department.cs
	namespace 	
AspireOverflow
 
. 
Models 
{ 
public 
partial 
class 

Department &
{		 
public

 

Department

 
(

 
)

 
{ 	
Designations 
= 
new 
HashSet &
<& '
Designation' 2
>2 3
(3 4
)4 5
;5 6
} 	
public 
int 
DepartmentId 
{  !
get" %
;% &
set' *
;* +
}, -
[ 	
StringLength	 
( 
$num 
) 
] 
public 
string 
DepartmentName $
{% &
get' *
;* +
set, /
;/ 0
}1 2
=3 4
null5 9
!9 :
;: ;
[ 	
InverseProperty	 
( 
$str %
)% &
]& '
public 
virtual 
ICollection "
<" #
Designation# .
>. /
Designations0 <
{= >
get? B
;B C
setD G
;G H
}I J
} 
} ∫
OC:\Users\manimaran.venkat\Documents\Backup\AspireOverflow\Models\Designation.cs
	namespace 	
AspireOverflow
 
. 
Models 
{ 
public 

partial 
class 
Designation $
{		 
[ 	
Key	 
] 
public 
int 
DesignationId  
{! "
get# &
;& '
set( +
;+ ,
}- .
[ 	
StringLength	 
( 
$num 
) 
] 
public 
string 
DesignationName %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
=4 5
null6 :
!: ;
;; <
public 
int 
DepartmentId 
{  !
get" %
;% &
set' *
;* +
}, -
[ 	

ForeignKey	 
( 
$str "
)" #
]# $
[ 	
InverseProperty	 
( 
$str '
)' (
]( )
public 
virtual 

Department !

Department" ,
{- .
get/ 2
;2 3
set4 7
;7 8
}9 :
=; <
null= A
!A B
;B C
[
 
InverseProperty 
( 
$str (
)( )
]) *
public 
virtual 
ICollection "
<" #
User# '
>' (
Users) .
{/ 0
get1 4
;4 5
set6 9
;9 :
}; <
=< =
null> B
!B C
;C D
} 
} Ú
]C:\Users\manimaran.venkat\Documents\Backup\AspireOverflow\Models\Enum\Enum-DevelopmentTeam.cs
	namespace 	
AspireOverflow
 
. 
Models 
{ 
enum 
DevelopmentTeam	 
{ 
Web 
, 
Mobile 
, 
Desktop 
}		 
}

 à
JC:\Users\manimaran.venkat\Documents\Backup\AspireOverflow\Models\Gender.cs
	namespace 	
AspireOverflow
 
. 
Models 
{ 
[ 
Table 

(
 
$str 
) 
] 
public 

partial 
class 
Gender 
{		 
public

 
Gender

 
(

 
)

 
{ 	
Users 
= 
new 
HashSet 
<  
User  $
>$ %
(% &
)& '
;' (
} 	
[ 	
Key	 
] 
[ 
DatabaseGenerated 
(  #
DatabaseGeneratedOption  7
.7 8
None8 <
)< =
]= >
public 
int 
GenderId 
{ 
get !
;! "
set# &
;& '
}( )
[ 	
StringLength	 
( 
$num 
) 
] 
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
=) *
null+ /
!/ 0
;0 1
[ 	
InverseProperty	 
( 
$str !
)! "
]" #
public 
virtual 
ICollection "
<" #
User# '
>' (
Users) .
{/ 0
get1 4
;4 5
set6 9
;9 :
}; <
} 
} ì
ZC:\Users\manimaran.venkat\Documents\Backup\AspireOverflow\Models\Interfaces\IAuditField.cs
	namespace 	
AspireOverflow
 
. 
Models 
.  

Interfaces  *
{ 
public 

	interface 
IAuditField  
{ 
int	 
	CreatedBy 
{ 
get 
; 
set !
;! "
}# $
DateTime			 
	CreatedOn		 
{		 
get		 !
;		! "
set		# &
;		& '
}		( )
int

	 
?

 
	UpdatedBy

 
{

 
get

 
;

 
set

 "
;

" #
}

$ %
DateTime	 
? 
	UpdatedOn 
{ 
get "
;" #
set$ '
;' (
}) *
} 
} ®
HC:\Users\manimaran.venkat\Documents\Backup\AspireOverflow\Models\Mail.cs
	namespace 	
AspireOverflow
 
. 
Models 
{ 
public 

class 
MailRequest 
{ 
public 

string 
? 
ToEmail 
{ 
get  
;  !
set" %
;% &
}' (
public 

string 
? 
Subject 
{ 
get  
;  !
set" %
;% &
}' (
public 

string 
? 
Body 
{ 
get 
; 
set "
;" #
}$ %
}

 
public 

class 
MailSettings 
{ 
public 
string 
? 
Mail 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
? 
DisplayName "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
string 
? 
Password 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
? 
Host 
{ 
get !
;! "
set# &
;& '
}( )
public 
int 
Port 
{ 
get 
; 
set "
;" #
}$ %
} 
} í
IC:\Users\manimaran.venkat\Documents\Backup\AspireOverflow\Models\Query.cs
	namespace 	
AspireOverflow
 
. 
Models 
{ 
public 

partial 
class 
Query 
:  
IAuditField  +
{ 
public		 
Query		 
(		 
)		 
{		 
QueryComments

 
=

 
new

 
HashSet

  '
<

' (
QueryComment

( 4
>

4 5
(

5 6
)

6 7
;

7 8
} 	
[ 	
Key	 
] 
public 
int 
QueryId 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
? 
Title 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
? 
Content 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
? 
code 
{ 
get !
;! "
set# &
;& '
}( )
public 
bool 
IsSolved 
{ 
get "
;" #
set$ '
;' (
}) *
public 
bool 
IsActive 
{ 
get 
; 
set "
;" #
}# $
=% &
true& *
;* +
public 
int 
	CreatedBy 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DateTime 
	CreatedOn !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
int 
? 
	UpdatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
	UpdatedOn "
{# $
get% (
;( )
set* -
;- .
}/ 0
[   	
InverseProperty  	 
(   
$str    
)    !
]  ! "
public!! 
virtual!! 
ICollection!!  
<!!  !
QueryComment!!! -
>!!- .
?!!. /
QueryComments!!0 =
{!!> ?
get!!? B
;!!B C
set!!C F
;!!F G
}!!G H
[## 

ForeignKey## 
(## 
$str## 
)## 
]## 
[$$ 
InverseProperty$$ 
($$ 
$str$$  
)$$  !
]$$! "
public%% 
virtual%% 
User%% 
?%% 
User%% 
{%%  !
get%%! $
;%%$ %
set%%% (
;%%( )
}%%) *
}&& 
}'' √
PC:\Users\manimaran.venkat\Documents\Backup\AspireOverflow\Models\QueryComment.cs
	namespace 	
AspireOverflow
 
. 
Models 
{		 
public

 	
partial


 
class

 
QueryComment

 $
:

% &
IAuditField

& 1
{ 
public 
QueryComment 
( 
) 
{ 
} 	
[ 	
Key	 
] 
public 
int 
QueryCommentId !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 
? 
Comment 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
DateTime 
Datetime  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
string 
? 
Code 
{ 
get  
;  !
set" %
;% &
}' (
public 
int 
QueryId 
{ 
get  
;  !
set" %
;% &
}' (
public 
int 
	CreatedBy 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DateTime 
	CreatedOn !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
int 
? 
	UpdatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
	UpdatedOn "
{# $
get% (
;( )
set* -
;- .
}/ 0
["" 

ForeignKey"" 
("" 
$str"" 
)"" 
]"" 
[## 	
InverseProperty##	 
(## 
$str## (
)##( )
]##) *
public$$ 
virtual$$ 
Query$$ 
?$$ 
Query$$ #
{$$$ %
get$$& )
;$$) *
set$$+ .
;$$. /
}$$0 1
[&&	 


ForeignKey&&
 
(&& 
$str&&  
)&&  !
]&&! "
['' 
InverseProperty'' 
('' 
$str'' &
)''& '
]''' (
public(( 
virtual(( 
User(( 
?(( 
User(( 
{((  !
get((! $
;(($ %
set((% (
;((( )
}(() *
}** 
}** æ
HC:\Users\manimaran.venkat\Documents\Backup\AspireOverflow\Models\Spam.cs
	namespace 	
AspireOverflow
 
. 
Models 
{ 
public 

class 
Spam 
{ 
[ 	
Key	 
] 
public		 
int		 
SpamId		 
{		 
get		 
;		  
set		! $
;		$ %
}		& '
public 
string 
? 
Reason 
{ 
get  #
;# $
set% (
;( )
}* +
public 
int 
QueryId 
{ 
get  
;  !
set" %
;% &
}' (
public 
int 
UserId 
{ 
get 
;  
set! $
;$ %
}& '
public 
int 
VerifyStatusID !
{" #
get$ '
;' (
set) ,
;, -
}. /
[ 	

ForeignKey	 
( 
$str $
)$ %
]% &
public 
virtual 
VerifyStatus #
?# $
VerifyStatus% 1
{2 3
get4 7
;7 8
set9 <
;< =
}> ?
[ 	

ForeignKey	 
( 
$str 
) 
] 
public 
virtual 
Query 
? 
Query #
{$ %
get& )
;) *
set+ .
;. /
}0 1
[ 	

ForeignKey	 
( 
$str 
) 
] 
public 
virtual 
User 
? 
User !
{" #
get$ '
;' (
set) ,
;, -
}. /
} 
} ØC
HC:\Users\manimaran.venkat\Documents\Backup\AspireOverflow\Models\User.cs
	namespace 	
AspireOverflow
 
. 
Models 
{		 
public 

partial 
class 
User 
{ 
public 
User 
( 
) 
{ 	
} 	
[ 	
Key	 
] 
public 
int 
UserId 
{ 
get 
;  
set! $
;$ %
}& '
[ 	
StringLength	 
( 
$num 
) 
] 
public 
string 
FullName 
{  
get! $
;$ %
set& )
;) *
}+ ,
=- .
null/ 3
!3 4
;4 5
public 
int 
GenderId 
{ 
get !
;! "
set# &
;& '
}( )
[ 	
StringLength	 
( 
$num 
) 
] 
public 
string 
	AceNumber 
{  !
get" %
;% &
set' *
;* +
}, -
=. /
null0 4
!4 5
;5 6
public 
string 
EmailAddress "
{# $
get% (
;( )
set* -
;- .
}/ 0
=1 2
null3 7
!7 8
;8 9
[!! 	
Column!!	 
(!! 
TypeName!! 
=!! 
$str!! *
)!!* +
]!!+ ,
public"" 
string"" 
Password"" 
{""  
get""! $
;""$ %
set""& )
;"") *
}""+ ,
=""- .
null""/ 3
!""3 4
;""4 5
public%% 
DateTime%% 
DateOfBirth%% #
{%%$ %
get%%& )
;%%) *
set%%+ .
;%%. /
}%%0 1
public'' 
int'' 
VerifyStatusID'' !
{''" #
get''$ '
;''' (
set'') ,
;'', -
}''. /
=''0 1
$num''2 3
;''3 4
public)) 
bool)) 

IsReviewer)) 
{))  
get))! $
;))$ %
set))& )
;))) *
}))+ ,
public++ 
int++ 

UserRoleId++ 
{++ 
get++  #
;++# $
set++% (
;++( )
}++* +
=++, -
$num++. /
;++/ 0
public.. 
int.. 
DesignationId..  
{..! "
get..# &
;..& '
set..( +
;..+ ,
}..- .
public00 
DateTime00 
	CreatedOn00 !
{00" #
get00$ '
;00' (
set00) ,
;00, -
}00. /
=000 1
DateTime002 :
.00: ;
Now00; >
;00> ?
public33 
DateTime33 
?33 
	UpdatedOn33 "
{33# $
get33% (
;33( )
set33* -
;33- .
}33/ 0
public44 
int44 
?44 
	UpdatedBy44 
{44 
get44  #
;44# $
set44% (
;44( )
}44* +
[77 	

ForeignKey77	 
(77 
$str77 #
)77# $
]77$ %
[88 	
InverseProperty88	 
(88 
$str88  
)88  !
]88! "
public:: 
virtual:: 
Designation:: "
?::" #
Designation::$ /
{::0 1
get::2 5
;::5 6
set::7 :
;::: ;
}::< =
=::> ?
null::@ D
!::D E
;::E F
[;; 	

ForeignKey;;	 
(;; 
$str;; 
);; 
];;  
[<< 	
InverseProperty<<	 
(<< 
$str<<  
)<<  !
]<<! "
public== 
virtual== 
Gender== 
?== 
Gender== %
{==& '
get==( +
;==+ ,
set==- 0
;==0 1
}==2 3
===4 5
null==6 :
!==: ;
;==; <
[?? 	

ForeignKey??	 
(?? 
$str??  
)??  !
]??! "
[@@ 	
InverseProperty@@	 
(@@ 
$str@@  
)@@  !
]@@! "
publicAA 
virtualAA 
UserRoleAA 
?AA  
UserRoleAA! )
{AA* +
getAA, /
;AA/ 0
setAA1 4
;AA4 5
}AA6 7
=AA8 9
nullAA: >
!AA> ?
;AA? @
[CC 	

ForeignKeyCC	 
(CC 
$strCC $
)CC$ %
]CC% &
[DD 	
InversePropertyDD	 
(DD 
$strDD  
)DD  !
]DD! "
publicEE 
virtualEE 
VerifyStatusEE #
?EE# $
VerifyStatusEE% 1
{EE2 3
getEE4 7
;EE7 8
setEE9 <
;EE< =
}EE> ?
=EE@ A
nullEEB F
!EEF G
;EEG H
[GG 	
InversePropertyGG	 
(GG 
$strGG 
)GG  
]GG  !
publicHH 
virtualHH 
ICollectionHH "
<HH" #
QueryHH# (
>HH( )
?HH) *
QueriesHH+ 2
{HH3 4
getHH5 8
;HH8 9
setHH: =
;HH= >
}HH? @
[II 	
InversePropertyII	 
(II 
$strII 
)II  
]II  !
publicJJ 
virtualJJ 
ICollectionJJ "
<JJ" #
QueryCommentJJ# /
>JJ/ 0
?JJ0 1
QueryCommentsJJ2 ?
{JJ@ A
getJJB E
;JJE F
setJJG J
;JJJ K
}JJL M
[KK 	
InversePropertyKK	 
(KK 
$strKK 
)KK  
]KK  !
publicLL 
virtualLL 
ICollectionLL "
<LL" #
ArticleCommentLL# 1
>LL1 2
?LL2 3
ArticleCommentsLL4 C
{LLD E
getLLF I
;LLI J
setLLK N
;LLN O
}LLP Q
[MM 	
InversePropertyMM	 
(MM 
$strMM 
)MM  
]MM  !
publicNN 
virtualNN 
ICollectionNN "
<NN" #
ArticleNN# *
>NN* +
?NN+ ,
ArticlesNN- 5
{NN6 7
getNN8 ;
;NN; <
setNN= @
;NN@ A
}NNB C
[OO 	
InversePropertyOO	 
(OO 
$strOO $
)OO$ %
]OO% &
publicPP 
virtualPP 
ICollectionPP "
<PP" #
ArticleLikePP# .
>PP. /
?PP/ 0
LikesPP1 6
{PP7 8
getPP9 <
;PP< =
setPP> A
;PPA B
}PPC D
[QQ
 
InversePropertyQQ 
(QQ 
$strQQ !
)QQ! "
]QQ" #
publicRR 
virtualRR 
ICollectionRR "
<RR" #
PrivateArticleRR# 1
>RR1 2
?RR2 3
PrivateArticlesRR4 C
{RRD E
getRRF I
;RRI J
setRRK N
;RRN O
}RRP Q
}WW 
publicYY 

classYY 
LoginYY 
{YY 
publicZZ 
stringZZ 
?ZZ 
EmailZZ 
{ZZ 
getZZ  #
;ZZ# $
setZZ% (
;ZZ( )
}ZZ* +
public[[ 
string[[ 
?[[ 
Password[[ 
{[[  !
get[[" %
;[[% &
set[[' *
;[[* +
}[[, -
}\\ 
public^^ 

class^^ 
CurrentUser^^ 
{^^ 
public__ 
string__ 
?__ 
Email__ 
{__  !
get__" %
;__% &
set__' *
;__* +
}__, -
publicaa 
intaa 
UserIdaa 
{aa 
getaa "
;aa" #
setaa$ '
;aa' (
}aa) *
publiccc 
intcc 
RoleIdcc 
{cc 
getcc "
;cc" #
setcc$ '
;cc' (
}cc) *
publicee 
boolee 

IsRevieweree !
{ee" #
getee$ '
;ee' (
setee) ,
;ee, -
}ee. /
}ff 
}gg õ
LC:\Users\manimaran.venkat\Documents\Backup\AspireOverflow\Models\UserRole.cs
	namespace 	
AspireOverflow
 
. 
Models 
{ 
public		 

partial		 
class		 
UserRole		 !
{

 
public 
UserRole 
( 
) 
{ 	
Users 
= 
new 
HashSet 
<  
User  $
>$ %
(% &
)& '
;' (
} 	
[ 	
Key	 
] 
[ 
DatabaseGenerated 
(  #
DatabaseGeneratedOption  7
.7 8
None8 <
)< =
]= >
public 
int 

UserRoleId 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 
? 
RoleName 
{  !
get" %
;% &
set' *
;* +
}, -
[ 	
InverseProperty	 
( 
$str #
)# $
]$ %
public 
virtual 
ICollection "
<" #
User# '
>' (
Users) .
{/ 0
get1 4
;4 5
set6 9
;9 :
}; <
} 
} ß
PC:\Users\manimaran.venkat\Documents\Backup\AspireOverflow\Models\VerifyStatus.cs
	namespace 	
AspireOverflow
 
. 
Models 
{ 
public		 

partial		 
class		 
VerifyStatus		 %
{

 
public 
VerifyStatus 
( 
) 
{ 	
Users 
= 
new 
HashSet 
<  
User  $
>$ %
(% &
)& '
;' (
} 	
[ 	
Key	 
] 
[ 
DatabaseGenerated 
(  #
DatabaseGeneratedOption  7
.7 8
None8 <
)< =
]= >
public 
int 
VerifyStatusID !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 
? 
Name 
{ 
get !
;! "
set# &
;& '
}( )
[ 	
InverseProperty	 
( 
$str '
)' (
]( )
public 
virtual 
ICollection "
<" #
User# '
>' (
Users) .
{/ 0
get1 4
;4 5
set6 9
;9 :
}; <
} 
} ùU
DC:\Users\manimaran.venkat\Documents\Backup\AspireOverflow\Program.cs
var 
builder 
= 
WebApplication 
. 
CreateBuilder *
(* +
args+ /
)/ 0
;0 1
builder 
. 
Services 
. 
AddControllers 
(  
)  !
;! "
builder 
. 
Services 
. #
AddEndpointsApiExplorer (
(( )
)) *
;* +
try 
{ 
builder 
. 
Services 
. 
AddDbContext !
<! "!
AspireOverflowContext" 7
>7 8
(8 9
options9 @
=>A C
{ 
options 
. 
UseSqlServer 
( 
builder $
.$ %
Configuration% 2
.2 3
GetConnectionString3 F
(F G
$strG P
)P Q
)Q R
;R S
} 
) 
; 
} 
catch 
( 
SystemException 
	Exception  
)  !
{ 
Console   
.   
	WriteLine   
(   
	Exception   
.    
Message    '
)  ' (
;  ( )
}"" 
builder$$ 
.$$ 
Services$$ 
.$$ 
AddHttpLogging$$ 
($$  
httpLogging$$  +
=>$$, .
{%% 
httpLogging&& 
.&& 
LoggingFields&& 
=&& 
HttpLoggingFields&&  1
.&&1 2
All&&2 5
;&&5 6
})) 
))) 
;)) 
builder,, 
.,, 
Services,, 
.,, 
AddTransient,, 
<,, 
IQueryService,, +
,,,+ ,
QueryService,,, 8
>,,8 9
(,,9 :
),,: ;
;,,; <
builder-- 
.-- 
Services-- 
.-- 
AddTransient-- 
<-- 
IQueryRepository-- .
,--. /
QueryRepository--/ >
>--> ?
(--? @
)--@ A
;--A B
builder.. 
... 
Services.. 
... 
AddTransient.. 
<.. 
IArticleRepository.. 0
,..0 1
ArticleRepository..1 B
>..B C
(..C D
)..D E
;..E F
builder// 
.// 
Services// 
.// 
AddTransient// 
<// 
IUserRepository// -
,//- .
UserRepository//. <
>//< =
(//= >
)//> ?
;//? @
builder00 
.00 
Services00 
.00 
AddTransient00 
<00 
IUserService00 *
,00* +
UserService00+ 6
>006 7
(007 8
)008 9
;009 :
builder11 
.11 
Services11 
.11 
AddTransient11 
<11 
ITokenService11 +
,11+ ,
TokenService11, 8
>118 9
(119 :
)11: ;
;11; <
builder33 
.33 
Services33 
.33 
AddTransient33 
<33 
IArticleService33 -
,33- .
ArticleService33. <
>33< =
(33= >
)33> ?
;33? @
builder44 
.44 
Services44 
.44 
	Configure44 
<44 
MailSettings44 '
>44' (
(44( )
builder44) 0
.440 1
Configuration441 >
.44> ?

GetSection44? I
(44I J
$str44J X
)44X Y
)44Y Z
;44Z [
builder55 
.55 
Services55 
.55 
AddTransient55 
<55 
MailService55 )
>55) *
(55* +
)55+ ,
;55, -
builder77 
.77 
Services77 
.77 
AddAuthentication77 "
(77" #
JwtBearerDefaults77# 4
.774 5 
AuthenticationScheme775 I
)77I J
.77J K
AddJwtBearer77K W
(77W X
options77X _
=>77` b
{88 
options99 
.99  
RequireHttpsMetadata99  
=99! "
false99# (
;99( )
options:: 
.:: 
	SaveToken:: 
=:: 
true:: 
;:: 
options;; 
.;; %
TokenValidationParameters;; %
=;;& '
new;;( +%
TokenValidationParameters;;, E
(;;E F
);;F G
{<< 
ValidateIssuer== 
=== 
true== 
,== 
ValidateAudience>> 
=>> 
true>> 
,>>  
ValidAudience?? 
=?? 
builder?? 
.??  
Configuration??  -
[??- .
$str??. <
]??< =
,??= >
ValidIssuer@@ 
=@@ 
builder@@ 
.@@ 
Configuration@@ +
[@@+ ,
$str@@, 8
]@@8 9
,@@9 :
IssuerSigningKeyAA 
=AA 
newAA  
SymmetricSecurityKeyAA 3
(AA3 4
EncodingAA4 <
.AA< =
UTF8AA= A
.AAA B
GetBytesAAB J
(AAJ K
builderAAK R
.AAR S
ConfigurationAAS `
[AA` a
$strAAa j
]AAj k
)AAk l
)AAl m
}BB 
;BB 
}CC 
)CC 
;CC 
builderDD 
.DD 
ServicesDD 
.DD 
AddSwaggerGenDD 
(DD 
cDD  
=>DD! #
{DD$ %
cEE 
.EE 

SwaggerDocEE 
(EE 
$strEE 
,EE 
newEE 
OpenApiInfoEE &
{EE' (
TitleFF 
=FF 
$strFF #
,FF# $
VersionFF% ,
=FF- .
$strFF/ 3
}GG 
)GG 
;GG 
cHH 
.HH !
AddSecurityDefinitionHH 
(HH 
$strHH $
,HH$ %
newHH& )!
OpenApiSecuritySchemeHH* ?
(HH? @
)HH@ A
{HHB C
NameII 
=II 
$strII 
,II 
TypeJJ 
=JJ 
SecuritySchemeTypeJJ %
.JJ% &
ApiKeyJJ& ,
,JJ, -
SchemeKK 
=KK 
$strKK 
,KK 
BearerFormatLL 
=LL 
$strLL  
,LL  !
InMM 
=MM 
ParameterLocationMM "
.MM" #
HeaderMM# )
,MM) *
DescriptionNN 
=NN 
$str	NN ¬
,
NN¬ √
}OO 
)OO 
;OO 
cPP 
.PP "
AddSecurityRequirementPP 
(PP 
newPP  &
OpenApiSecurityRequirementPP! ;
{PP< =
{QQ 	
newRR !
OpenApiSecuritySchemeRR %
{RR& '
	ReferenceSS 
=SS 
newSS 
OpenApiReferenceSS  0
{SS1 2
TypeTT 
=TT 
ReferenceTypeTT (
.TT( )
SecuritySchemeTT) 7
,TT7 8
IdUU 
=UU 
$strUU %
}VV 
}WW 
,WW 
newXX 
stringXX 
[XX 
]XX 
{XX 
}XX 
}YY 	
}ZZ 
)ZZ 
;ZZ 
}[[ 
)[[ 
;[[ 
builder]] 
.]] 
Services]] 
.]] #
AddControllersWithViews]] (
(]]( )
)]]) *
.^^ 
AddNewtonsoftJson^^ 
(^^ 
options^^ 
=>^^ !
options__ 
.__ 
SerializerSettings__ 
.__ !
ReferenceLoopHandling__ 4
=__5 6

Newtonsoft`` 

.``
 
Json`` 
.`` !
ReferenceLoopHandling`` %
.``% &
Ignore``& ,
)aa 
;aa 
trydd 
{ee 
varff 
loggerff 
=ff 
newff 
LoggerConfigurationff (
(ff( )
)ff) *
.gg 
ReadFromgg 
.gg 
Configurationgg 
(gg 
buildergg %
.gg% &
Configurationgg& 3
)gg3 4
.hh 
Enrichhh 
.hh 
FromLogContexthh 
(hh 
)hh 
.ii 
CreateLoggerii 
(ii 
)ii 
;ii 
builderjj 
.jj 
Loggingjj 
.jj 

AddSerilogjj 
(jj 
loggerjj %
)jj% &
;jj& '
}kk 
catchll 
(ll 
	Exceptionll 
	exceptionll 
)ll 
{mm 
Consolenn 
.nn 
	WriteLinenn 
(nn 
	exceptionnn 
.nn  
Messagenn  '
)nn' (
;nn( )
}pp 
varuu 
appuu 
=uu 	
builderuu
 
.uu 
Builduu 
(uu 
)uu 
;uu 
ifzz 
(zz 
appzz 
.zz 
Environmentzz 
.zz 
IsDevelopmentzz !
(zz! "
)zz" #
)zz# $
{{{ 
app|| 
.|| 

UseSwagger|| 
(|| 
)|| 
;|| 
app~~ 
.~~ 
UseSwaggerUI~~ 
(~~ 
)~~ 
;~~ 
} 
appÅÅ 
.
ÅÅ !
UseHttpsRedirection
ÅÅ 
(
ÅÅ 
)
ÅÅ 
;
ÅÅ 
appÉÉ 
.
ÉÉ 
UseHttpLogging
ÉÉ 
(
ÉÉ 
)
ÉÉ 
;
ÉÉ 
appÑÑ 
.
ÑÑ 
UseAuthentication
ÑÑ 
(
ÑÑ 
)
ÑÑ 
;
ÑÑ 
appÖÖ 
.
ÖÖ 
UseAuthorization
ÖÖ 
(
ÖÖ 
)
ÖÖ 
;
ÖÖ 
appàà 
.
àà 
UseCors
àà 
(
àà 
builder
àà 
=>
àà 
{ââ 
builder
ää 
.
ãã 
AllowAnyOrigin
ãã 
(
ãã 
)
ãã 
.
åå 
AllowAnyMethod
åå 
(
åå 
)
åå 
.
çç 
AllowAnyHeader
çç 
(
çç 
)
çç 
;
çç 
}éé 
)
éé 
;
éé 
appëë 
.
ëë 
MapControllers
ëë 
(
ëë 
)
ëë 
;
ëë 
appìì 
.
ìì 
Run
ìì 
(
ìì 
)
ìì 	
;
ìì	 
Û
TC:\Users\manimaran.venkat\Documents\Backup\AspireOverflow\Security\PasswordHasher.cs
	namespace 	
AspireOverflow
 
. 
Security !
{! "
public 
class  
BCryptPasswordHasher "
<" #
TUser# (
>( )
:* +
IPasswordHasher, ;
<; <
TUser< A
>A B
whereC H
TUserI N
:O P
UserQ U
{ 
public 

string 
HashPassword 
(  
TUser  %
user& *
,* +
string, 2
password3 ;
); <
{ 
return 
BCrypt 
. 
Net 
. 
BCrypt  
.  !
HashPassword! -
(- .
password. 6
,6 7
$num8 :
): ;
;; <
}		 
public 
&
PasswordVerificationResult & 
VerifyHashedPassword' ;
(; <
TUser 
user 
, 
string 
hashedPassword '
,' (
string) /
providedPassword0 @
)@ A
{ 
var 
isValid 
= 
BCrypt 
. 
Net  
.  !
BCrypt! '
.' (
Verify( .
(. /
providedPassword/ ?
,? @
hashedPasswordA O
)O P
;P Q
if 

( 
isValid 
&& 
BCrypt 
. 
Net !
.! "
BCrypt" (
.( )
PasswordNeedsRehash) <
(< =
hashedPassword= K
,K L
$numM O
)O P
)P Q
{ 	
return &
PasswordVerificationResult -
.- .
SuccessRehashNeeded. A
;A B
} 	
return 
isValid 
? &
PasswordVerificationResult 3
.3 4
Success4 ;
:< =&
PasswordVerificationResult> X
.X Y
FailedY _
;_ `
} 
} 
} …
[C:\Users\manimaran.venkat\Documents\Backup\AspireOverflow\Security\PasswordHasherFactory.cs
	namespace 	
AspireOverflow
 
. 
Security !
{ 
public 

static 
class !
PasswordHasherFactory -
{ 
public 
static  
BCryptPasswordHasher *
<* +
User+ /
>/ 0$
GetPasswordHasherFactory1 I
(I J
)J K
{ 	
return		 
new		  
BCryptPasswordHasher		 +
<		+ ,
User		, 0
>		0 1
(		1 2
)		2 3
;		3 4
} 	
} 
} ≥˘
TC:\Users\manimaran.venkat\Documents\Backup\AspireOverflow\Services\ArticleService.cs
	namespace 	
AspireOverflow
 
. 
Services !
{ 
public 

class 
ArticleService 
:  !
IArticleService" 1
{ 
private 
readonly 
IArticleRepository +
database, 4
;4 5
private 
readonly 
ILogger  
<  !
ArticleService! /
>/ 0
_logger1 8
;8 9
private 
readonly 
MailService $
_mailService% 1
;1 2
public 
ArticleService 
( 
ILogger %
<% &
ArticleService& 4
>4 5
logger6 <
,< =
MailService> I
mailServiceJ U
,U V
IArticleRepositoryW i
_articleRepositoryj |
)| }
{ 	
_logger 
= 
logger 
; 
_mailService 
= 
mailService &
;& '
database 
= 
_articleRepository )
;) *
} 	
public   
bool   
CreateArticle   !
(  ! "
Article  " )
article  * 1
,  1 2
List  3 7
<  7 8
int  8 ;
>  ; <
?  < =
SharedUsersId  > K
=  L M
null  N R
)  R S
{!! 	
if## 
(## 
!## 

Validation## 
.## 
ValidateArticle## +
(##+ ,
article##, 3
)##3 4
)##4 5
throw##6 ;
new##< ?
ValidationException##@ S
(##S T
$str##T k
)##k l
;##l m
try$$ 
{%% 
article&& 
.&& 
Image&& 
=&& 
System&&  &
.&&& '
Convert&&' .
.&&. /
FromBase64String&&/ ?
(&&? @
article&&@ G
.&&G H
ImageString&&H S
!&&S T
)&&T U
;&&U V
article'' 
.'' 
	CreatedOn'' !
=''" #
DateTime''$ ,
.'', -
Now''- 0
;''0 1
if)) 
()) 
SharedUsersId)) !
!=))" $
null))% )
&&))* ,
article))- 4
.))4 5
	IsPrivate))5 >
&&))? A
SharedUsersId))B O
.))O P
Count))P U
>))V W
$num))X Y
)))Y Z
return))[ a
database))b j
.))j k
AddPrivateArticle))k |
())| }
article	))} Ñ
,
))Ñ Ö
SharedUsersId
))Ü ì
)
))ì î
;
))î ï
return** 
database** 
.**  

AddArticle**  *
(*** +
article**+ 2
)**2 3
;**3 4
}++ 
catch-- 
(-- 
	Exception-- 
	exception-- &
)--& '
{.. 
_logger// 
.// 
LogError//  
(//  !
HelperService//! .
.//. /
LoggerMessage/// <
(//< =
$str//= M
,//M N
$str//O o
,//o p
	exception//q z
,//z {
article	//| É
)
//É Ñ
)
//Ñ Ö
;
//Ö Ü
return00 
false00 
;00 
}11 
}22 	
public77 
bool77 
UpdateArticle77 !
(77! "
Article77" )
article77* 1
,771 2
int773 6
_currentUserId777 E
)77E F
{88 	
if:: 
(:: 
!:: 

Validation:: 
.:: 
ValidateArticle:: +
(::+ ,
article::, 3
)::3 4
)::4 5
throw::6 ;
new::< ?
ValidationException::@ S
(::S T
$str::T k
)::k l
;::l m
try;; 
{<< 
var== 
ExistingArticle== #
===$ %
database==& .
.==. /
GetArticles==/ :
(==: ;
)==; <
.==< =
ToList=== C
(==C D
)==D E
.==E F
Find==F J
(==J K
Item==K O
=>==P R
Item==S W
.==W X
ArtileId==X `
====a c
article==d k
.==k l
ArtileId==l t
&&==u w
Item==x |
.==| }
ArticleStatusID	==} å
==
==ç è
$num
==ê ë
)
==ë í
;
==í ì
if>> 
(>> 
ExistingArticle>> #
==>>$ &
null>>' +
)>>+ ,
throw>>- 2
new>>3 6!
ItemNotFoundException>>7 L
(>>L M
$">>M O
$str>>O y
{>>y z
article	>>z Å
.
>>Å Ç
ArtileId
>>Ç ä
}
>>ä ã
"
>>ã å
)
>>å ç
;
>>ç é
ExistingArticle?? 
.??  
Title??  %
=??& '
article??( /
.??/ 0
Title??0 5
;??5 6
ExistingArticle@@ 
.@@  
Content@@  '
=@@( )
article@@* 1
.@@1 2
Content@@2 9
;@@9 :
ExistingArticleAA 
.AA  
	UpdatedOnAA  )
=AA* +
DateTimeAA, 4
.AA4 5
NowAA5 8
;AA8 9
ExistingArticleBB 
.BB  
	UpdatedByBB  )
=BB* +
_currentUserIdBB, :
;BB: ;
ExistingArticleCC 
.CC  
ArticleStatusIDCC  /
=CC0 1
articleCC2 9
.CC9 :
ArticleStatusIDCC: I
;CCI J
ExistingArticleDD 
.DD  
ImageDD  %
=DD& '
SystemDD( .
.DD. /
ConvertDD/ 6
.DD6 7
FromBase64StringDD7 G
(DDG H
articleDDH O
.DDO P
ImageStringDDP [
!DD[ \
)DD\ ]
;DD] ^
returnGG 
databaseGG 
.GG  
UpdateArticleGG  -
(GG- .
ExistingArticleGG. =
)GG= >
;GG> ?
}HH 
catchJJ 
(JJ 
	ExceptionJJ 
	exceptionJJ &
)JJ& '
{KK 
_loggerLL 
.LL 
LogErrorLL  
(LL  !
HelperServiceLL! .
.LL. /
LoggerMessageLL/ <
(LL< =
$strLL= M
,LLM N
$str	LLO Å
,
LLÅ Ç
	exception
LLÉ å
,
LLå ç
article
LLé ï
)
LLï ñ
)
LLñ ó
;
LLó ò
returnMM 
falseMM 
;MM 
}NN 
}OO 	
publicRR 
boolRR 
ChangeArticleStatusRR '
(RR' (
intRR( +
	ArticleIDRR, 5
,RR5 6
intRR7 :
ArticleStatusIDRR; J
,RRJ K
intRRL O
UserIdRRP V
)RRV W
{SS 	
ifTT 
(TT 
	ArticleIDTT 
<=TT 
$numTT 
)TT 
throwTT  %
newTT& )
ArgumentExceptionTT* ;
(TT; <
$"TT< >
$strTT> p
{TTp q
	ArticleIDTTq z
}TTz {
"TT{ |
)TT| }
;TT} ~
ifUU 
(UU 
ArticleStatusIDUU 
<=UU  "
$numUU# $
||UU% '
ArticleStatusIDUU( 7
>UU8 9
$numUU: ;
)UU; <
throwUU= B
newUUC F
ArgumentExceptionUUG X
(UUX Y
$"UUY [
$str	UU[ ï
{
UUï ñ
ArticleStatusID
UUñ •
}
UU• ¶
"
UU¶ ß
)
UUß ®
;
UU® ©
tryVV 
{WW 
varXX 
IsAddedSuccfullyXX $
=XX% &
databaseXX' /
.XX/ 0
UpdateArticleXX0 =
(XX= >
	ArticleIDXX> G
,XXG H
ArticleStatusIDXXI X
,XXX Y
UserIdXXZ `
)XX` a
;XXa b
ifYY 
(YY 
IsAddedSuccfullyYY $
)YY$ %
_mailServiceYY& 2
?YY2 3
.YY3 4
SendEmailAsyncYY4 B
(YYB C
HelperServiceYYC P
.YYP Q
ArticleMailYYQ \
(YY\ ]
$strYY] w
,YYw x
$str	YYy Ä
,
YYÄ Å
$str
YYÇ †
,
YY† °
$num
YY¢ £
)
YY£ §
)
YY§ •
;
YY• ¶
returnZZ 
IsAddedSuccfullyZZ '
;ZZ' (
}[[ 
catch\\ 
(\\ 
	Exception\\ 
	exception\\ &
)\\& '
{]] 
_logger^^ 
.^^ 
LogError^^  
(^^  !
HelperService^^! .
.^^. /
LoggerMessage^^/ <
(^^< =
$str^^= M
,^^M N
$str	^^O û
,
^^û ü
	exception
^^† ©
)
^^© ™
,
^^™ ´
	ArticleID
^^¨ µ
,
^^µ ∂
ArticleStatusID
^^∑ ∆
)
^^∆ «
;
^^« »
throw`` 
;`` 
}aa 
}bb 	
publicee 
boolee $
DeleteArticleByArticleIdee ,
(ee, -
intee- 0
	ArticleIdee1 :
)ee: ;
{ff 	
ifgg 
(gg 
	ArticleIdgg 
<=gg 
$numgg 
)gg 
throwgg  %
newgg& )
ArgumentExceptiongg* ;
(gg; <
$"gg< >
$strgg> p
{ggp q
	ArticleIdggq z
}ggz {
"gg{ |
)gg| }
;gg} ~
try	gg Ç
{hh 
returnjj 
databasejj 
.jj  
DeleteArticlejj  -
(jj- .
	ArticleIdjj. 7
)jj7 8
;jj8 9
}kk 
catchll 
(ll 
	Exceptionll 
	exceptionll &
)ll& '
{mm 
_loggernn 
.nn 
LogErrornn  
(nn  !
HelperServicenn! .
.nn. /
LoggerMessagenn/ <
(nn< =
$strnn= M
,nnM N
$strnnO x
,nnx y
	exception	nnz É
,
nnÉ Ñ
	ArticleId
nnÖ é
)
nné è
)
nnè ê
;
nnê ë
returnoo 
falseoo 
;oo 
}pp 
}qq 	
publicss 
objectss 
GetArticleByIdss $
(ss$ %
intss% (
	ArticleIdss) 2
)ss2 3
{tt 	
ifuu 
(uu 
	ArticleIduu 
<=uu 
$numuu 
)uu 
throwuu  %
newuu& )
ArgumentExceptionuu* ;
(uu; <
$"uu< >
$struu> p
{uup q
	ArticleIduuq z
}uuz {
"uu{ |
)uu| }
;uu} ~
tryvv 
{ww 
varxx 
articlexx 
=xx 
databasexx &
.xx& '
GetArticleByIDxx' 5
(xx5 6
	ArticleIdxx6 ?
)xx? @
;xx@ A
returnyy 
newyy 
{zz 
	articleId{{ 
={{ 
article{{  '
.{{' (
ArtileId{{( 0
,{{0 1
PublishedDate|| !
=||" #
article||$ +
.||+ ,
	UpdatedBy||, 5
,||5 6
title}} 
=}} 
article}} #
.}}# $
Title}}$ )
,}}) *

AuthorName~~ 
=~~  
article~~! (
.~~( )
User~~) -
?~~- .
.~~. /
FullName~~/ 7
,~~7 8
content 
= 
article %
.% &
Content& -
,- .
image
ÄÄ 
=
ÄÄ 
article
ÄÄ #
.
ÄÄ# $
Image
ÄÄ$ )
,
ÄÄ) *
Likes
ÅÅ 
=
ÅÅ 
GetLikesCount
ÅÅ )
(
ÅÅ) *
article
ÅÅ* 1
.
ÅÅ1 2
ArtileId
ÅÅ2 :
)
ÅÅ: ;
,
ÅÅ; <
comments
ÇÇ 
=
ÇÇ 
GetComments
ÇÇ *
(
ÇÇ* +
article
ÇÇ+ 2
.
ÇÇ2 3
ArtileId
ÇÇ3 ;
)
ÇÇ; <
,
ÇÇ< =
status
ÉÉ 
=
ÉÉ 
article
ÉÉ $
.
ÉÉ$ %
ArticleStatus
ÉÉ% 2
?
ÉÉ2 3
.
ÉÉ3 4
Status
ÉÉ4 :
,
ÉÉ: ;
}
ÖÖ 
;
ÖÖ 
}
ÜÜ 
catch
áá 
(
áá 
	Exception
áá 
	exception
áá &
)
áá& '
{
àà 
_logger
ää 
.
ää 
LogError
ää  
(
ää  !
HelperService
ää! .
.
ää. /
LoggerMessage
ää/ <
(
ää< =
$str
ää= M
,
ääM N
$str
ääO n
,
ään o
	exception
ääp y
,
ääy z
	ArticleIdää{ Ñ
)ääÑ Ö
)ääÖ Ü
;ääÜ á
throw
åå 
;
åå 
}
çç 
}
èè 	
public
ëë 
IEnumerable
ëë 
<
ëë 
object
ëë !
>
ëë! "
GetLatestArticles
ëë# 4
(
ëë4 5
)
ëë5 6
{
íí 	
try
ìì 
{
îî 
var
ïï 
ListOfArticles
ïï "
=
ïï# $
GetArticles
ïï% 0
(
ïï0 1
)
ïï1 2
.
ïï2 3
OrderByDescending
ïï3 D
(
ïïD E
article
ïïE L
=>
ïïM O
article
ïïP W
.
ïïW X
	CreatedOn
ïïX a
)
ïïa b
;
ïïb c
return
ññ 
ListOfArticles
ññ %
.
ññ% &
Select
ññ& ,
(
ññ, -
Article
ññ- 4
=>
ññ5 7
new
ññ8 ;
{
óó 
	ArticleId
òò 
=
òò 
Article
òò  '
.
òò' (
ArtileId
òò( 0
,
òò0 1
title
ôô 
=
ôô 
Article
ôô #
.
ôô# $
Title
ôô$ )
,
ôô) *

AuthorName
öö 
=
öö  
Article
öö! (
.
öö( )
User
öö) -
?
öö- .
.
öö. /
FullName
öö/ 7
,
öö7 8
content
õõ 
=
õõ 
Article
õõ %
.
õõ% &
Content
õõ& -
,
õõ- .
image
úú 
=
úú 
Article
úú #
.
úú# $
Image
úú$ )
,
úú) *
date
ùù 
=
ùù 
Article
ùù "
.
ùù" #
	UpdatedOn
ùù# ,
,
ùù, -
status
ûû 
=
ûû 
Article
ûû $
.
ûû$ %
ArticleStatus
ûû% 2
?
ûû2 3
.
ûû3 4
Status
ûû4 :
,
ûû: ;
}
†† 
)
†† 
;
†† 
}
°° 
catch
££ 
(
££ 
	Exception
££ 
	exception
££ &
)
££& '
{
§§ 
_logger
•• 
.
•• 
LogError
••  
(
••  !
HelperService
••! .
.
••. /
LoggerMessage
••/ <
(
••< =
$str
••= M
,
••M N
$str
••O d
,
••d e
	exception
••f o
)
••o p
)
••p q
;
••q r
throw
¶¶ 
;
¶¶ 
}
ßß 
}
®® 	
public
´´ 
IEnumerable
´´ 
<
´´ 
Object
´´ !
>
´´! "!
GetTrendingArticles
´´# 6
(
´´6 7
)
´´7 8
{
¨¨ 	
try
≠≠ 
{
ÆÆ 
var
ØØ 
data
ØØ 
=
ØØ 
(
ØØ 
database
ØØ $
.
ØØ$ %
GetLikes
ØØ% -
(
ØØ- .
)
ØØ. /
.
ØØ/ 0
GroupBy
ØØ0 7
(
ØØ7 8
item
ØØ8 <
=>
ØØ= ?
item
ØØ@ D
.
ØØD E
	ArticleId
ØØE N
)
ØØN O
)
ØØO P
.
ØØP Q
OrderByDescending
ØØQ b
(
ØØb c
item
ØØc g
=>
ØØh j
item
ØØk o
.
ØØo p
Count
ØØp u
(
ØØu v
)
ØØv w
)
ØØw x
;
ØØx y
var
±± 
ListOfArticleId
±± #
=
±±$ %
(
±±& '
from
±±' +
item
±±, 0
in
±±1 3
data
±±4 8
select
±±9 ?
item
±±@ D
.
±±D E
First
±±E J
(
±±J K
)
±±K L
.
±±L M
	ArticleId
±±M V
)
±±V W
.
±±W X
ToList
±±X ^
(
±±^ _
)
±±_ `
;
±±` a
var
≤≤ 
ListOfArticles
≤≤ "
=
≤≤# $
GetArticles
≤≤% 0
(
≤≤0 1
)
≤≤1 2
.
≤≤2 3
ToList
≤≤3 9
(
≤≤9 :
)
≤≤: ;
;
≤≤; <
var
≥≥ 
TrendingArticles
≥≥ $
=
≥≥% &
new
≥≥' *
List
≥≥+ /
<
≥≥/ 0
Article
≥≥0 7
>
≥≥7 8
(
≥≥8 9
)
≥≥9 :
;
≥≥: ;
foreach
¥¥ 
(
¥¥ 
var
¥¥ 
Id
¥¥ 
in
¥¥  "
ListOfArticleId
¥¥# 2
)
¥¥2 3
{
µµ 
TrendingArticles
∂∂ $
.
∂∂$ %
Add
∂∂% (
(
∂∂( )
ListOfArticles
∂∂) 7
.
∂∂7 8
Find
∂∂8 <
(
∂∂< =
item
∂∂= A
=>
∂∂B D
item
∂∂E I
.
∂∂I J
ArtileId
∂∂J R
==
∂∂S U
Id
∂∂V X
)
∂∂X Y
!
∂∂Y Z
)
∂∂Z [
;
∂∂[ \
}
∑∑ 
return
∏∏ 
TrendingArticles
∏∏ '
.
∏∏' (
Select
∏∏( .
(
∏∏. /
Article
∏∏/ 6
=>
∏∏7 9
new
∏∏: =
{
ππ 
	ArticleId
∫∫ 
=
∫∫ 
Article
∫∫  '
.
∫∫' (
ArtileId
∫∫( 0
,
∫∫0 1
title
ªª 
=
ªª 
Article
ªª #
.
ªª# $
Title
ªª$ )
,
ªª) *

AuthorName
ºº 
=
ºº  
Article
ºº! (
.
ºº( )
User
ºº) -
?
ºº- .
.
ºº. /
FullName
ºº/ 7
,
ºº7 8
content
ΩΩ 
=
ΩΩ 
Article
ΩΩ %
.
ΩΩ% &
Content
ΩΩ& -
,
ΩΩ- .
image
ææ 
=
ææ 
Article
ææ #
.
ææ# $
Image
ææ$ )
,
ææ) *
date
øø 
=
øø 
Article
øø "
.
øø" #
	UpdatedOn
øø# ,
,
øø, -
status
¿¿ 
=
¿¿ 
Article
¿¿ $
.
¿¿$ %
ArticleStatus
¿¿% 2
?
¿¿2 3
.
¿¿3 4
Status
¿¿4 :
,
¿¿: ;
}
¬¬ 
)
¬¬ 
;
¬¬ 
}
√√ 
catch
ƒƒ 
(
ƒƒ 
	Exception
ƒƒ 
	exception
ƒƒ &
)
ƒƒ& '
{
≈≈ 
_logger
∆∆ 
.
∆∆ 
LogError
∆∆  
(
∆∆  !
HelperService
∆∆! .
.
∆∆. /
LoggerMessage
∆∆/ <
(
∆∆< =
$str
∆∆= M
,
∆∆M N
$str
∆∆O f
,
∆∆f g
	exception
∆∆h q
)
∆∆q r
)
∆∆r s
;
∆∆s t
throw
«« 
;
«« 
}
»» 
}
…… 	
public
ÃÃ 
IEnumerable
ÃÃ 
<
ÃÃ 
object
ÃÃ !
>
ÃÃ! "!
GetArticlesByUserId
ÃÃ# 6
(
ÃÃ6 7
int
ÃÃ7 :
UserId
ÃÃ; A
)
ÃÃA B
{
ÕÕ 	
if
ŒŒ 
(
ŒŒ 
UserId
ŒŒ 
<=
ŒŒ 
$num
ŒŒ 
)
ŒŒ 
throw
ŒŒ "
new
ŒŒ# &
ArgumentException
ŒŒ' 8
(
ŒŒ8 9
$"
ŒŒ9 ;
$str
ŒŒ; g
{
ŒŒg h
UserId
ŒŒh n
}
ŒŒn o
"
ŒŒo p
)
ŒŒp q
;
ŒŒq r
try
œœ 
{
–– 
var
—— 
ListOfArticles
—— "
=
——# $
database
——% -
.
——- .
GetArticles
——. 9
(
——9 :
)
——: ;
.
——; <
Where
——< A
(
——A B
item
——B F
=>
——G I
item
——J N
.
——N O
	CreatedBy
——O X
==
——Y [
UserId
——\ b
)
——b c
.
——c d
ToList
——d j
(
——j k
)
——k l
;
——l m
return
““ 
ListOfArticles
““ %
.
““% &
Select
““& ,
(
““, -
Article
““- 4
=>
““5 7
new
““8 ;
{
”” 
	ArticleId
‘‘ 
=
‘‘ 
Article
‘‘  '
.
‘‘' (
ArtileId
‘‘( 0
,
‘‘0 1
title
’’ 
=
’’ 
Article
’’ #
.
’’# $
Title
’’$ )
,
’’) *

AuthorName
÷÷ 
=
÷÷  
Article
÷÷! (
.
÷÷( )
User
÷÷) -
?
÷÷- .
.
÷÷. /
FullName
÷÷/ 7
,
÷÷7 8
content
◊◊ 
=
◊◊ 
Article
◊◊ %
.
◊◊% &
Content
◊◊& -
,
◊◊- .
image
ÿÿ 
=
ÿÿ 
Article
ÿÿ #
.
ÿÿ# $
Image
ÿÿ$ )
,
ÿÿ) *
date
ŸŸ 
=
ŸŸ 
Article
ŸŸ "
.
ŸŸ" #
	UpdatedOn
ŸŸ# ,
,
ŸŸ, -
status
⁄⁄ 
=
⁄⁄ 
Article
⁄⁄ $
.
⁄⁄$ %
ArticleStatus
⁄⁄% 2
?
⁄⁄2 3
.
⁄⁄3 4
Status
⁄⁄4 :
,
⁄⁄: ;
}
‹‹ 
)
‹‹ 
;
‹‹ 
}
ﬁﬁ 
catch
ﬂﬂ 
(
ﬂﬂ 
	Exception
ﬂﬂ 
	exception
ﬂﬂ &
)
ﬂﬂ& '
{
‡‡ 
_logger
‚‚ 
.
‚‚ 
LogError
‚‚  
(
‚‚  !
HelperService
‚‚! .
.
‚‚. /
LoggerMessage
‚‚/ <
(
‚‚< =
$str
‚‚= M
,
‚‚M N
$str
‚‚O p
,
‚‚p q
	exception
‚‚r {
,
‚‚{ |
UserId‚‚} É
)‚‚É Ñ
)‚‚Ñ Ö
;‚‚Ö Ü
throw
‰‰ 
;
‰‰ 
}
ÂÂ 
}
ÁÁ 	
private
ÍÍ 
IEnumerable
ÍÍ 
<
ÍÍ 
Article
ÍÍ #
>
ÍÍ# $
GetArticles
ÍÍ% 0
(
ÍÍ0 1
)
ÍÍ1 2
{
ÎÎ 	
try
ÌÌ 
{
ÓÓ 
var
ÔÔ 
ListOfArticles
ÔÔ "
=
ÔÔ# $
database
ÔÔ% -
.
ÔÔ- .
GetArticles
ÔÔ. 9
(
ÔÔ9 :
)
ÔÔ: ;
.
ÔÔ; <
Where
ÔÔ< A
(
ÔÔA B
item
ÔÔB F
=>
ÔÔG I
item
ÔÔJ N
.
ÔÔN O
ArticleStatusID
ÔÔO ^
==
ÔÔ_ a
$num
ÔÔb c
)
ÔÔc d
;
ÔÔd e
return
 
ListOfArticles
 %
;
% &
}
ÒÒ 
catch
ÛÛ 
(
ÛÛ 
	Exception
ÛÛ 
	exception
ÛÛ &
)
ÛÛ& '
{
ÙÙ 
_logger
ıı 
.
ıı 
LogError
ıı  
(
ıı  !
HelperService
ıı! .
.
ıı. /
LoggerMessage
ıı/ <
(
ıı< =
$str
ıı= M
,
ııM N
$str
ııO ^
,
ıı^ _
	exception
ıı` i
)
ııi j
)
ııj k
;
ıık l
throw
ˆˆ 
;
ˆˆ 
}
˜˜ 
}
˙˙ 	
public
˚˚ 
IEnumerable
˚˚ 
<
˚˚ 
Article
˚˚ "
>
˚˚" #
GetAll
˚˚$ *
(
˚˚* +
)
˚˚+ ,
{
¸¸ 	
try
˛˛ 
{
ˇˇ 
var
ÄÄ 
ListOfArticles
ÄÄ "
=
ÄÄ# $
database
ÄÄ% -
.
ÄÄ- .
GetArticles
ÄÄ. 9
(
ÄÄ9 :
)
ÄÄ: ;
;
ÄÄ; <
return
ÅÅ 
ListOfArticles
ÅÅ %
;
ÅÅ% &
}
ÇÇ 
catch
ÑÑ 
(
ÑÑ 
	Exception
ÑÑ 
	exception
ÑÑ &
)
ÑÑ& '
{
ÖÖ 
_logger
ÜÜ 
.
ÜÜ 
LogError
ÜÜ  
(
ÜÜ  !
HelperService
ÜÜ! .
.
ÜÜ. /
LoggerMessage
ÜÜ/ <
(
ÜÜ< =
$str
ÜÜ= M
,
ÜÜM N
$str
ÜÜO Y
,
ÜÜY Z
	exception
ÜÜ[ d
)
ÜÜd e
)
ÜÜe f
;
ÜÜf g
throw
áá 
;
áá 
}
àà 
}
ãã 	
public
éé 
IEnumerable
éé 
<
éé 
Object
éé !
>
éé! "
GetListOfArticles
éé# 4
(
éé4 5
)
éé5 6
{
èè 	
try
ëë 
{
íí 
var
ìì 
ListOfArticles
ìì "
=
ìì# $
GetArticles
ìì% 0
(
ìì0 1
)
ìì1 2
.
ìì2 3
Where
ìì3 8
(
ìì8 9
Item
ìì9 =
=>
ìì> @
!
ììA B
Item
ììB F
.
ììF G
	IsPrivate
ììG P
)
ììP Q
;
ììQ R
return
îî 
ListOfArticles
îî %
.
îî% &
Select
îî& ,
(
îî, -
Article
îî- 4
=>
îî5 7
new
îî8 ;
{
ïï 
	ArticleId
ññ 
=
ññ 
Article
ññ  '
.
ññ' (
ArtileId
ññ( 0
,
ññ0 1
title
óó 
=
óó 
Article
óó #
.
óó# $
Title
óó$ )
,
óó) *

AuthorName
òò 
=
òò  
Article
òò! (
.
òò( )
User
òò) -
?
òò- .
.
òò. /
FullName
òò/ 7
,
òò7 8
content
ôô 
=
ôô 
Article
ôô %
.
ôô% &
Content
ôô& -
,
ôô- .
image
öö 
=
öö 
Article
öö #
.
öö# $
Image
öö$ )
,
öö) *
date
õõ 
=
õõ 
Article
õõ "
.
õõ" #
	UpdatedOn
õõ# ,
,
õõ, -
status
úú 
=
úú 
Article
úú $
.
úú$ %
ArticleStatus
úú% 2
?
úú2 3
.
úú3 4
Status
úú4 :
,
úú: ;
}
ûû 
)
ûû 
;
ûû 
}
üü 
catch
°° 
(
°° 
	Exception
°° 
	exception
°° &
)
°°& '
{
¢¢ 
_logger
££ 
.
££ 
LogError
££  
(
££  !
HelperService
££! .
.
££. /
LoggerMessage
££/ <
(
££< =
$str
££= M
,
££M N
$str
££O ^
,
££^ _
	exception
££` i
)
££i j
)
££j k
;
££k l
throw
§§ 
;
§§ 
}
•• 
}
®® 	
public
™™ 
IEnumerable
™™ 
<
™™ 
Object
™™ !
>
™™! " 
GetPrivateArticles
™™# 5
(
™™5 6
int
™™6 9
UserId
™™: @
)
™™@ A
{
´´ 	
try
≠≠ 
{
ÆÆ 
var
ØØ #
ListOfPrivateArticles
ØØ )
=
ØØ* +
database
ØØ, 4
.
ØØ4 5 
GetPrivateArticles
ØØ5 G
(
ØØG H
)
ØØH I
.
ØØI J
Where
ØØJ O
(
ØØO P
Item
ØØP T
=>
ØØU W
Item
ØØX \
.
ØØ\ ]
UserId
ØØ] c
==
ØØd f
UserId
ØØg m
)
ØØm n
;
ØØn o
return
∞∞ #
ListOfPrivateArticles
∞∞ ,
.
∞∞, -
Select
∞∞- 3
(
∞∞3 4
PrivateArticle
∞∞4 B
=>
∞∞C E
GetArticleById
∞∞F T
(
∞∞T U
PrivateArticle
∞∞U c
.
∞∞c d
	ArticleId
∞∞d m
)
∞∞m n
)
∞∞n o
;
∞∞o p
}
±± 
catch
≥≥ 
(
≥≥ 
	Exception
≥≥ 
	exception
≥≥ &
)
≥≥& '
{
¥¥ 
_logger
µµ 
.
µµ 
LogError
µµ  
(
µµ  !
HelperService
µµ! .
.
µµ. /
LoggerMessage
µµ/ <
(
µµ< =
$str
µµ= M
,
µµM N
$str
µµO o
,
µµo p
	exception
µµq z
)
µµz {
)
µµ{ |
;
µµ| }
throw
∂∂ 
;
∂∂ 
}
∑∑ 
}
∫∫ 	
public
ææ 
IEnumerable
ææ 
<
ææ 
object
ææ !
>
ææ! " 
GetArticlesByTitle
ææ# 5
(
ææ5 6
string
ææ6 <
Title
ææ= B
)
ææB C
{
øø 	
if
¿¿ 
(
¿¿ 
String
¿¿ 
.
¿¿ 
IsNullOrEmpty
¿¿ $
(
¿¿$ %
Title
¿¿% *
)
¿¿* +
)
¿¿+ ,
throw
¿¿- 2
new
¿¿3 6!
ValidationException
¿¿7 J
(
¿¿J K
$str
¿¿K r
)
¿¿r s
;
¿¿s t
try
¡¡ 
{
¬¬ 
var
√√ 
ListOfArticles
√√ "
=
√√# $
GetArticles
√√% 0
(
√√0 1
)
√√1 2
.
√√2 3
Where
√√3 8
(
√√8 9
article
√√9 @
=>
√√A C
article
√√D K
.
√√K L
Title
√√L Q
!
√√Q R
.
√√R S
Contains
√√S [
(
√√[ \
Title
√√\ a
)
√√a b
)
√√b c
;
√√c d
return
ƒƒ 
ListOfArticles
ƒƒ %
.
ƒƒ% &
Select
ƒƒ& ,
(
ƒƒ, -
Article
ƒƒ- 4
=>
ƒƒ5 7
new
ƒƒ8 ;
{
≈≈ 
	ArticleId
∆∆ 
=
∆∆ 
Article
∆∆  '
.
∆∆' (
ArtileId
∆∆( 0
,
∆∆0 1
title
«« 
=
«« 
Article
«« #
.
««# $
Title
««$ )
,
««) *

AuthorName
»» 
=
»»  
Article
»»! (
.
»»( )
User
»») -
?
»»- .
.
»». /
FullName
»»/ 7
,
»»7 8
content
…… 
=
…… 
Article
…… %
.
……% &
Content
……& -
,
……- .
image
   
=
   
Article
   #
.
  # $
Image
  $ )
,
  ) *
date
ÀÀ 
=
ÀÀ 
Article
ÀÀ "
.
ÀÀ" #
	UpdatedOn
ÀÀ# ,
,
ÀÀ, -
status
ÃÃ 
=
ÃÃ 
Article
ÃÃ $
.
ÃÃ$ %
ArticleStatus
ÃÃ% 2
?
ÃÃ2 3
.
ÃÃ3 4
Status
ÃÃ4 :
,
ÃÃ: ;
}
ŒŒ 
)
ŒŒ 
;
ŒŒ 
}
œœ 
catch
–– 
(
–– 
	Exception
–– 
	exception
–– &
)
––& '
{
—— 
_logger
”” 
.
”” 
LogError
””  
(
””  !
HelperService
””! .
.
””. /
LoggerMessage
””/ <
(
””< =
$str
””= M
,
””M N
$str
””O q
,
””q r
	exception
””s |
,
””| }
Title””~ É
)””É Ñ
)””Ñ Ö
;””Ö Ü
throw
’’ 
;
’’ 
}
÷÷ 
}
ÿÿ 	
public
‹‹ 
IEnumerable
‹‹ 
<
‹‹ 
object
‹‹ !
>
‹‹! "!
GetArticlesByAuthor
‹‹# 6
(
‹‹6 7
string
‹‹7 =

AuthorName
‹‹> H
)
‹‹H I
{
›› 	
if
ﬁﬁ 
(
ﬁﬁ 
String
ﬁﬁ 
.
ﬁﬁ 
IsNullOrEmpty
ﬁﬁ $
(
ﬁﬁ$ %

AuthorName
ﬁﬁ% /
)
ﬁﬁ/ 0
)
ﬁﬁ0 1
throw
ﬁﬁ2 7
new
ﬁﬁ8 ;
ArgumentException
ﬁﬁ< M
(
ﬁﬁM N
$str
ﬁﬁN n
)
ﬁﬁn o
;
ﬁﬁo p
try
ﬂﬂ 
{
‡‡ 
var
·· 
ListOfArticles
·· "
=
··# $
GetArticles
··% 0
(
··0 1
)
··1 2
.
··2 3
Where
··3 8
(
··8 9
article
··9 @
=>
··A C
article
··D K
.
··K L
User
··L P
!
··P Q
.
··Q R
FullName
··R Z
.
··Z [
Contains
··[ c
(
··c d

AuthorName
··d n
)
··n o
)
··o p
;
··p q
return
‚‚ 
ListOfArticles
‚‚ %
.
‚‚% &
Select
‚‚& ,
(
‚‚, -
Article
‚‚- 4
=>
‚‚5 7
new
‚‚8 ;
{
„„ 
	ArticleId
‰‰ 
=
‰‰ 
Article
‰‰  '
.
‰‰' (
ArtileId
‰‰( 0
,
‰‰0 1
title
ÂÂ 
=
ÂÂ 
Article
ÂÂ #
.
ÂÂ# $
Title
ÂÂ$ )
,
ÂÂ) *

AuthorName
ÊÊ 
=
ÊÊ  
Article
ÊÊ! (
.
ÊÊ( )
User
ÊÊ) -
?
ÊÊ- .
.
ÊÊ. /
FullName
ÊÊ/ 7
,
ÊÊ7 8
content
ÁÁ 
=
ÁÁ 
Article
ÁÁ %
.
ÁÁ% &
Content
ÁÁ& -
,
ÁÁ- .
image
ËË 
=
ËË 
Article
ËË #
.
ËË# $
Image
ËË$ )
,
ËË) *
date
ÈÈ 
=
ÈÈ 
Article
ÈÈ "
.
ÈÈ" #
	UpdatedOn
ÈÈ# ,
,
ÈÈ, -
status
ÍÍ 
=
ÍÍ 
Article
ÍÍ $
.
ÍÍ$ %
ArticleStatus
ÍÍ% 2
?
ÍÍ2 3
.
ÍÍ3 4
Status
ÍÍ4 :
,
ÍÍ: ;
}
ÏÏ 
)
ÏÏ 
;
ÏÏ 
}
ÌÌ 
catch
ÓÓ 
(
ÓÓ 
	Exception
ÓÓ 
	exception
ÓÓ &
)
ÓÓ& '
{
ÔÔ 
_logger
ÒÒ 
.
ÒÒ 
LogError
ÒÒ  
(
ÒÒ  !
HelperService
ÒÒ! .
.
ÒÒ. /
LoggerMessage
ÒÒ/ <
(
ÒÒ< =
$str
ÒÒ= M
,
ÒÒM N
$str
ÒÒO w
,
ÒÒw x
	exceptionÒÒy Ç
,ÒÒÇ É

AuthorNameÒÒÑ é
)ÒÒé è
)ÒÒè ê
;ÒÒê ë
throw
ÛÛ 
;
ÛÛ 
}
ÙÙ 
}
ˆˆ 	
public
˘˘ 
IEnumerable
˘˘ 
<
˘˘ 
object
˘˘ !
>
˘˘! "%
GetArticlesByReviewerId
˘˘# :
(
˘˘: ;
int
˘˘; >

ReviewerId
˘˘? I
)
˘˘I J
{
˙˙ 	
if
˚˚ 
(
˚˚ 

ReviewerId
˚˚ 
<=
˚˚ 
$num
˚˚ 
)
˚˚  
throw
˚˚! &
new
˚˚' *
ArgumentException
˚˚+ <
(
˚˚< =
$"
˚˚= ?
$str
˚˚? r
{
˚˚r s

ReviewerId
˚˚s }
}
˚˚} ~
"
˚˚~ 
)˚˚ Ä
;˚˚Ä Å
try
¸¸ 
{
˝˝ 
var
˛˛ 
ListOfArticles
˛˛ "
=
˛˛# $
GetArticles
˛˛% 0
(
˛˛0 1
)
˛˛1 2
.
˛˛2 3
Where
˛˛3 8
(
˛˛8 9
article
˛˛9 @
=>
˛˛A C
article
˛˛D K
.
˛˛K L

ReviewerId
˛˛L V
==
˛˛W Y

ReviewerId
˛˛Z d
)
˛˛d e
;
˛˛e f
return
ˇˇ 
ListOfArticles
ˇˇ %
.
ˇˇ% &
Select
ˇˇ& ,
(
ˇˇ, -
Article
ˇˇ- 4
=>
ˇˇ5 7
new
ˇˇ8 ;
{
ÄÄ 
	ArticleId
ÅÅ 
=
ÅÅ 
Article
ÅÅ  '
.
ÅÅ' (
ArtileId
ÅÅ( 0
,
ÅÅ0 1
title
ÇÇ 
=
ÇÇ 
Article
ÇÇ #
.
ÇÇ# $
Title
ÇÇ$ )
,
ÇÇ) *

AuthorName
ÉÉ 
=
ÉÉ  
Article
ÉÉ! (
.
ÉÉ( )
User
ÉÉ) -
?
ÉÉ- .
.
ÉÉ. /
FullName
ÉÉ/ 7
,
ÉÉ7 8
content
ÑÑ 
=
ÑÑ 
Article
ÑÑ %
.
ÑÑ% &
Content
ÑÑ& -
,
ÑÑ- .
image
ÖÖ 
=
ÖÖ 
Article
ÖÖ #
.
ÖÖ# $
Image
ÖÖ$ )
,
ÖÖ) *
date
ÜÜ 
=
ÜÜ 
Article
ÜÜ "
.
ÜÜ" #
	UpdatedOn
ÜÜ# ,
,
ÜÜ, -
status
áá 
=
áá 
Article
áá $
.
áá$ %
ArticleStatus
áá% 2
?
áá2 3
.
áá3 4
Status
áá4 :
,
áá: ;
}
ââ 
)
ââ 
;
ââ 
}
ää 
catch
ãã 
(
ãã 
	Exception
ãã 
	exception
ãã &
)
ãã& '
{
åå 
_logger
éé 
.
éé 
LogError
éé  
(
éé  !
HelperService
éé! .
.
éé. /
LoggerMessage
éé/ <
(
éé< =
$str
éé= M
,
ééM N
$str
ééO y
,
ééy z
	exceptionéé{ Ñ
,ééÑ Ö

ReviewerIdééÜ ê
)ééê ë
)ééë í
;ééí ì
throw
êê 
;
êê 
}
ëë 
}
ìì 	
public
ññ 
IEnumerable
ññ 
<
ññ 
object
ññ !
>
ññ! "*
GetArticlesByArticleStatusId
ññ# ?
(
ññ? @
int
ññ@ C
ArticleStatusID
ññD S
)
ññS T
{
óó 	
if
ôô 
(
ôô 
ArticleStatusID
ôô 
<=
ôô  "
$num
ôô# $
||
ôô% '
ArticleStatusID
ôô( 7
>
ôô8 9
$num
ôô: ;
)
ôô; <
throw
ôô= B
new
ôôC F
ArgumentException
ôôG X
(
ôôX Y
$"
ôôY [
$strôô[ ï
{ôôï ñ
ArticleStatusIDôôñ •
}ôô• ¶
"ôô¶ ß
)ôôß ®
;ôô® ©
try
öö 
{
õõ 
var
úú 
ListOfArticles
úú "
=
úú# $
database
úú% -
.
úú- .
GetArticles
úú. 9
(
úú9 :
)
úú: ;
.
úú; <
Where
úú< A
(
úúA B
item
úúB F
=>
úúG I
item
úúJ N
.
úúN O
ArticleStatusID
úúO ^
==
úú_ a
ArticleStatusID
úúb q
)
úúq r
.
úúr s
ToList
úús y
(
úúy z
)
úúz {
;
úú{ |
return
ùù 
ListOfArticles
ùù %
.
ùù% &
Select
ùù& ,
(
ùù, -
Article
ùù- 4
=>
ùù5 7
new
ùù8 ;
{
ûû 
	ArticleId
üü 
=
üü 
Article
üü  '
.
üü' (
ArtileId
üü( 0
,
üü0 1
title
†† 
=
†† 
Article
†† #
.
††# $
Title
††$ )
,
††) *

AuthorName
°° 
=
°°  
Article
°°! (
.
°°( )
User
°°) -
?
°°- .
.
°°. /
FullName
°°/ 7
,
°°7 8
content
¢¢ 
=
¢¢ 
Article
¢¢ %
.
¢¢% &
Content
¢¢& -
,
¢¢- .
image
££ 
=
££ 
Article
££ #
.
££# $
Image
££$ )
,
££) *
date
§§ 
=
§§ 
Article
§§ "
.
§§" #
	UpdatedOn
§§# ,
,
§§, -
status
•• 
=
•• 
Article
•• $
.
••$ %
ArticleStatus
••% 2
?
••2 3
.
••3 4
Status
••4 :
,
••: ;
}
¶¶ 
)
¶¶ 
;
¶¶ 
}
ßß 
catch
®® 
(
®® 
	Exception
®® 
	exception
®® &
)
®®& '
{
©© 
_logger
™™ 
.
™™ 
LogError
™™  
(
™™  !
HelperService
™™! .
.
™™. /
LoggerMessage
™™/ <
(
™™< =
$str
™™= M
,
™™M N
$str™™O Ç
,™™Ç É
	exception™™Ñ ç
)™™ç é
,™™é è
ArticleStatusID™™ê ü
)™™ü †
;™™† °
throw
¨¨ 
;
¨¨ 
}
≠≠ 
}
ØØ 	
public
≥≥ 
bool
≥≥ 
CreateComment
≥≥ !
(
≥≥! "
ArticleComment
≥≥" 0
comment
≥≥1 8
)
≥≥8 9
{
¥¥ 	

Validation
µµ 
.
µµ $
ValidateArticleComment
µµ -
(
µµ- .
comment
µµ. 5
)
µµ5 6
;
µµ6 7
try
∂∂ 
{
∑∑ 
comment
∏∏ 
.
∏∏ 
	CreatedBy
∏∏ !
=
∏∏" #
comment
∏∏$ +
.
∏∏+ ,
UserId
∏∏, 2
;
∏∏2 3
var
ππ #
IsCommentSuccessfully
ππ )
=
ππ* +
database
ππ, 4
.
ππ4 5

AddComment
ππ5 ?
(
ππ? @
comment
ππ@ G
)
ππG H
;
ππH I
if
∫∫ 
(
∫∫ #
IsCommentSuccessfully
∫∫ )
)
∫∫) *
_mailService
∫∫+ 7
?
∫∫7 8
.
∫∫8 9
SendEmailAsync
∫∫9 G
(
∫∫G H
HelperService
∫∫H U
.
∫∫U V
CommentMail
∫∫V a
(
∫∫a b
$str∫∫b Ö
,∫∫Ö Ü
$str∫∫á é
,∫∫é è
$str∫∫ê Æ
)∫∫Æ Ø
)∫∫Ø ∞
;∫∫∞ ±
return
ªª #
IsCommentSuccessfully
ªª ,
;
ªª, -
}
ºº 
catch
ΩΩ 
(
ΩΩ 
	Exception
ΩΩ 
	exception
ΩΩ &
)
ΩΩ& '
{
ææ 
_logger
øø 
.
øø 
LogError
øø  
(
øø  !
HelperService
øø! .
.
øø. /
LoggerMessage
øø/ <
(
øø< =
$str
øø= M
,
øøM N
$str
øøO `
,
øø` a
	exception
øøb k
)
øøk l
,
øøl m
comment
øøn u
)
øøu v
;
øøv w
return
¿¿ 
false
¿¿ 
;
¿¿ 
}
¡¡ 
}
¬¬ 	
public
≈≈ 
IEnumerable
≈≈ 
<
≈≈ 
Object
≈≈ !
>
≈≈! "
GetComments
≈≈# .
(
≈≈. /
int
≈≈/ 2
	ArticleID
≈≈3 <
)
≈≈< =
{
∆∆ 	
if
«« 
(
«« 
	ArticleID
«« 
<=
«« 
$num
«« 
)
«« 
throw
««  %
new
««& )
ArgumentException
««* ;
(
««; <
$"
««< >
$str
««> p
{
««p q
	ArticleID
««q z
}
««z {
"
««{ |
)
««| }
;
««} ~
try
»» 
{
…… 
var
   
ListOfComments
   "
=
  # $
database
  % -
.
  - .
GetComments
  . 9
(
  9 :
)
  : ;
.
  ; <
Where
  < A
(
  A B
comment
  B I
=>
  J L
comment
  M T
.
  T U
	ArticleId
  U ^
==
  _ a
	ArticleID
  b k
)
  k l
;
  l m
return
ÀÀ 
ListOfComments
ÀÀ %
.
ÀÀ% &
Select
ÀÀ& ,
(
ÀÀ, -
Item
ÀÀ- 1
=>
ÀÀ2 4
new
ÀÀ5 8
{
ÃÃ 
	CommentId
ÕÕ 
=
ÕÕ 
Item
ÕÕ  $
.
ÕÕ$ %
ArticleCommentId
ÕÕ% 5
,
ÕÕ5 6
Message
ŒŒ 
=
ŒŒ 
Item
ŒŒ "
.
ŒŒ" #
Comment
ŒŒ# *
,
ŒŒ* +
Name
œœ 
=
œœ 
Item
œœ 
.
œœ  
User
œœ  $
?
œœ$ %
.
œœ% &
FullName
œœ& .
,
œœ. /
	ArticleId
–– 
=
–– 
Item
––  $
.
––$ %
	ArticleId
––% .
}
““ 
)
““ 
;
““ 
}
‘‘ 
catch
’’ 
(
’’ 
	Exception
’’ 
	exception
’’ &
)
’’& '
{
÷÷ 
_logger
◊◊ 
.
◊◊ 
LogError
◊◊  
(
◊◊  !
HelperService
◊◊! .
.
◊◊. /
LoggerMessage
◊◊/ <
(
◊◊< =
$str
◊◊= M
,
◊◊M N
$str
◊◊O ^
,
◊◊^ _
	exception
◊◊` i
,
◊◊i j
	ArticleID
◊◊k t
)
◊◊t u
)
◊◊u v
;
◊◊v w
throw
ÿÿ 
;
ÿÿ 
}
ŸŸ 
}
⁄⁄ 	
public
ﬁﬁ 
bool
ﬁﬁ 
AddLikeToArticle
ﬁﬁ $
(
ﬁﬁ$ %
ArticleLike
ﬁﬁ% 0
Like
ﬁﬁ1 5
)
ﬁﬁ5 6
{
ﬂﬂ 	
if
‡‡ 
(
‡‡ 
Like
‡‡ 
==
‡‡ 
null
‡‡ 
)
‡‡ 
throw
‡‡ #
new
‡‡$ '
ArgumentException
‡‡( 9
(
‡‡9 :
$str
‡‡: ]
)
‡‡] ^
;
‡‡^ _
if
·· 
(
·· 
Like
·· 
.
·· 
	ArticleId
·· 
<=
·· !
$num
··" #
)
··# $
throw
··% *
new
··+ .
ArgumentException
··/ @
(
··@ A
$"
··A C
$str
··C u
{
··u v
Like
··v z
.
··z {
	ArticleId··{ Ñ
}··Ñ Ö
"··Ö Ü
)··Ü á
;··á à
if
‚‚ 
(
‚‚ 
Like
‚‚ 
.
‚‚ 
UserId
‚‚ 
<=
‚‚ 
$num
‚‚  
)
‚‚  !
throw
‚‚" '
new
‚‚( +
ArgumentException
‚‚, =
(
‚‚= >
$"
‚‚> @
$str
‚‚@ l
{
‚‚l m
Like
‚‚m q
.
‚‚q r
UserId
‚‚r x
}
‚‚x y
"
‚‚y z
)
‚‚z {
;
‚‚{ |
try
„„ 
{
‰‰ 
if
ÂÂ 
(
ÂÂ 
database
ÂÂ 
.
ÂÂ 
GetLikes
ÂÂ %
(
ÂÂ% &
)
ÂÂ& '
.
ÂÂ' (
ToList
ÂÂ( .
(
ÂÂ. /
)
ÂÂ/ 0
.
ÂÂ0 1
Find
ÂÂ1 5
(
ÂÂ5 6
item
ÂÂ6 :
=>
ÂÂ; =
item
ÂÂ> B
.
ÂÂB C
UserId
ÂÂC I
==
ÂÂJ L
Like
ÂÂM Q
.
ÂÂQ R
UserId
ÂÂR X
&&
ÂÂY [
item
ÂÂ\ `
.
ÂÂ` a
	ArticleId
ÂÂa j
==
ÂÂk m
Like
ÂÂn r
.
ÂÂr s
	ArticleId
ÂÂs |
)
ÂÂ| }
!=ÂÂ~ Ä
nullÂÂÅ Ö
)ÂÂÖ Ü
throwÂÂá å
newÂÂç ê#
ValidationExceptionÂÂë §
(ÂÂ§ •
$strÂÂ• ⁄
)ÂÂ⁄ €
;ÂÂ€ ‹
return
ÁÁ 
database
ÁÁ 
.
ÁÁ  
AddLike
ÁÁ  '
(
ÁÁ' (
Like
ÁÁ( ,
)
ÁÁ, -
;
ÁÁ- .
}
ËË 
catch
ÈÈ 
(
ÈÈ 
	Exception
ÈÈ 
	exception
ÈÈ &
)
ÈÈ& '
{
ÍÍ 
_logger
ÎÎ 
.
ÎÎ 
LogError
ÎÎ  
(
ÎÎ  !
HelperService
ÎÎ! .
.
ÎÎ. /
LoggerMessage
ÎÎ/ <
(
ÎÎ< =
$str
ÎÎ= M
,
ÎÎM N
$str
ÎÎO c
,
ÎÎc d
	exception
ÎÎe n
,
ÎÎn o
Like
ÎÎp t
)
ÎÎt u
)
ÎÎu v
;
ÎÎv w
return
ÏÏ 
false
ÏÏ 
;
ÏÏ 
}
ÌÌ 
}
ÓÓ 	
public
ÒÒ 
int
ÒÒ 
GetLikesCount
ÒÒ  
(
ÒÒ  !
int
ÒÒ! $
	ArticleID
ÒÒ% .
)
ÒÒ. /
{
ÚÚ 	
if
ÛÛ 
(
ÛÛ 
	ArticleID
ÛÛ 
<=
ÛÛ 
$num
ÛÛ 
)
ÛÛ 
throw
ÛÛ  %
new
ÛÛ& )
ArgumentException
ÛÛ* ;
(
ÛÛ; <
$"
ÛÛ< >
$str
ÛÛ> p
{
ÛÛp q
	ArticleID
ÛÛq z
}
ÛÛz {
"
ÛÛ{ |
)
ÛÛ| }
;
ÛÛ} ~
try
ÙÙ 
{
ıı 
var
ˆˆ 
ArticleLikes
ˆˆ  
=
ˆˆ! "
database
ˆˆ# +
.
ˆˆ+ ,
GetLikes
ˆˆ, 4
(
ˆˆ4 5
)
ˆˆ5 6
.
ˆˆ6 7
Count
ˆˆ7 <
(
ˆˆ< =
item
ˆˆ= A
=>
ˆˆB D
item
ˆˆE I
.
ˆˆI J
	ArticleId
ˆˆJ S
==
ˆˆT V
	ArticleID
ˆˆW `
)
ˆˆ` a
;
ˆˆa b
return
˜˜ 
ArticleLikes
˜˜ #
;
˜˜# $
}
¯¯ 
catch
˘˘ 
(
˘˘ 
	Exception
˘˘ 
	exception
˘˘ &
)
˘˘& '
{
˙˙ 
_logger
˚˚ 
.
˚˚ 
LogError
˚˚  
(
˚˚  !
HelperService
˚˚! .
.
˚˚. /
LoggerMessage
˚˚/ <
(
˚˚< =
$str
˚˚= M
,
˚˚M N
$str
˚˚O `
,
˚˚` a
	exception
˚˚b k
)
˚˚k l
)
˚˚l m
;
˚˚m n
throw
¸¸ 
;
¸¸ 
}
˝˝ 
}
˛˛ 	
}
ÅÅ 
}ÇÇ ˛Q
TC:\Users\manimaran.venkat\Documents\Backup\AspireOverflow\Services\HelperServices.cs
	namespace 	
AspireOverflow
 
. 
Services !
{ 
public 

static 
class 
HelperService %
{ 
public 
static 
string 
PropertyList )
() *
this* .
object/ 5
obj6 9
)9 :
{ 	
if 
( 
obj 
== 
null 
) 
return #
$str$ &
;& '
try 
{ 
var 

properties 
=  
obj! $
.$ %
GetType% ,
(, -
)- .
.. /
GetProperties/ <
(< =
)= >
;> ?
var 
stringBuilder !
=" #
new$ '
StringBuilder( 5
(5 6
)6 7
;7 8
foreach 
( 
var 
data !
in" $

properties% /
)/ 0
{ 
stringBuilder !
.! "

AppendLine" ,
(, -
data- 1
.1 2
Name2 6
+7 8
$str9 =
+> ?
data@ D
.D E
GetValueE M
(M N
objN Q
,Q R
nullS W
)W X
)X Y
;Y Z
} 
return 
stringBuilder $
.$ %
ToString% -
(- .
). /
;/ 0
} 
catch 
{ 
return 
$str 
; 
} 
} 	
public"" 
static"" 
string"" 
LoggerMessage"" *
(""* +
string""+ 1
RepositoryName""2 @
,""@ A
string""B H

MethodName""I S
,""S T
	Exception""U ^
	exception""_ h
,""h i
object""j p
?""p q
Data""r v
=""w x
null""y }
)""} ~
{## 	
return%% 
Data%% 
!=%% 
null%% 
?%%  !
$"%%" $
{%%$ %
RepositoryName%%% 3
}%%3 4
$str%%4 5
{%%5 6

MethodName%%6 @
}%%@ A
$str%%A X
{%%X Y
PropertyList%%Y e
(%%e f
Data%%f j
)%%j k
}%%k l
$str%%l {
{%%{ |
	exception	%%| Ö
.
%%Ö Ü
ToString
%%Ü é
(
%%é è
)
%%è ê
}
%%ê ë
"
%%ë í
:
%%ì î
$"'' 
{'' 
RepositoryName'' 
}'' 
$str''  
{''  !

MethodName''! +
}''+ ,
$str'', 9
{''9 :
	exception'': C
.''C D
ToString''D L
(''L M
)''M N
}''N O
"''O P
;''P Q
}(( 	
public++ 
static++ 
string++ 
LoggerMessage++ *
(++* +
string+++ 1
RepositoryName++2 @
,++@ A
string++B H

MethodName++I S
,++S T
	Exception++U ^
	exception++_ h
,++h i
int++j m
FirstId++n u
,++u v
int++w z
?++z {
secondId	++| Ñ
)
++Ñ Ö
{,, 	
return.. 
secondId.. 
!=.. 
null.. #
?..$ %
$"..& (
{..( )
RepositoryName..) 7
}..7 8
$str..8 9
{..9 :

MethodName..: D
}..D E
$str..E \
{..\ ]
FirstId..] d
}..d e
$str..e g
{..g h
secondId..h p
}..p q
$str	..q Å
{
..Å Ç
	exception
..Ç ã
.
..ã å
ToString
..å î
(
..î ï
)
..ï ñ
}
..ñ ó
"
..ó ò
:
..ô ö
$"00 
{00 
RepositoryName00 
}00 
$str00  
{00  !

MethodName00! +
}00+ ,
$str00, B
{00B C
FirstId00C J
}00J K
$str00K [
{00[ \
	exception00\ e
.00e f
ToString00f n
(00n o
)00o p
}00p q
"00q r
;00r s
}11 	
public44 
static44 
string44 
LoggerMessage44 *
(44* +
string44+ 1
RepositoryName442 @
,44@ A
string44B H

MethodName44I S
,44S T
	Exception44U ^
	exception44_ h
,44h i
string44j p
data44q u
)44u v
{55 	
return77 
$"77 
{77 
RepositoryName77 $
}77$ %
$str77% &
{77& '

MethodName77' 1
}771 2
$str772 I
{77I J
data77J N
}77N O
$str77O _
{77_ `
	exception77` i
.77i j
ToString77j r
(77r s
)77s t
}77t u
"77u v
;77v w
}88 	
public<< 

static<< 
MailRequest<< 
ArticleMail<< )
(<<) *
string<<* 0
RecieverEmail<<1 >
,<<> ?
string<<? E
ArticleTitle<<F R
,<<R S
string<<S Y
Subject<<Z a
,<<a b
int<<b e
ArticleStatusID<<f u
)<<u v
{== 
var>> 
mail>> 
=>> 
new>> 
MailRequest>> $
(>>$ %
)>>% &
;>>& '
mail?? 
.?? 
ToEmail?? 
=?? 
RecieverEmail?? &
;??& '
mail@@ 
.@@ 
Subject@@ 
=@@ 
Subject@@  
;@@  !
switchAA 
(AA 
ArticleStatusIDAA "
)AA" #
{AA# $
caseCC 
$numCC 
:CC 
mailCC 
.CC 
BodyCC !
=CC! "
$"CC" $
$strCC$ W
{CCW X
ArticleTitleCCX d
}CCd e
$str	CCe ≥
"
CC≥ ¥
;
CC¥ µ
returnDD 
mailDD #
;DD# $
caseGG 
$numGG 
:GG 
mailGG 
.GG 
BodyGG !
=GG! "
$"GG" $
$strGG$ W
{GGW X
ArticleTitleGGX d
}GGd e
$str	GGe ¥
"
GG¥ µ
;
GGµ ∂
returnHH 
mailHH #
;HH# $
defaultKK 
:KK 
returnKK 
mailKK  $
;KK$ %
}NN 
}QQ 	
publicUU 

staticUU 
MailRequestUU 
SpamMailUU &
(UU& '
stringUU' -
RecieverEmailUU. ;
,UU; <
stringUU< B

QueryTitleUUC M
,UUM N
stringUUN T
SubjectUUU \
,UU\ ]
intUU] `
VerifyStatusIDUUa o
)UUo p
{VV 	
varWW 
mailWW 
=WW 
newWW 
MailRequestWW $
(WW$ %
)WW% &
;WW& '
mailXX 
.XX 
ToEmailXX 
=XX 
RecieverEmailXX &
;XX& '
mailYY 
.YY 
SubjectYY 
=YY 
SubjectYY  
;YY  !
switchZZ 
(ZZ 
VerifyStatusIDZZ !
)ZZ! "
{ZZ" #
case\\ 
$num\\ 
:\\ 
mail\\ 
.\\ 
Body\\ !
=\\! "
$"\\" $
$str\\$ Y
{\\Y Z

QueryTitle\\Z d
}\\d e
$str	\\e ¨
"
\\¨ ≠
;
\\≠ Æ
return]] 
mail]] #
;]]# $
case`` 
$num`` 
:`` 
mail`` 
.`` 
Body`` !
=``! "
$"``" $
$str``$ Y
{``Y Z

QueryTitle``Z d
}``d e
$str	``e Ω
"
``Ω æ
;
``æ ø
returnaa 
mailaa #
;aa# $
casedd 
$numdd 
:dd 
maildd 
.dd 
Bodydd  
=dd  !
$"dd! #
$strdd# X
{ddX Y

QueryTitleddY c
}ddc d
$str	ddd ±
"
dd± ≤
;
dd≤ ≥
returnee 
mailee "
;ee" #
defaulthh 
:hh 
returnhh 
mailhh  $
;hh$ %
}kk 
}mm 	
publicpp 
staticpp 
MailRequestpp !
	QueryMailpp" +
(pp+ ,
stringpp, 2
RecieverEmailpp3 @
,pp@ A
stringppA G

QueryTitleppH R
,ppR S
stringppS Y
SubjectppZ a
)ppa b
{qq 	
varrr 
mailrr 
=rr 
newrr 
MailRequestrr $
(rr$ %
)rr% &
;rr& '
mailss 
.ss 
ToEmailss 
=ss 
RecieverEmailss &
;ss& '
mailtt 
.tt 
Subjecttt 
=tt 
Subjecttt  
;tt  !
mailuu 
.uu 
Bodyuu 
=uu 
$"uu 
$struu H
{uuH I

QueryTitleuuI S
}uuS T
$str	uuT î
"
uuî ï
;
uuï ñ
returnvv 
mailvv 
;vv 
}xx 	
publiczz 
staticzz 
MailRequestzz !
CommentMailzz" -
(zz- .
stringzz. 4
RecieverEmailzz5 B
,zzB C
stringzzC I
TitlezzJ O
,zzO P
stringzzP V
SubjectzzW ^
)zz^ _
{{{ 	
var|| 
mail|| 
=|| 
new|| 
MailRequest|| $
(||$ %
)||% &
;||& '
mail}} 
.}} 
ToEmail}} 
=}} 
RecieverEmail}} &
;}}& '
mail~~ 
.~~ 
Subject~~ 
=~~ 
Subject~~  
;~~  !
mail 
. 
Body 
= 
$" 
$str [
{[ \
Title\ a
}a b
$str	b ê
"
ê ë
;
ë í
return
ÄÄ 
mail
ÄÄ 
;
ÄÄ 
}
ÇÇ 	
}
ÉÉ 
}ÑÑ ˙
QC:\Users\manimaran.venkat\Documents\Backup\AspireOverflow\Services\MailService.cs
	namespace

 	
AspireOverflow


 
.

 
Services

 !
{

! "
public 

class 
MailService 
: 
IEmailService ,
{ 
private 
readonly 
MailSettings !
_mailSettings" /
;/ 0
public 

MailService 
( 
IOptions 
<  
MailSettings  ,
>, -
mailSettings. :
): ;
{ 
_mailSettings 
= 
mailSettings $
.$ %
Value% *
;* +
} 
public 

async 
Task 
SendEmailAsync $
($ %
MailRequest% 0
mailRequest1 <
)< =
{ 
var 
email 
= 
new 
MimeMessage 
(  
)  !
;! "
email 	
.	 

Sender
 
= 
MailboxAddress !
.! "
Parse" '
(' (
_mailSettings( 5
.5 6
Mail6 :
): ;
;; <
email 	
.	 

To
 
. 
Add 
( 
MailboxAddress 
.  
Parse  %
(% &
mailRequest& 1
.1 2
ToEmail2 9
)9 :
): ;
;; <
email 	
.	 

Subject
 
= 
mailRequest 
.  
Subject  '
;' (
var 
builder 
= 
new 
BodyBuilder !
(! "
)" #
;# $
builder 
. 
TextBody 
= 
mailRequest "
." #
Body# '
;' (
email 	
.	 

Body
 
= 
builder 
. 
ToMessageBody &
(& '
)' (
;( )
using 	
var
 
smtp 
= 
new 

SmtpClient #
(# $
)$ %
;% &
smtp 
. 	
Connect	 
( 
_mailSettings 
. 
Host #
,# $
_mailSettings% 2
.2 3
Port3 7
,7 8
SecureSocketOptions9 L
.L M
StartTlsM U
)U V
;V W
smtp   
.   	
Authenticate  	 
(   
_mailSettings   #
.  # $
Mail  $ (
,  ( )
_mailSettings  * 7
.  7 8
Password  8 @
)  @ A
;  A B
await!! 	
smtp!!
 
.!! 
	SendAsync!! 
(!! 
email!! 
)!! 
;!!  
smtp"" 
."" 	

Disconnect""	 
("" 
true"" 
)"" 
;"" 
}## 
}$$ 
}%% ¯Ä
RC:\Users\manimaran.venkat\Documents\Backup\AspireOverflow\Services\QueryService.cs
	namespace 	
AspireOverflow
 
. 
Services !
{ 
public 

class 
QueryService 
: 
IQueryService ,
{ 
private 
readonly 
IQueryRepository *
database+ 3
;3 4
private 
readonly 
ILogger !
<! "
QueryService" .
>. /
_logger0 7
;7 8
private 
readonly 
MailService $
_mailService% 1
;1 2
public 
QueryService 
( 
ILogger #
<# $
QueryService$ 0
>0 1
logger2 8
,8 9
MailService: E
mailServiceF Q
,Q R
IQueryRepositoryR b
_queryRepositoryc s
)s t
{ 	
_logger 
= 
logger 
; 
_mailService 
= 
mailService &
;& '
database 
= 
_queryRepository &
;& '
}!! 	
public$$ 
bool$$ 
CreateQuery$$ 
($$  
Query$$  %
query$$& +
)$$+ ,
{%% 	

Validation&& 
.&& 
ValidateQuery&& $
(&&$ %
query&&% *
)&&* +
;&&+ ,
try'' 
{(( 
query)) 
.)) 
	CreatedOn)) 
=))  !
DateTime))" *
.))* +
Now))+ .
;)). /
var** 
IsAddedSuccessfully** '
=**( )
database*** 2
.**2 3
AddQuery**3 ;
(**; <
query**< A
)**A B
;**B C
if++ 
(++ 
IsAddedSuccessfully++ '
)++' (
_mailService++) 5
?++5 6
.++6 7
SendEmailAsync++7 E
(++E F
HelperService++F S
.++S T
	QueryMail++T ]
(++] ^
$str++^ x
,++x y
query++z 
.	++ Ä
Title
++Ä Ö
!
++Ö Ü
,
++Ü á
$str
++à §
)
++§ •
)
++• ¶
;
++¶ ß
return,, 
IsAddedSuccessfully,, *
;,,* +
}-- 
catch.. 
(.. 
	Exception.. 
	exception.. &
)..& '
{// 
_logger00 
.00 
LogError00  
(00  !
HelperService00! .
.00. /
LoggerMessage00/ <
(00< =
$str00= K
,00K L
$str00M g
,00g h
	exception00i r
,00r s
query00t y
)00y z
)00z {
;00{ |
return11 
false11 
;11 
}22 
}33 	
public66 
bool66  
RemoveQueryByQueryId66 (
(66( )
int66) ,
QueryId66- 4
)664 5
{77 	
if88 
(88 
QueryId88 
<=88 
$num88 
)88 
throw88 #
new88$ '
ArgumentException88( 9
(889 :
$"88: <
$str88< j
{88j k
QueryId88k r
}88r s
"88s t
)88t u
;88u v
try99 
{:: 
return;; 
database;; 
.;;  
UpdateQuery;;  +
(;;+ ,
QueryId;;, 3
,;;3 4
IsDelete;;5 =
:;;= >
true;;? C
);;C D
;;;D E
}<< 
catch== 
(== 
	Exception== 
	exception== &
)==& '
{>> 
_logger?? 
.?? 
LogError??  
(??  !
HelperService??! .
.??. /
LoggerMessage??/ <
(??< =
$str??= K
,??K L
$str??M p
,??p q
	exception??r {
,??{ |
QueryId	??} Ñ
)
??Ñ Ö
)
??Ö Ü
;
??Ü á
returnAA 
falseAA 
;AA 
}BB 
}DD 	
publicGG 
boolGG 
MarkQueryAsSolvedGG %
(GG% &
intGG& )
QueryIdGG* 1
)GG1 2
{HH 	
ifII 
(II 
QueryIdII 
<=II 
$numII 
)II 
throwII #
newII$ '
ArgumentExceptionII( 9
(II9 :
$"II: <
$strII< j
{IIj k
QueryIdIIk r
}IIr s
"IIs t
)IIt u
;IIu v
tryJJ 
{KK 
returnLL 
databaseLL 
.LL  
UpdateQueryLL  +
(LL+ ,
QueryIdLL, 3
,LL3 4
IsSolvedLL5 =
:LL= >
trueLL? C
)LLC D
;LLD E
}MM 
catchOO 
(OO 
	ExceptionOO 
	exceptionOO &
)OO& '
{PP 
_loggerQQ 
.QQ 
LogErrorQQ  
(QQ  !
HelperServiceQQ! .
.QQ. /
LoggerMessageQQ/ <
(QQ< =
$strQQ= K
,QQK L
$strQQM n
,QQn o
	exceptionQQp y
,QQy z
QueryId	QQ{ Ç
)
QQÇ É
)
QQÉ Ñ
;
QQÑ Ö
returnSS 
falseSS 
;SS 
}TT 
}UU 	
publicWW 
ObjectWW 
GetQueryWW 
(WW 
intWW "
QueryIDWW# *
)WW* +
{XX 	
ifYY 
(YY 
QueryIDYY 
<=YY 
$numYY 
)YY 
throwYY #
newYY$ '
ArgumentExceptionYY( 9
(YY9 :
$"YY: <
$strYY< j
{YYj k
QueryIDYYk r
}YYr s
"YYs t
)YYt u
;YYu v
tryZZ 
{[[ 
var\\ 
Query\\ 
=\\ 
database\\ $
.\\$ %
GetQueryByID\\% 1
(\\1 2
QueryID\\2 9
)\\9 :
;\\: ;
return]] 
new]] 
{^^ 
QueryId__ 
=__ 
Query__ #
.__# $
QueryId__$ +
,__+ ,
Title`` 
=`` 
Query`` !
.``! "
Title``" '
,``' (
Contentaa 
=aa 
Queryaa #
.aa# $
Contentaa$ +
,aa+ ,
codebb 
=bb 
Querybb  
.bb  !
codebb! %
,bb% &
Datecc 
=cc 
Querycc  
.cc  !
	CreatedOncc! *
,cc* +

RaiserNamedd 
=dd  
Querydd! &
.dd& '
Userdd' +
?dd+ ,
.dd, -
FullNamedd- 5
,dd5 6
IsSolvedee 
=ee 
Queryee "
.ee" #
IsSolvedee# +
,ee+ ,
Commentsff 
=ff 
GetCommentsff *
(ff* +
QueryIDff+ 2
)ff2 3
}hh 
;hh 
}ii 
catchjj 
(jj 
	Exceptionjj 
	exceptionjj &
)jj& '
{kk 
_loggerll 
.ll 
LogErrorll  
(ll  !
HelperServicell! .
.ll. /
LoggerMessagell/ <
(ll< =
$strll= K
,llK L
$strllM d
,lld e
	exceptionllf o
,llo p
QueryIDllq x
)llx y
)lly z
;llz {
throwmm 
;mm 
}nn 
}pp 	
privatess 
IEnumerabless 
<ss 
Queryss !
>ss! "

GetQueriesss# -
(ss- .
)ss. /
{tt 	
tryuu 
{vv 
varww 
ListOfQueriesww !
=ww" #
databaseww$ ,
.ww, -

GetQueriesww- 7
(ww7 8
)ww8 9
;ww9 :
returnxx 
ListOfQueriesxx $
;xx$ %
}yy 
catchzz 
(zz 
	Exceptionzz 
	exceptionzz &
)zz& '
{{{ 
_logger|| 
.|| 
LogError||  
(||  !
HelperService||! .
.||. /
LoggerMessage||/ <
(||< =
$str||= K
,||K L
$str||M [
,||[ \
	exception||] f
)||f g
)||g h
;||h i
throw}} 
;}} 
}~~ 
}
ÄÄ 	
public
ÇÇ 
IEnumerable
ÇÇ 
<
ÇÇ 
Object
ÇÇ !
>
ÇÇ! "
GetListOfQueries
ÇÇ# 3
(
ÇÇ3 4
)
ÇÇ4 5
{
ÉÉ 	
try
ÑÑ 
{
ÖÖ 
var
ÜÜ 
ListOfQueries
ÜÜ !
=
ÜÜ" #
database
ÜÜ$ ,
.
ÜÜ, -

GetQueries
ÜÜ- 7
(
ÜÜ7 8
)
ÜÜ8 9
;
ÜÜ9 :
return
áá 
ListOfQueries
áá $
.
áá$ %
Select
áá% +
(
áá+ ,
item
áá, 0
=>
áá1 3
new
áá4 7
{
àà 
QueryId
ââ 
=
ââ 
item
ââ "
.
ââ" #
QueryId
ââ# *
,
ââ* +
Title
ää 
=
ää 
item
ää  
.
ää  !
Title
ää! &
,
ää& '
content
ãã 
=
ãã 
item
ãã "
.
ãã" #
Content
ãã# *
,
ãã* +
IsSolved
åå 
=
åå 
item
åå !
.
åå! "
IsSolved
åå" *
}
çç 
)
çç 
;
çç 
}
éé 
catch
èè 
(
èè 
	Exception
èè 
	exception
èè &
)
èè& '
{
êê 
_logger
ëë 
.
ëë 
LogError
ëë  
(
ëë  !
HelperService
ëë! .
.
ëë. /
LoggerMessage
ëë/ <
(
ëë< =
$str
ëë= K
,
ëëK L
$str
ëëM [
,
ëë[ \
	exception
ëë] f
)
ëëf g
)
ëëg h
;
ëëh i
throw
íí 
;
íí 
}
ìì 
}
ïï 	
public
ôô 
IEnumerable
ôô 
<
ôô 
Object
ôô !
>
ôô! "
GetLatestQueries
ôô# 3
(
ôô3 4
)
ôô4 5
{
öö 	
try
õõ 
{
úú 
var
ùù 
ListOfQueries
ùù !
=
ùù" #

GetQueries
ùù$ .
(
ùù. /
)
ùù/ 0
.
ùù0 1
OrderByDescending
ùù1 B
(
ùùB C
query
ùùC H
=>
ùùI K
query
ùùL Q
.
ùùQ R
	CreatedOn
ùùR [
)
ùù[ \
;
ùù\ ]
return
üü 
ListOfQueries
üü $
.
üü$ %
Select
üü% +
(
üü+ ,
item
üü, 0
=>
üü1 3
new
üü4 7
{
†† 
QueryId
°° 
=
°° 
item
°° "
.
°°" #
QueryId
°°# *
,
°°* +
Title
¢¢ 
=
¢¢ 
item
¢¢  
.
¢¢  !
Title
¢¢! &
,
¢¢& '
content
££ 
=
££ 
item
££ "
.
££" #
Content
££# *
,
££* +
IsSolved
§§ 
=
§§ 
item
§§ #
.
§§# $
IsSolved
§§$ ,
}
•• 
)
•• 
;
•• 
}
¶¶ 
catch
®® 
(
®® 
	Exception
®® 
	exception
®® &
)
®®& '
{
©© 
_logger
™™ 
.
™™ 
LogError
™™  
(
™™  !
HelperService
™™! .
.
™™. /
LoggerMessage
™™/ <
(
™™< =
$str
™™= K
,
™™K L
$str
™™M a
,
™™a b
	exception
™™c l
)
™™l m
)
™™m n
;
™™n o
throw
´´ 
;
´´ 
}
¨¨ 
}
≠≠ 	
public
±± 
IEnumerable
±± 
<
±± 
Object
±± !
>
±±! " 
GetTrendingQueries
±±# 5
(
±±5 6
)
±±6 7
{
≤≤ 	
try
≥≥ 
{
¥¥ 
var
∂∂ 
ListOfComments
∂∂ #
=
∂∂# $
(
∂∂% &
database
∂∂& .
.
∂∂. /
GetComments
∂∂/ :
(
∂∂: ;
)
∂∂; <
.
∂∂< =
GroupBy
∂∂= D
(
∂∂D E
item
∂∂E I
=>
∂∂J L
item
∂∂M Q
.
∂∂Q R
QueryId
∂∂R Y
)
∂∂Y Z
)
∂∂Z [
.
∂∂[ \
OrderByDescending
∂∂\ m
(
∂∂m n
item
∂∂n r
=>
∂∂s u
item
∂∂v z
.
∂∂z {
Count∂∂{ Ä
(∂∂Ä Å
)∂∂Å Ç
)∂∂Ç É
;∂∂É Ñ
var
∏∏ 
ListOfQueryId
∏∏ !
=
∏∏" #
(
∏∏$ %
from
∏∏% )
queryComment
∏∏* 6
in
∏∏7 9
ListOfComments
∏∏: H
select
∏∏I O
queryComment
∏∏P \
.
∏∏\ ]
First
∏∏] b
(
∏∏b c
)
∏∏c d
.
∏∏d e
QueryId
∏∏e l
)
∏∏l m
.
∏∏m n
ToList
∏∏n t
(
∏∏t u
)
∏∏u v
;
∏∏v w
var
ππ 
ListOfQueries
ππ !
=
ππ" #

GetQueries
ππ$ .
(
ππ. /
)
ππ/ 0
.
ππ0 1
Where
ππ1 6
(
ππ6 7
item
ππ7 ;
=>
ππ< >
!
ππ? @
item
ππ@ D
.
ππD E
IsSolved
ππE M
)
ππM N
.
ππN O
ToList
ππO U
(
ππU V
)
ππV W
;
ππW X
var
∫∫ 
TrendingQueries
∫∫ #
=
∫∫$ %
new
∫∫& )
List
∫∫* .
<
∫∫. /
Query
∫∫/ 4
>
∫∫4 5
(
∫∫5 6
)
∫∫6 7
;
∫∫7 8
foreach
ªª 
(
ªª 
var
ªª 
id
ªª 
in
ªª  "
ListOfQueryId
ªª# 0
)
ªª0 1
{
ºº 
TrendingQueries
ΩΩ #
.
ΩΩ# $
Add
ΩΩ$ '
(
ΩΩ' (
ListOfQueries
ΩΩ( 5
.
ΩΩ5 6
Find
ΩΩ6 :
(
ΩΩ: ;
item
ΩΩ; ?
=>
ΩΩ@ B
item
ΩΩC G
.
ΩΩG H
QueryId
ΩΩH O
==
ΩΩP R
id
ΩΩS U
)
ΩΩU V
!
ΩΩV W
)
ΩΩW X
;
ΩΩX Y
}
ææ 
return
øø 
TrendingQueries
øø %
.
øø% &
Select
øø& ,
(
øø, -
item
øø- 1
=>
øø2 4
new
øø5 8
{
¿¿ 
QueryId
¡¡ 
=
¡¡ 
item
¡¡ "
.
¡¡" #
QueryId
¡¡# *
,
¡¡* +
Title
¬¬ 
=
¬¬ 
item
¬¬  
.
¬¬  !
Title
¬¬! &
,
¬¬& '
content
√√ 
=
√√ 
item
√√ "
.
√√" #
Content
√√# *
,
√√* +
IsSolved
ƒƒ 
=
ƒƒ 
item
ƒƒ !
.
ƒƒ! "
IsSolved
ƒƒ" *
}
≈≈ 
)
≈≈ 
;
≈≈ 
}
∆∆ 
catch
»» 
(
»» 
	Exception
»» 
	exception
»» &
)
»»& '
{
…… 
_logger
   
.
   
LogError
    
(
    !
HelperService
  ! .
.
  . /
LoggerMessage
  / <
(
  < =
$str
  = K
,
  K L
$str
  M c
,
  c d
	exception
  e n
)
  n o
)
  o p
;
  p q
throw
ÀÀ 
;
ÀÀ 
}
ÃÃ 
}
ÕÕ 	
public
—— 
IEnumerable
—— 
<
—— 
Object
—— !
>
——! " 
GetQueriesByUserId
——# 5
(
——5 6
int
——6 9
UserId
——: @
)
——@ A
{
““ 	
if
”” 
(
”” 
UserId
”” 
<=
”” 
$num
”” 
)
”” 
throw
”” "
new
””# &
ArgumentException
””' 8
(
””8 9
$"
””9 ;
$str
””; g
{
””g h
UserId
””h n
}
””n o
"
””o p
)
””p q
;
””q r
try
‘‘ 
{
’’ 
var
÷÷ 
ListOfQueries
÷÷ !
=
÷÷" #

GetQueries
÷÷$ .
(
÷÷. /
)
÷÷/ 0
.
÷÷0 1
Where
÷÷1 6
(
÷÷6 7
query
÷÷7 <
=>
÷÷= ?
query
÷÷@ E
.
÷÷E F
	CreatedBy
÷÷F O
==
÷÷P R
UserId
÷÷S Y
)
÷÷Y Z
;
÷÷Z [
return
ÿÿ 
ListOfQueries
ÿÿ $
.
ÿÿ$ %
Select
ÿÿ% +
(
ÿÿ+ ,
item
ÿÿ, 0
=>
ÿÿ1 3
new
ÿÿ4 7
{
ŸŸ 
QueryId
⁄⁄ 
=
⁄⁄ 
item
⁄⁄ "
.
⁄⁄" #
QueryId
⁄⁄# *
,
⁄⁄* +
Title
€€ 
=
€€ 
item
€€  
.
€€  !
Title
€€! &
,
€€& '
content
‹‹ 
=
‹‹ 
item
‹‹ "
.
‹‹" #
Content
‹‹# *
,
‹‹* +
IsSolved
›› 
=
›› 
item
›› #
.
››# $
IsSolved
››$ ,
}
ﬁﬁ 
)
ﬁﬁ 
;
ﬁﬁ 
}
ﬂﬂ 
catch
‡‡ 
(
‡‡ 
	Exception
‡‡ 
	exception
‡‡ &
)
‡‡& '
{
·· 
_logger
‚‚ 
.
‚‚ 
LogError
‚‚  
(
‚‚  !
HelperService
‚‚! .
.
‚‚. /
LoggerMessage
‚‚/ <
(
‚‚< =
$str
‚‚= K
,
‚‚K L
$str
‚‚M m
,
‚‚m n
	exception
‚‚o x
,
‚‚x y
UserId‚‚z Ä
)‚‚Ä Å
)‚‚Å Ç
;‚‚Ç É
throw
„„ 
;
„„ 
}
‰‰ 
}
ÊÊ 	
public
ÈÈ 
IEnumerable
ÈÈ 
<
ÈÈ 
Object
ÈÈ !
>
ÈÈ! "
GetQueriesByTitle
ÈÈ# 4
(
ÈÈ4 5
String
ÈÈ5 ;
Title
ÈÈ< A
)
ÈÈA B
{
ÍÍ 	
if
ÎÎ 
(
ÎÎ 
String
ÎÎ 
.
ÎÎ 
IsNullOrEmpty
ÎÎ $
(
ÎÎ$ %
Title
ÎÎ% *
)
ÎÎ* +
)
ÎÎ+ ,
throw
ÎÎ- 2
new
ÎÎ3 6
ArgumentException
ÎÎ7 H
(
ÎÎH I
$str
ÎÎI e
)
ÎÎe f
;
ÎÎf g
try
ÏÏ 
{
ÌÌ 
var
ÓÓ 
ListOfQueries
ÓÓ !
=
ÓÓ" #

GetQueries
ÓÓ$ .
(
ÓÓ. /
)
ÓÓ/ 0
.
ÓÓ0 1
Where
ÓÓ1 6
(
ÓÓ6 7
query
ÓÓ7 <
=>
ÓÓ= ?
query
ÓÓ@ E
.
ÓÓE F
Title
ÓÓF K
!
ÓÓK L
.
ÓÓL M
Contains
ÓÓM U
(
ÓÓU V
Title
ÓÓV [
)
ÓÓ[ \
)
ÓÓ\ ]
;
ÓÓ] ^
return
ÔÔ 
ListOfQueries
ÔÔ $
.
ÔÔ$ %
Select
ÔÔ% +
(
ÔÔ+ ,
item
ÔÔ, 0
=>
ÔÔ1 3
new
ÔÔ4 7
{
 
QueryId
ÒÒ 
=
ÒÒ 
item
ÒÒ "
.
ÒÒ" #
QueryId
ÒÒ# *
,
ÒÒ* +
Title
ÚÚ 
=
ÚÚ 
item
ÚÚ  
.
ÚÚ  !
Title
ÚÚ! &
,
ÚÚ& '
content
ÛÛ 
=
ÛÛ 
item
ÛÛ "
.
ÛÛ" #
Content
ÛÛ# *
,
ÛÛ* +
IsSolved
ÙÙ 
=
ÙÙ 
item
ÙÙ #
.
ÙÙ# $
IsSolved
ÙÙ$ ,
}
ıı 
)
ıı 
;
ıı 
}
˜˜ 
catch
¯¯ 
(
¯¯ 
	Exception
¯¯ 
	exception
¯¯ &
)
¯¯& '
{
˘˘ 
_logger
˙˙ 
.
˙˙ 
LogError
˙˙  
(
˙˙  !
HelperService
˙˙! .
.
˙˙. /
LoggerMessage
˙˙/ <
(
˙˙< =
$str
˙˙= K
,
˙˙K L
$str
˙˙M n
,
˙˙n o
	exception
˙˙p y
,
˙˙y z
Title˙˙{ Ä
)˙˙Ä Å
)˙˙Å Ç
;˙˙Ç É
throw
˚˚ 
;
˚˚ 
}
¸¸ 
}
˝˝ 	
public
ÄÄ 
IEnumerable
ÄÄ 
<
ÄÄ 
Object
ÄÄ !
>
ÄÄ! "

GetQueries
ÄÄ# -
(
ÄÄ- .
bool
ÄÄ. 2
IsSolved
ÄÄ3 ;
)
ÄÄ; <
{
ÅÅ 	
try
ÇÇ 
{
ÉÉ 
var
ÑÑ 
ListOfQueries
ÑÑ !
=
ÑÑ" #

GetQueries
ÑÑ$ .
(
ÑÑ. /
)
ÑÑ/ 0
.
ÑÑ0 1
Where
ÑÑ1 6
(
ÑÑ6 7
query
ÑÑ7 <
=>
ÑÑ= ?
query
ÑÑ@ E
.
ÑÑE F
IsSolved
ÑÑF N
==
ÑÑO Q
IsSolved
ÑÑR Z
)
ÑÑZ [
;
ÑÑ[ \
return
ÖÖ 
ListOfQueries
ÖÖ $
.
ÖÖ$ %
Select
ÖÖ% +
(
ÖÖ+ ,
item
ÖÖ, 0
=>
ÖÖ1 3
new
ÖÖ4 7
{
ÜÜ 
QueryId
áá 
=
áá 
item
áá "
.
áá" #
QueryId
áá# *
,
áá* +
Title
àà 
=
àà 
item
àà  
.
àà  !
Title
àà! &
,
àà& '
content
ââ 
=
ââ 
item
ââ "
.
ââ" #
Content
ââ# *
,
ââ* +
IsSolved
ää 
=
ää 
item
ää #
.
ää# $
IsSolved
ää$ ,
}
ãã 
)
ãã 
;
ãã 
}
åå 
catch
çç 
(
çç 
	Exception
çç 
	exception
çç &
)
çç& '
{
éé 
_logger
èè 
.
èè 
LogError
èè  
(
èè  !
HelperService
èè! .
.
èè. /
LoggerMessage
èè/ <
(
èè< =
$str
èè= K
,
èèK L
$str
èèM h
,
èèh i
	exception
èèj s
,
èès t
IsSolved
èèu }
)
èè} ~
)
èè~ 
;èè Ä
throw
êê 
;
êê 
}
ëë 
}
íí 	
public
ïï 
bool
ïï 
CreateComment
ïï !
(
ïï! "
QueryComment
ïï" .
comment
ïï/ 6
)
ïï6 7
{
ññ 	

Validation
óó 
.
óó 
ValidateComment
óó &
(
óó& '
comment
óó' .
)
óó. /
;
óó/ 0
try
òò 
{
ôô 
comment
öö 
.
öö 
	CreatedOn
öö !
=
öö! "
DateTime
öö" *
.
öö* +
Now
öö+ .
;
öö. /
comment
õõ 
.
õõ 
Datetime
õõ !
=
õõ! "
DateTime
õõ" *
.
õõ* +
Now
õõ+ .
;
õõ. /
return
úú 
database
úú 
.
úú  

AddComment
úú  *
(
úú* +
comment
úú+ 2
)
úú2 3
;
úú3 4
}
ùù 
catch
ûû 
(
ûû 
	Exception
ûû 
	exception
ûû &
)
ûû& '
{
üü 
_logger
†† 
.
†† 
LogError
††  
(
††  !
HelperService
††! .
.
††. /
LoggerMessage
††/ <
(
††< =
$str
††= K
,
††K L
$str
††M r
,
††r s
	exception
††t }
,
††} ~
comment†† Ü
)††Ü á
)††á à
;††à â
return
°° 
false
°° 
;
°° 
}
¢¢ 
}
££ 	
public
•• 
IEnumerable
•• 
<
•• 
Object
•• !
>
••! "
GetComments
••# .
(
••. /
int
••/ 2
QueryId
••3 :
)
••: ;
{
¶¶ 	
if
ßß 
(
ßß 
QueryId
ßß 
<=
ßß 
$num
ßß 
)
ßß 
throw
ßß #
new
ßß$ '
ArgumentException
ßß( 9
(
ßß9 :
$"
ßß: <
$str
ßß< j
{
ßßj k
QueryId
ßßk r
}
ßßr s
"
ßßs t
)
ßßt u
;
ßßu v
try
®® 
{
©© 
var
™™ 
ListOfComments
™™ "
=
™™# $
database
™™% -
.
™™- .
GetComments
™™. 9
(
™™9 :
)
™™: ;
.
™™; <
Where
™™< A
(
™™A B
comment
™™B I
=>
™™J L
comment
™™M T
.
™™T U
QueryId
™™U \
==
™™] _
QueryId
™™` g
)
™™g h
;
™™h i
return
´´ 
ListOfComments
´´ %
.
´´% &
Select
´´& ,
(
´´, -
item
´´- 1
=>
´´2 4
new
´´5 8
{
¨¨ 
	CommentId
≠≠ 
=
≠≠ 
item
≠≠  $
.
≠≠$ %
QueryCommentId
≠≠% 3
,
≠≠3 4
Message
ÆÆ 
=
ÆÆ 
item
ÆÆ "
.
ÆÆ" #
Comment
ÆÆ# *
,
ÆÆ* +
Name
ØØ 
=
ØØ 
item
ØØ 
.
ØØ  
User
ØØ  $
?
ØØ$ %
.
ØØ% &
FullName
ØØ& .
,
ØØ. /
QueryId
∞∞ 
=
∞∞ 
item
∞∞ "
.
∞∞" #
QueryId
∞∞# *
}
±± 
)
±± 
;
±± 
}
≥≥ 
catch
¥¥ 
(
¥¥ 
	Exception
¥¥ 
	exception
¥¥ &
)
¥¥& '
{
µµ 
_logger
∂∂ 
.
∂∂ 
LogError
∂∂  
(
∂∂  !
HelperService
∂∂! .
.
∂∂. /
LoggerMessage
∂∂/ <
(
∂∂< =
$str
∂∂= K
,
∂∂K L
$str
∂∂M g
,
∂∂g h
	exception
∂∂i r
,
∂∂r s
QueryId
∂∂t {
)
∂∂{ |
)
∂∂| }
;
∂∂} ~
throw
∑∑ 
;
∑∑ 
}
∏∏ 
}
∫∫ 	
public
ææ 
bool
ææ 
ChangeSpamStatus
ææ 
(
ææ 
int
ææ !
QueryId
ææ" )
,
ææ) *
int
ææ+ .
VerifyStatusID
ææ/ =
)
ææ= >
{
øø 	
if
¿¿ 
(
¿¿ 
QueryId
¿¿ 
<=
¿¿ 
$num
¿¿ 
)
¿¿ 
throw
¿¿ #
new
¿¿$ '
ArgumentException
¿¿( 9
(
¿¿9 :
$"
¿¿: <
$str
¿¿< k
{
¿¿k l
QueryId
¿¿l s
}
¿¿s t
"
¿¿t u
)
¿¿u v
;
¿¿v w
if
¡¡ 
(
¡¡ 
VerifyStatusID
¡¡ 
<=
¡¡  
$num
¡¡! "
||
¡¡# %
VerifyStatusID
¡¡& 4
>
¡¡5 6
$num
¡¡7 8
)
¡¡8 9
throw
¡¡9 >
new
¡¡? B
ArgumentException
¡¡C T
(
¡¡T U
$"
¡¡U W
$str¡¡W £
{¡¡£ §
VerifyStatusID¡¡§ ≤
}¡¡≤ ≥
"¡¡≥ ¥
)¡¡¥ µ
;¡¡µ ∂
try
¬¬ 
{
√√ 
var
ƒƒ "
IsChangeSuccessfully
ƒƒ (
=
ƒƒ) *
database
ƒƒ+ 3
.
ƒƒ3 4

UpdateSpam
ƒƒ4 >
(
ƒƒ> ?
QueryId
ƒƒ? F
,
ƒƒF G
VerifyStatusID
ƒƒI W
)
ƒƒW X
;
ƒƒX Y
if
≈≈ 
(
≈≈ "
IsChangeSuccessfully
≈≈ (
)
≈≈( )
_mailService
≈≈* 6
?
≈≈6 7
.
≈≈7 8
SendEmailAsync
≈≈8 F
(
≈≈F G
HelperService
≈≈G T
.
≈≈T U
SpamMail
≈≈U ]
(
≈≈] ^
$str
≈≈^ x
,
≈≈x y
$str≈≈y Ä
,≈≈Ä Å
$str≈≈Ç â
,≈≈ä ã
$num≈≈å ç
)≈≈ç é
)≈≈é è
;≈≈è ê
return
∆∆ "
IsChangeSuccessfully
∆∆ +
;
∆∆+ ,
}
«« 
catch
»» 
(
»» 
	Exception
»» 
	exception
»» &
)
»»& '
{
…… 
_logger
   
.
   
LogError
    
(
    !
HelperService
  ! .
.
  . /
LoggerMessage
  / <
(
  < =
$"
  = ?
$str
  ? K
"
  K L
,
  L M
$str  N Å
,  Å Ç
	exception  É å
,  å ç
QueryId  é ï
,  ï ñ
VerifyStatusID  ñ §
)  § •
)  • ¶
;  ¶ ß
throw
ÀÀ 
;
ÀÀ 
}
ÃÃ 
}
ÕÕ 	
public
–– 
bool
–– 
AddSpam
–– 
(
–– 
Spam
––  
spam
––! %
)
––% &
{
—— 	

Validation
““	 
.
““ 
ValidateSpam
““  
(
““  !
spam
““! %
)
““% &
;
““& '
try
”” 
{
‘‘ 
return
’’ 
database
’’ 
.
’’  
AddSpam
’’  '
(
’’' (
spam
’’( ,
)
’’, -
;
’’- .
}
÷÷ 
catch
◊◊ 
(
◊◊ 
	Exception
◊◊ 
	exception
◊◊ &
)
◊◊& '
{
ÿÿ 
_logger
ŸŸ 
.
ŸŸ 
LogError
ŸŸ  
(
ŸŸ  !
HelperService
ŸŸ! .
.
ŸŸ. /
LoggerMessage
ŸŸ/ <
(
ŸŸ< =
$str
ŸŸ= K
,
ŸŸK L
$str
ŸŸM o
,
ŸŸo p
	exception
ŸŸq z
,
ŸŸz {
spamŸŸ| Ä
)ŸŸÄ Å
)ŸŸÅ Ç
;ŸŸÇ É
return
⁄⁄ 
false
⁄⁄ 
;
⁄⁄ 
}
€€ 
}
‹‹ 	
public
ﬂﬂ 
IEnumerable
ﬂﬂ 
<
ﬂﬂ 
object
ﬂﬂ !
>
ﬂﬂ! "
GetSpams
ﬂﬂ# +
(
ﬂﬂ+ ,
int
ﬂﬂ, /
VerifyStatusID
ﬂﬂ0 >
)
ﬂﬂ> ?
{
‡‡ 	
if
·· 
(
·· 
VerifyStatusID
·· 
<=
··  
$num
··  !
||
··" $
VerifyStatusID
··% 3
>
··4 5
$num
··6 7
)
··7 8
throw
··9 >
new
··? B
ArgumentException
··C T
(
··T U
$str··U ü
)··ü †
;··† °
try
‚‚ 
{
„„ 
var
‰‰ 
Spams
‰‰ 
=
‰‰ 
database
‰‰ $
.
‰‰$ %
GetSpams
‰‰% -
(
‰‰- .
)
‰‰. /
.
‰‰/ 0
Where
‰‰0 5
(
‰‰5 6
item
‰‰6 :
=>
‰‰; =
item
‰‰= A
.
‰‰A B
VerifyStatusID
‰‰B P
==
‰‰P R
VerifyStatusID
‰‰R `
)
‰‰` a
.
‰‰a b
GroupBy
‰‰b i
(
‰‰i j
item
‰‰j n
=>
‰‰o q
item
‰‰r v
.
‰‰v w
QueryId
‰‰w ~
)
‰‰~ 
.‰‰ Ä!
OrderByDescending‰‰Ä ë
(‰‰ë í
item‰‰í ñ
=>‰‰ñ ò
item‰‰ò ú
.‰‰ú ù
Count‰‰ù ¢
(‰‰¢ £
)‰‰£ §
)‰‰§ •
.‰‰• ¶
Select‰‰¶ ¨
(‰‰¨ ≠
item‰‰≠ ±
=>‰‰≤ ¥
new‰‰¥ ∑
{‰‰∑ ∏
ListOfSpams
ÂÂ 
=
ÂÂ 
item
ÂÂ !
.
ÂÂ! "
Select
ÂÂ" (
(
ÂÂ( )
spam
ÂÂ) -
=>
ÂÂ. 0
new
ÂÂ0 3
{
ÂÂ4 5
Name
ÊÊ 
=
ÊÊ 
spam
ÊÊ 
.
ÊÊ 
User
ÊÊ #
?
ÊÊ# $
.
ÊÊ$ %
FullName
ÊÊ% -
,
ÊÊ- .
Reason
ÁÁ 
=
ÁÁ 
spam
ÁÁ 
.
ÁÁ  
Reason
ÁÁ  &
}
ËË 
)
ËË 
,
ËË 
Query
ÈÈ 
=
ÈÈ 
new
ÈÈ 
{
ÈÈ 
QueryId
ÍÍ 
=
ÍÍ 
item
ÍÍ  
.
ÍÍ  !
First
ÍÍ! &
(
ÍÍ& '
)
ÍÍ' (
.
ÍÍ( )
QueryId
ÍÍ) 0
,
ÍÍ0 1
Content
ÎÎ 
=
ÎÎ 
item
ÎÎ  
.
ÎÎ  !
First
ÎÎ! &
(
ÎÎ& '
)
ÎÎ' (
.
ÎÎ( )
Query
ÎÎ) .
?
ÎÎ. /
.
ÎÎ/ 0
Content
ÎÎ0 7
,
ÎÎ7 8
Title
ÏÏ 
=
ÏÏ 
item
ÏÏ 
.
ÏÏ 
First
ÏÏ $
(
ÏÏ$ %
)
ÏÏ% &
.
ÏÏ& '
Query
ÏÏ' ,
?
ÏÏ, -
.
ÏÏ- .
Title
ÏÏ. 3
}
ÌÌ 
}
ÌÌ 
)
ÌÌ 
;
ÌÌ 
return
ÓÓ 
Spams
ÓÓ 
;
ÓÓ 
}
ÔÔ 
catch
 
(
 
	Exception
 
	exception
 &
)
& '
{
ÒÒ 
_logger
ÚÚ 
.
ÚÚ 
LogError
ÚÚ  
(
ÚÚ  !
HelperService
ÚÚ! .
.
ÚÚ. /
LoggerMessage
ÚÚ/ <
(
ÚÚ< =
$str
ÚÚ= K
,
ÚÚK L
$str
ÚÚM Y
,
ÚÚY Z
	exception
ÚÚ[ d
)
ÚÚd e
)
ÚÚe f
;
ÚÚf g
throw
ÛÛ 
;
ÛÛ 
}
ÙÙ 
}
ıı 	
}
ˆˆ 
}˜˜ Ô8
RC:\Users\manimaran.venkat\Documents\Backup\AspireOverflow\Services\TokenService.cs
	namespace		 	
AspireOverflow		
 
.		 
Services		 !
{

 
public 

class 
TokenService 
: 
ITokenService  -
{ 
private 
readonly 
IConfiguration '
_configuration( 6
;6 7
private 
readonly 
IUserService %
_userService& 2
;2 3
private 
readonly 
ILogger  
<  !
TokenService! -
>- .
_logger/ 6
;6 7
public 
TokenService 
( 
IConfiguration *
configuration+ 8
,8 9
IUserService: F
userServiceG R
,R S
ILoggerT [
<[ \
TokenService\ h
>h i
loggerj p
)p q
{ 	
_configuration 
= 
configuration *
;* +
_userService 
= 
userService &
;& '
_logger 
= 
logger 
; 
} 	
public 
object 
GenerateToken #
(# $
Login$ )
Credentials* 5
)5 6
{ 	
if 
( 
Credentials 
== 
null "
)# $
throw$ )
new* -
ArgumentException. ?
(? @
$str@ \
)\ ]
;] ^
if 
( 
! 

Validation 
. #
ValidateUserCredentials 2
(2 3
Credentials3 >
.> ?
Email? D
!D E
,E F
CredentialsF Q
.Q R
PasswordR Z
!Z [
)[ \
)\ ]
throw^ c
newd g
ArgumentExceptionh y
(y z
$str	z ë
)
ë í
;
í ì
var 
user 
= 
_userService #
.# $
GetUser$ +
(+ ,
Credentials, 7
.7 8
Email8 =
!= >
,> ?
Credentials@ K
.K L
PasswordL T
!T U
)U V
;V W
if 
( 
user 
== 
null 
) 
throw #
new$ '
ArgumentException( 9
(9 :
$str: V
)V W
;W X
try 
{   
var"" 
claims"" 
="" 
new""  
[""  !
]""! "
{""# $
new## 
Claim## !
(##! "#
JwtRegisteredClaimNames##" 9
.##9 :
Sub##: =
,##= >
_configuration##? M
[##M N
$str##N [
]##[ \
)##\ ]
,##] ^
new$$ 
Claim$$ !
($$! "#
JwtRegisteredClaimNames$$" 9
.$$9 :
Jti$$: =
,$$= >
Guid$$? C
.$$C D
NewGuid$$D K
($$K L
)$$L M
.$$M N
ToString$$N V
($$V W
)$$W X
)$$X Y
,$$Y Z
new%% 
Claim%% !
(%%! "#
JwtRegisteredClaimNames%%" 9
.%%9 :
Iat%%: =
,%%= >
DateTime%%? G
.%%G H
UtcNow%%H N
.%%N O
ToString%%O W
(%%W X
)%%X Y
)%%Y Z
,%%Z [
new&& 
Claim&& !
(&&! "

ClaimTypes&&" ,
.&&, -
Email&&- 2
,&&2 3
user&&3 7
.&&7 8
EmailAddress&&8 D
)&&D E
,&&E F
new'' 
Claim'' !
(''! "
$str''" *
,''* +
user''+ /
.''/ 0
UserId''0 6
.''6 7
ToString''7 ?
(''? @
)''@ A
)''A B
,''B C
new(( 
Claim(( !
(((! "

ClaimTypes((" ,
.((, -
Role((- 1
,((1 2
user((2 6
.((6 7

UserRoleId((7 A
.((A B
ToString((B J
(((J K
)((K L
)((L M
,((M N
new)) 
Claim)) !
())! "
$str))" .
,)). /
user))/ 3
.))3 4

IsReviewer))4 >
.))> ?
ToString))? G
())G H
)))H I
)))I J
}** 
;** 
var,, 
key,, 
=,, 
new,,  
SymmetricSecurityKey,, 2
(,,2 3
Encoding,,3 ;
.,,; <
UTF8,,< @
.,,@ A
GetBytes,,A I
(,,I J
_configuration,,J X
[,,X Y
$str,,Y b
],,b c
),,c d
),,d e
;,,e f
var-- 
signIn-- 
=-- 
new--  
SigningCredentials--! 3
(--3 4
key--4 7
,--7 8
SecurityAlgorithms--9 K
.--K L

HmacSha256--L V
)--V W
;--W X
var.. 
token.. 
=.. 
new.. 
JwtSecurityToken..  0
(..0 1
_configuration// "
[//" #
$str//# /
]/// 0
,//0 1
_configuration00 "
[00" #
$str00# 1
]001 2
,002 3
claims11 
,11 
expires22 
:22 
DateTime22 %
.22% &
UtcNow22& ,
.22, -

AddMinutes22- 7
(227 8
$num228 ;
)22; <
,22< =
signingCredentials33 &
:33& '
signIn33( .
)33. /
;33/ 0
var55 
Result55 
=55 
new55  
{66 
token77 
=77 
new77 #
JwtSecurityTokenHandler77  7
(777 8
)778 9
.779 :

WriteToken77: D
(77D E
token77E J
)77J K
,77K L
ExpiryInMinutes88 #
=88$ %
$num88& )
,88) *
IsAdmin99 
=99 
user99 "
.99" #

UserRoleId99# -
==99. 0
$num991 2
,992 3

IsReviewer:: 
=::  
user::! %
.::% &

IsReviewer::& 0
,::0 1

IsVerified;; 
=;;  
user;;! %
.;;% &
VerifyStatus;;& 2
?;;2 3
.;;3 4
Name;;4 8
}<< 
;<< 
return>> 
Result>> 
;>> 
}@@ 
catchAA 
(AA 
	ExceptionAA 
	exceptionAA &
)AA& '
{BB 
_loggerCC 
.CC 
LogErrorCC  
(CC  !
HelperServiceCC! .
.CC. /
LoggerMessageCC/ <
(CC< =
$strCC= K
,CCK L
$strCCM |
,CC| }
	exception	CC~ á
,
CCá à
Credentials
CCâ î
)
CCî ï
)
CCï ñ
;
CCñ ó
throwDD 
;DD 
}FF 
}GG 	
}HH 
}II ÎŸ
QC:\Users\manimaran.venkat\Documents\Backup\AspireOverflow\Services\UserService.cs
	namespace		 	
AspireOverflow		
 
.		 
Services		 !
{

 
public 

class 
UserService 
: 
IUserService +
{ 
private 
readonly 
IUserRepository (
database) 1
;1 2
private 
readonly 
ILogger  
<  !
UserService! ,
>, -
_logger. 5
;5 6
public 
UserService 
( 
ILogger "
<" #
UserService# .
>. /
logger0 6
,6 7
IUserRepository8 G
_userRepositoryH W
)W X
{ 	
_logger 
= 
logger 
; 
database 
= 
_userRepository &
;& '
} 	
public 
bool 

CreateUser 
( 
User #
user$ (
)( )
{ 	

Validation 
. 
ValidateUser #
(# $
user$ (
)( )
;) *
try 
{ 
user 
. 
Password 
= !
PasswordHasherFactory  5
.5 6$
GetPasswordHasherFactory6 N
(N O
)O P
.P Q
HashPasswordQ ]
(] ^
user^ b
,b c
userd h
.h i
Passwordi q
)q r
;r s
return   
database   
.    

CreateUser    *
(  * +
user  + /
)  / 0
;  0 1
}!! 
catch"" 
("" 
ValidationException"" &
	exception""' 0
)""0 1
{## 
_logger$$ 
.$$ 
LogError$$  
($$  !
HelperService$$! .
.$$. /
LoggerMessage$$/ <
($$< =
$str$$= J
,$$J K
$str$$L c
,$$c d
	exception$$e n
,$$n o
user$$p t
)$$t u
)$$u v
;$$v w
throw%% 
;%% 
}&& 
catch'' 
('' 
	Exception'' 
	exception'' &
)''& '
{(( 
_logger)) 
.)) 
LogError))  
())  !
HelperService))! .
.)). /
LoggerMessage))/ <
())< =
$str))= J
,))J K
$str))L c
,))c d
	exception))e n
,))n o
user))p t
)))t u
)))u v
;))v w
return** 
false** 
;** 
}++ 
},, 	
public.. 
bool.. 

RemoveUser.. 
(.. 
int.. "
UserId..# )
)..) *
{// 	
if00 
(00 
UserId00 
<=00 
$num00 
)00 
throw00 "
new00# &
ArgumentException00' 8
(008 9
$"009 ;
$str00; g
{00g h
UserId00h n
}00n o
"00o p
)00p q
;00q r
try11 
{22 
return33 
database33 
.33  

RemoveUser33  *
(33* +
UserId33+ 1
)331 2
;332 3
}44 
catch55 
(55 
	Exception55 
	exception55 &
)55& '
{66 
_logger77 
.77 
LogError77  
(77  !
HelperService77! .
.77. /
LoggerMessage77/ <
(77< =
$str77= J
,77J K
$str77L d
,77d e
	exception77f o
,77o p
UserId77q w
)77w x
)77x y
;77y z
return88 
false88 
;88 
}99 
};; 	
public== 
bool== "
UpdateUserByIsReviewer== *
(==* +
int==+ .
UserId==/ 5
,==5 6
bool==7 ;

IsReviewer==< F
)==F G
{>> 	
if?? 
(?? 
UserId?? 
<=?? 
$num?? 
)?? 
throw?? "
new??# &
ArgumentException??' 8
(??8 9
$"??9 ;
$str??; g
{??g h
UserId??h n
}??n o
"??o p
)??p q
;??q r
try@@ 
{AA 
returnBB 
databaseBB 
.BB   
UpdateUserByReviewerBB  4
(BB4 5
UserIdBB5 ;
,BB; <

IsReviewerBB= G
)BBG H
;BBH I
}DD 
catchEE 
(EE 
	ExceptionEE 
	exceptionEE &
)EE& '
{FF 
_loggerGG 
.GG 
LogErrorGG  
(GG  !
HelperServiceGG! .
.GG. /
LoggerMessageGG/ <
(GG< =
$strGG= J
,GGJ K
$str	GGL Ä
,
GGÄ Å
	exception
GGÇ ã
,
GGã å
UserId
GGç ì
)
GGì î
)
GGî ï
;
GGï ñ
returnHH 
falseHH 
;HH 
}II 
}LL 	
publicNN 
UserNN 
GetUserNN 
(NN 
stringNN "
EmailNN# (
,NN( )
stringNN* 0
PasswordNN1 9
)NN9 :
{OO 	
ifPP 
(PP 
EmailPP 
==PP 
nullPP 
||PP  
PasswordPP! )
==PP* ,
nullPP- 1
)PP1 2
throwPP3 8
newPP9 <
ArgumentExceptionPP= N
(PPN O
$strPPO q
)PPq r
;PPr s
tryQQ 
{RR 
varSS 
HasherSS 
=SS !
PasswordHasherFactorySS 2
.SS2 3$
GetPasswordHasherFactorySS3 K
(SSK L
)SSL M
;SSM N
varTT 
UserTT 
=TT 
GetUsersTT #
(TT# $
)TT$ %
.TT% &
ToListTT& ,
(TT, -
)TT- .
.TT. /
FindTT/ 3
(TT3 4
userTT4 8
=>TT9 ;
userTT< @
.TT@ A
EmailAddressTTA M
==TTN P
EmailTTQ V
)TTV W
;TTW X
ifUU 
(UU 
UserUU 
==UU 
nullUU  
)UU  !
throwUU" '
newUU( +
ValidationExceptionUU, ?
(UU? @
$strUU@ O
)UUO P
;UUP Q
returnVV 
HasherVV 
.VV  
VerifyHashedPasswordVV 2
(VV2 3
UserVV3 7
,VV7 8
UserVV9 =
.VV= >
PasswordVV> F
,VVF G
PasswordVVH P
)VVP Q
==VVR T&
PasswordVerificationResultVVU o
.VVo p
SuccessVVp w
?VVx y
UserVVz ~
:	VV Ä
throw
VVÅ Ü
new
VVá ä"
InvalidDataException
VVã ü
(
VVü †
$str
VV† ∏
)
VV∏ π
;
VVπ ∫
}WW 
catchXX 
(XX 
	ExceptionXX 
	exceptionXX &
)XX& '
{YY 
_loggerZZ 
.ZZ 
LogErrorZZ  
(ZZ  !
HelperServiceZZ! .
.ZZ. /
LoggerMessageZZ/ <
(ZZ< =
$strZZ= O
,ZZO P
$strZZQ y
,ZZy z
	exception	ZZ{ Ñ
,
ZZÑ Ö
Email
ZZÜ ã
)
ZZã å
)
ZZå ç
;
ZZç é
throw\\ 
;\\ 
}]] 
}^^ 	
public`` 
object`` 
GetUserByID`` !
(``! "
int``" %
UserID``& ,
)``, -
{aa 	
ifbb 
(bb 
UserIDbb 
<=bb 
$numbb 
)bb 
throwbb "
newbb# &
ArgumentExceptionbb' 8
(bb8 9
$"bb9 ;
$strbb; g
{bbg h
UserIDbbh n
}bbn o
"bbo p
)bbp q
;bbq r
trycc 
{dd 
varee 
Useree 
=ee 
databaseee #
.ee# $
GetUserByIDee$ /
(ee/ 0
UserIDee0 6
)ee6 7
;ee7 8
returnff 
newff 
{gg 
UserIdhh 
=hh 
Userhh !
.hh! "
UserIdhh" (
,hh( )
fullNameii 
=ii 
Userii #
.ii# $
FullNameii$ ,
,ii, -

EmployeeIdjj 
=jj  
Userjj! %
.jj% &
	AceNumberjj& /
,jj/ 0
emailkk 
=kk 
Userkk  
.kk  !
EmailAddresskk! -
,kk- .
DateOfBirthll 
=ll  !
Userll" &
.ll& '
DateOfBirthll' 2
,ll2 3
Designationmm 
=mm  !
Usermm" &
.mm& '
Designationmm' 2
?mm2 3
.mm3 4
DesignationNamemm4 C
,mmC D

Departmentnn 
=nn  
GetDepartmentByIDnn! 2
(nn2 3
Usernn3 7
.nn7 8
DesignationIdnn8 E
)nnE F
,nnF G
Genderoo 
=oo 
Useroo !
.oo! "
Genderoo" (
?oo( )
.oo) *
Nameoo* .
,oo. /

IsReviewerpp 
=pp  
Userpp! %
.pp% &

IsReviewerpp& 0
}rr 
;rr 
}ss 
catchtt 
(tt 
	Exceptiontt 
	exceptiontt &
)tt& '
{uu 
_loggervv 
.vv 
LogErrorvv  
(vv  !
HelperServicevv! .
.vv. /
LoggerMessagevv/ <
(vv< =
$strvv= J
,vvJ K
$strvvL f
,vvf g
	exceptionvvh q
,vvq r
UserIDvvs y
)vvy z
)vvz {
;vv{ |
throwww 
;ww 
}xx 
}yy 	
publiczz 
IEnumerablezz 
<zz 
Userzz 
>zz  
GetUserszz! )
(zz) *
)zz* +
{{{ 	
try|| 
{}} 
return~~ 
database~~ 
.~~  
GetUsers~~  (
(~~( )
)~~) *
;~~* +
} 
catch
ÄÄ 
(
ÄÄ 
	Exception
ÄÄ 
	exception
ÄÄ &
)
ÄÄ& '
{
ÅÅ 
_logger
ÇÇ 
.
ÇÇ 
LogError
ÇÇ  
(
ÇÇ  !
HelperService
ÇÇ! .
.
ÇÇ. /
LoggerMessage
ÇÇ/ <
(
ÇÇ< =
$str
ÇÇ= J
,
ÇÇJ K
$str
ÇÇL X
,
ÇÇX Y
	exception
ÇÇZ c
)
ÇÇc d
)
ÇÇd e
;
ÇÇe f
throw
ÉÉ 
;
ÉÉ 
}
ÑÑ 
}
ÖÖ 	
public
áá 
IEnumerable
áá 
<
áá 
Object
áá !
>
áá! "$
GetUsersByVerifyStatus
áá# 9
(
áá9 :
int
áá: =
VerifyStatusID
áá> L
)
ááL M
{
àà 	
if
ââ 
(
ââ 
VerifyStatusID
ââ 
<=
ââ !
$num
ââ" #
||
ââ$ &
VerifyStatusID
ââ' 5
>
ââ6 7
$num
ââ8 9
)
ââ9 :
throw
ââ; @
new
ââA D
ArgumentException
ââE V
(
ââV W
$strââW é
)ââé è
;ââè ê
try
ää 
{
ãã 
return
åå 
GetUsers
åå 
(
åå  
)
åå  !
.
åå! "
Where
åå" '
(
åå' (
User
åå( ,
=>
åå- /
User
åå0 4
.
åå4 5
VerifyStatusID
åå5 C
==
ååD F
VerifyStatusID
ååG U
)
ååU V
.
ååV W
Select
ååW ]
(
åå] ^
User
åå^ b
=>
ååc e
new
ååf i
{
çç 
UserId
éé 
=
éé 
User
éé !
.
éé! "
UserId
éé" (
,
éé( )
fullName
èè 
=
èè 
User
èè #
.
èè# $
FullName
èè$ ,
,
èè, -

EmployeeId
êê 
=
êê  
User
êê! %
.
êê% &
	AceNumber
êê& /
,
êê/ 0
Email
ëë 
=
ëë 
User
ëë  
.
ëë  !
EmailAddress
ëë! -
,
ëë- .
DateOfBirth
íí 
=
íí  !
User
íí" &
.
íí& '
DateOfBirth
íí' 2
,
íí2 3
Designation
ìì 
=
ìì  !
User
ìì" &
.
ìì& '
Designation
ìì' 2
?
ìì2 3
.
ìì3 4
DesignationName
ìì4 C
,
ììC D

Department
îî 
=
îî  
GetDepartmentByID
îî! 2
(
îî2 3
User
îî3 7
.
îî7 8
DesignationId
îî8 E
)
îîE F
,
îîF G
Gender
ïï 
=
ïï 
User
ïï !
.
ïï! "
Gender
ïï" (
?
ïï( )
.
ïï) *
Name
ïï* .
,
ïï. /

IsReviewer
ññ 
=
ññ  
User
ññ! %
.
ññ% &

IsReviewer
ññ& 0
}
òò 
)
òò 
;
òò 
}
ôô 
catch
öö 
(
öö 
	Exception
öö 
	exception
öö &
)
öö& '
{
õõ 
_logger
úú 
.
úú 
LogError
úú  
(
úú  !
HelperService
úú! .
.
úú. /
LoggerMessage
úú/ <
(
úú< =
$str
úú= J
,
úúJ K
$str
úúL x
,
úúx y
	exceptionúúz É
,úúÉ Ñ
VerifyStatusIDúúÖ ì
)úúì î
)úúî ï
;úúï ñ
throw
ùù 
;
ùù 
}
ûû 
}
üü 	
public
££ 
IEnumerable
££ 
<
££ 
Object
££ !
>
££! ""
GetUsersByUserRoleID
££# 7
(
££7 8
int
££8 ;

UserRoleID
££< F
)
££F G
{
§§ 	
if
•• 
(
•• 

UserRoleID
•• 
<=
•• 
$num
•• 
||
••  "

UserRoleID
••# -
>
••. /
$num
••0 1
)
••1 2
throw
••3 8
new
••9 <
ArgumentException
••= N
(
••N O
$"
••O Q
$str••Q Ü
{••Ü á

UserRoleID••á ë
}••ë í
"••í ì
)••ì î
;••î ï
try
¶¶ 
{
ßß 
return
®® 
GetUsers
®® 
(
®®  
)
®®  !
.
®®! "
Where
®®" '
(
®®' (
user
®®( ,
=>
®®- /
user
®®0 4
.
®®4 5

UserRoleId
®®5 ?
==
®®@ B

UserRoleID
®®C M
&&
®®N P
user
®®Q U
.
®®U V
VerifyStatusID
®®V d
==
®®e g
$num
®®h i
)
®®i j
.
®®j k
Select
®®k q
(
®®q r
User
®®r v
=>
®®w y
new
®®z }
{
©© 
UserId
™™ 
=
™™ 
User
™™ !
.
™™! "
UserId
™™" (
,
™™( )
fullName
´´ 
=
´´ 
User
´´ #
.
´´# $
FullName
´´$ ,
,
´´, -

EmployeeId
¨¨ 
=
¨¨  
User
¨¨! %
.
¨¨% &
	AceNumber
¨¨& /
,
¨¨/ 0
Email
≠≠ 
=
≠≠ 
User
≠≠  
.
≠≠  !
EmailAddress
≠≠! -
,
≠≠- .
DateOfBirth
ÆÆ 
=
ÆÆ  !
User
ÆÆ" &
.
ÆÆ& '
DateOfBirth
ÆÆ' 2
,
ÆÆ2 3
Designation
ØØ 
=
ØØ  !
User
ØØ" &
.
ØØ& '
Designation
ØØ' 2
?
ØØ2 3
.
ØØ3 4
DesignationName
ØØ4 C
,
ØØC D

Department
∞∞ 
=
∞∞  
GetDepartmentByID
∞∞! 2
(
∞∞2 3
User
∞∞3 7
.
∞∞7 8
DesignationId
∞∞8 E
)
∞∞E F
,
∞∞F G
Gender
±± 
=
±± 
User
±± !
.
±±! "
Gender
±±" (
?
±±( )
.
±±) *
Name
±±* .
,
±±. /

IsReviewer
≤≤ 
=
≤≤  
User
≤≤! %
.
≤≤% &

IsReviewer
≤≤& 0
}
¥¥ 
)
¥¥ 
;
¥¥ 
}
µµ 
catch
∂∂ 
(
∂∂ 
	Exception
∂∂ 
	exception
∂∂ &
)
∂∂& '
{
∑∑ 
_logger
∏∏ 
.
∏∏ 
LogError
∏∏  
(
∏∏  !
HelperService
∏∏! .
.
∏∏. /
LoggerMessage
∏∏/ <
(
∏∏< =
$str
∏∏= J
,
∏∏J K
$str
∏∏L r
,
∏∏r s
	exception
∏∏t }
,
∏∏} ~

UserRoleID∏∏ â
)∏∏â ä
)∏∏ä ã
;∏∏ã å
throw
∫∫ 
;
∫∫ 
}
ªª 
}
ΩΩ 	
public
øø 
bool
øø *
ChangeUserVerificationStatus
øø 0
(
øø0 1
int
øø1 4
UserID
øø5 ;
,
øø; <
int
øø= @
VerifyStatusID
øøA O
)
øøO P
{
¿¿ 	
if
¡¡ 
(
¡¡ 
UserID
¡¡ 
<=
¡¡ 
$num
¡¡ 
)
¡¡ 
throw
¡¡ "
new
¡¡# &
ArgumentException
¡¡' 8
(
¡¡8 9
$"
¡¡9 ;
$str
¡¡; h
{
¡¡h i
UserID
¡¡i o
}
¡¡o p
"
¡¡p q
)
¡¡q r
;
¡¡r s
if
¬¬ 
(
¬¬ 
VerifyStatusID
¬¬ 
<=
¬¬ !
$num
¬¬" #
||
¬¬$ &
VerifyStatusID
¬¬' 5
>
¬¬6 7
$num
¬¬8 9
)
¬¬9 :
throw
¬¬; @
new
¬¬A D
ArgumentException
¬¬E V
(
¬¬V W
$"
¬¬W Y
$str¬¬Y ó
{¬¬ó ò
VerifyStatusID¬¬ò ¶
}¬¬¶ ß
"¬¬ß ®
)¬¬® ©
;¬¬© ™
try
√√ 
{
ƒƒ 
return
≈≈ 
database
≈≈ 
.
≈≈  &
UpdateUserByVerifyStatus
≈≈  8
(
≈≈8 9
UserID
≈≈9 ?
,
≈≈? @
VerifyStatusID
≈≈A O
)
≈≈O P
;
≈≈P Q
}
∆∆ 
catch
«« 
(
«« 
	Exception
«« 
	exception
«« &
)
««& '
{
»» 
_logger
…… 
.
…… 
LogError
……  
(
……  !
HelperService
……! .
.
……. /
LoggerMessage
……/ <
(
……< =
$str
……= J
,
……J K
$str……L ä
,……ä ã
	exception……å ï
,……ï ñ
$"……ó ô
$str……ô †
{……† °
UserID……° ß
}……ß ®
$str……® ∏
{……∏ π
VerifyStatusID……π «
}……« »
"……» …
)………  
)……  À
;……À Ã
throw
   
;
   
}
ÀÀ 
}
ÃÃ 	
public
–– 
IEnumerable
–– 
<
–– 
Object
–– !
>
––! ""
GetUsersByIsReviewer
––# 7
(
––7 8
bool
––8 <

IsReviewer
––= G
)
––G H
{
—— 	
try
““ 
{
”” 
return
‘‘ 
GetUsers
‘‘ 
(
‘‘  
)
‘‘  !
.
‘‘! "
Where
‘‘" '
(
‘‘' (
user
‘‘( ,
=>
‘‘- /
user
‘‘0 4
.
‘‘4 5

IsReviewer
‘‘5 ?
==
‘‘@ B

IsReviewer
‘‘C M
&&
‘‘N P
user
‘‘Q U
.
‘‘U V
VerifyStatusID
‘‘V d
==
‘‘e g
$num
‘‘h i
)
‘‘i j
.
‘‘j k
Select
‘‘k q
(
‘‘q r
User
‘‘r v
=>
‘‘w y
new
‘‘z }
{
’’ 
UserId
÷÷ 
=
÷÷ 
User
÷÷ !
.
÷÷! "
UserId
÷÷" (
,
÷÷( )
Name
◊◊ 
=
◊◊ 
User
◊◊ 
.
◊◊  
FullName
◊◊  (
,
◊◊( )

EmployeeId
ÿÿ 
=
ÿÿ  
User
ÿÿ! %
.
ÿÿ% &
	AceNumber
ÿÿ& /
,
ÿÿ/ 0
Email
ŸŸ 
=
ŸŸ 
User
ŸŸ  
.
ŸŸ  !
EmailAddress
ŸŸ! -
,
ŸŸ- .
DateOfBirth
⁄⁄ 
=
⁄⁄  !
User
⁄⁄" &
.
⁄⁄& '
DateOfBirth
⁄⁄' 2
,
⁄⁄2 3
Designation
€€ 
=
€€  !
User
€€" &
.
€€& '
Designation
€€' 2
?
€€2 3
.
€€3 4
DesignationName
€€4 C
,
€€C D

Department
‹‹ 
=
‹‹  
GetDepartmentByID
‹‹! 2
(
‹‹2 3
User
‹‹3 7
.
‹‹7 8
DesignationId
‹‹8 E
)
‹‹E F
,
‹‹F G
Gender
›› 
=
›› 
User
›› !
.
››! "
Gender
››" (
?
››( )
.
››) *
Name
››* .
,
››. /

IsReviewer
ﬁﬁ 
=
ﬁﬁ  
User
ﬁﬁ! %
.
ﬁﬁ% &

IsReviewer
ﬁﬁ& 0
}
‡‡ 
)
‡‡ 
;
‡‡ 
}
·· 
catch
‚‚ 
(
‚‚ 
	Exception
‚‚ 
	exception
‚‚ &
)
‚‚& '
{
„„ 
_logger
‰‰ 
.
‰‰ 
LogError
‰‰  
(
‰‰  !
HelperService
‰‰! .
.
‰‰. /
LoggerMessage
‰‰/ <
(
‰‰< =
$str
‰‰= J
,
‰‰J K
$str
‰‰L s
,
‰‰s t
	exception
‰‰u ~
,
‰‰~ 

IsReviewer‰‰Ä ä
)‰‰ä ã
)‰‰ã å
;‰‰å ç
throw
ÂÂ 
;
ÂÂ 
}
ÊÊ 
}
ÁÁ 	
private
ÍÍ 
string
ÍÍ 
GetDepartmentByID
ÍÍ (
(
ÍÍ( )
int
ÍÍ) ,
DepartmentId
ÍÍ- 9
)
ÍÍ9 :
{
ÎÎ 	
if
ÏÏ 
(
ÏÏ 
DepartmentId
ÏÏ 
<=
ÏÏ 
$num
ÏÏ  !
)
ÏÏ! "
throw
ÏÏ# (
new
ÏÏ) ,
ArgumentException
ÏÏ- >
(
ÏÏ> ?
$"
ÏÏ? A
$str
ÏÏA s
{
ÏÏs t
DepartmentIdÏÏt Ä
}ÏÏÄ Å
"ÏÏÅ Ç
)ÏÏÇ É
;ÏÏÉ Ñ
try
ÌÌ 
{
ÓÓ 
var
ÔÔ 

department
ÔÔ 
=
ÔÔ  
database
ÔÔ! )
.
ÔÔ) *
GetDepartments
ÔÔ* 8
(
ÔÔ8 9
)
ÔÔ9 :
.
ÔÔ: ;
First
ÔÔ; @
(
ÔÔ@ A
item
ÔÔA E
=>
ÔÔF H
item
ÔÔI M
.
ÔÔM N
DepartmentId
ÔÔN Z
==
ÔÔ[ ]
DepartmentId
ÔÔ^ j
)
ÔÔj k
;
ÔÔk l
return
 

department
 !
.
! "
DepartmentName
" 0
;
0 1
}
ÚÚ 
catch
ÛÛ 
(
ÛÛ 
	Exception
ÛÛ 
	exception
ÛÛ &
)
ÛÛ& '
{
ÙÙ 
_logger
ıı 
.
ıı 
LogError
ıı  
(
ıı  !
HelperService
ıı! .
.
ıı. /
LoggerMessage
ıı/ <
(
ıı< =
$str
ıı= J
,
ııJ K
$str
ııL q
,
ııq r
	exception
ııs |
,
ıı| }
DepartmentIdıı~ ä
)ııä ã
)ııã å
;ııå ç
throw
ˆˆ 
;
ˆˆ 
}
˜˜ 
}
¯¯ 	
public
˙˙ 
IEnumerable
˙˙ 
<
˙˙ 
Object
˙˙ !
>
˙˙! "

GetGenders
˙˙# -
(
˙˙- .
)
˙˙. /
{
˚˚ 	
try
¸¸ 
{
˝˝ 
var
˛˛ 
Genders
˛˛ 
=
˛˛ 
database
˛˛ &
.
˛˛& '

GetGenders
˛˛' 1
(
˛˛1 2
)
˛˛2 3
.
˛˛3 4
Select
˛˛4 :
(
˛˛: ;
item
˛˛; ?
=>
˛˛@ B
new
˛˛C F
{
ˇˇ 
GenderId
ÄÄ 
=
ÄÄ 
item
ÄÄ #
.
ÄÄ# $
GenderId
ÄÄ$ ,
,
ÄÄ, -
Name
ÅÅ 
=
ÅÅ 
item
ÅÅ 
.
ÅÅ  
Name
ÅÅ  $
}
ÇÇ 
)
ÇÇ 
;
ÇÇ 
return
ÉÉ 
Genders
ÉÉ 
;
ÉÉ 
}
ÑÑ 
catch
ÖÖ 
(
ÖÖ 
	Exception
ÖÖ 
	exception
ÖÖ &
)
ÖÖ& '
{
ÜÜ 
_logger
áá 
.
áá 
LogError
áá  
(
áá  !
HelperService
áá! .
.
áá. /
LoggerMessage
áá/ <
(
áá< =
$str
áá= J
,
ááJ K
$str
ááL [
,
áá[ \
	exception
áá] f
)
ááf g
)
áág h
;
ááh i
throw
àà 
;
àà 
}
ââ 
}
ää 	
public
åå 
IEnumerable
åå 
<
åå 
Object
åå !
>
åå! "
GetDesignations
åå# 2
(
åå2 3
)
åå3 4
{
çç 	
try
éé 
{
èè 
var
êê 
designations
êê  
=
êê! "
database
êê# +
.
êê+ ,
GetDesignations
êê, ;
(
êê; <
)
êê< =
.
êê= >
Select
êê> D
(
êêD E
item
êêE I
=>
êêJ L
new
êêM P
{
ëë 
DesignationId
íí !
=
íí" #
item
íí$ (
.
íí( )
DesignationId
íí) 6
,
íí6 7
Name
ìì 
=
ìì 
item
ìì 
.
ìì  
DesignationName
ìì  /
,
ìì/ 0
DepartmentId
îî  
=
îî! "
item
îî# '
.
îî' (
DepartmentId
îî( 4
}
ïï 
)
ïï 
;
ïï 
return
ññ 
designations
ññ #
;
ññ# $
}
óó 
catch
òò 
(
òò 
	Exception
òò 
	exception
òò &
)
òò& '
{
ôô 
_logger
öö 
.
öö 
LogError
öö  
(
öö  !
HelperService
öö! .
.
öö. /
LoggerMessage
öö/ <
(
öö< =
$str
öö= J
,
ööJ K
$str
ööL `
,
öö` a
	exception
ööb k
)
öök l
)
ööl m
;
ööm n
throw
õõ 
;
õõ 
}
úú 
}
ùù 	
public
üü 
IEnumerable
üü 
<
üü 
object
üü !
>
üü! "
GetDepartments
üü# 1
(
üü1 2
)
üü2 3
{
†† 	
try
°° 
{
¢¢ 
var
££ 
Departments
££ 
=
££  !
database
££" *
.
££* +
GetDepartments
££+ 9
(
££9 :
)
££: ;
.
££; <
Select
££< B
(
££B C
item
££C G
=>
££H J
new
££K N
{
§§ 
DepartmentId
••  
=
••! "
item
••# '
.
••' (
DepartmentId
••( 4
,
••4 5
Name
¶¶ 
=
¶¶ 
item
¶¶ 
.
¶¶  
DepartmentName
¶¶  .
}
ßß 
)
ßß 
;
ßß 
return
®® 
Departments
®® "
;
®®" #
}
©© 
catch
™™ 
(
™™ 
	Exception
™™ 
	exception
™™ &
)
™™& '
{
´´ 
_logger
¨¨ 
.
¨¨ 
LogError
¨¨  
(
¨¨  !
HelperService
¨¨! .
.
¨¨. /
LoggerMessage
¨¨/ <
(
¨¨< =
$str
¨¨= M
,
¨¨M N
$str
¨¨O b
,
¨¨b c
	exception
¨¨d m
)
¨¨m n
)
¨¨n o
;
¨¨o p
throw
≠≠ 
;
≠≠ 
}
ÆÆ 
}
ØØ 	
}
≥≥ 
}µµ ®g
[C:\Users\manimaran.venkat\Documents\Backup\AspireOverflow\Services\Validation\Validation.cs
	namespace 	
AspireOverflow
 
. 
Services !
{ 
public 

static 
class 

Validation "
{		 
public 
static 
bool 
ValidateQuery (
(( )
Query) .
query/ 4
)4 5
{ 	
if 
( 
query 
== 
null 
) 
throw $
new% (
ValidationException) <
(< =
$str= W
)W X
;X Y
else 
if 
( 
query 
. 
	CreatedBy $
<=% '
$num( )
)) *
throw+ 0
new1 4
ValidationException5 H
(H I
$strI o
)o p
;p q
else 
if 
( 
String 
. 
IsNullOrEmpty )
() *
query* /
./ 0
Title0 5
)5 6
)6 7
throw8 =
new> A
ValidationExceptionB U
(U V
$strV u
)u v
;v w
else 
if 
( 
String 
. 
IsNullOrEmpty )
() *
query* /
./ 0
Content0 7
)7 8
)8 9
throw: ?
new@ C
ValidationExceptionD W
(W X
$strX y
)y z
;z {
else 
if 
( 
query 
. 
Title  
.  !
Length! '
>( )
$num* -
)- .
throw/ 4
new5 8
ValidationException9 L
(L M
$strM y
)y z
;z {
else 
if 
( 
! 
query 
. 
IsActive $
)$ %
throw& +
new, /
ValidationException0 C
(C D
$strD [
)[ \
;\ ]
else 
if 
( 
query 
. 
IsSolved #
)$ %
throw& +
new, /
ValidationException0 C
(C D
$strD \
)\ ]
;] ^
else 
return 
true 
; 
} 	
public 
static 
bool 
ValidateComment *
(* +
QueryComment+ 7
Comment8 ?
)? @
{ 	
if 
( 
Comment 
== 
null 
)  
throw! &
new' *
ValidationException+ >
(> ?
$str? [
)[ \
;\ ]
else   
if   
(   
Comment   
.   
	CreatedBy   &
<=  ' )
$num  * +
)  + ,
throw  - 2
new  3 6
ValidationException  7 J
(  J K
$str  K n
)  n o
;  o p
else!! 
if!! 
(!! 
Comment!! 
.!! 
QueryId!! $
<=!!% '
$num!!( )
)!!) *
throw!!+ 0
new!!1 4
ValidationException!!5 H
(!!H I
$str!!I k
)!!k l
;!!l m
else"" 
if"" 
("" 
String"" 
."" 
IsNullOrEmpty"" )
("") *
Comment""* 1
.""1 2
Comment""2 9
)""9 :
)"": ;
throw""< A
new""B E
ValidationException""F Y
(""Y Z
$str""Z {
)""{ |
;""| }
else$$ 
return$$ 
true$$ 
;$$ 
}%% 	
public'' 
static'' 
bool'' 
ValidateArticle'' *
(''* +
Article''+ 2
article''3 :
)'': ;
{(( 	
if++ 
(++ 
article++ 
==++ 
null++ 
)++  
throw++! &
new++' *
ValidationException+++ >
(++> ?
$str++? [
)++[ \
;++\ ]
else,, 
if,, 
(,, 
article,, 
.,, 
	CreatedBy,, &
<=,,' )
$num,,* +
),,+ ,
throw,,- 2
new,,3 6
ValidationException,,7 J
(,,J K
$str,,K q
),,q r
;,,r s
else-- 
if-- 
(-- 
String-- 
.-- 
IsNullOrEmpty-- )
(--) *
article--* 1
.--1 2
Title--2 7
)--7 8
)--8 9
throw--: ?
new--@ C
ValidationException--D W
(--W X
$str--X w
)--w x
;--x y
else.. 
if.. 
(.. 
String.. 
... 
IsNullOrEmpty.. )
(..) *
article..* 1
...1 2
Content..2 9
)..9 :
)..: ;
throw..< A
new..B E
ValidationException..F Y
(..Y Z
$str..Z {
)..{ |
;..| }
else// 
if// 
(// 
article// 
.// 
Title// "
.//" #
Length//# )
>//* +
$num//, /
)/// 0
throw//1 6
new//7 :
ValidationException//; N
(//N O
$str//O |
)//| }
;//} ~
else00 
if00 
(00 
article00 
.00 
ArticleStatusID00 ,
<=00- /
$num000 1
&&002 4
article005 <
.00< =
ArticleStatusID00= L
>00M N
$num00O P
)00P Q
throw00R W
new00X [
ValidationException00\ o
(00o p
$str	00p ï
)
00ï ñ
;
00ñ ó
else11 
return11 
true11 
;11 
}22 	
public44 
static44 
bool44 "
ValidateArticleComment44 1
(441 2
ArticleComment442 @
Comment44A H
)44H I
{55 	
if88 
(88 
Comment88 
==88 
null88 
)88  
throw88! &
new88' *
ValidationException88+ >
(88> ?
$str88? [
)88[ \
;88\ ]
else99 
if99 
(99 
Comment99 
.99 
	CreatedBy99 &
<=99' )
$num99* +
)99+ ,
throw99- 2
new993 6
ValidationException997 J
(99J K
$str99K n
)99n o
;99o p
else:: 
if:: 
(:: 
Comment:: 
.:: 
	ArticleId:: &
<=::' )
$num::* +
)::+ ,
throw::- 2
new::3 6
ValidationException::7 J
(::J K
$str::K o
)::o p
;::p q
else;; 
if;; 
(;; 
String;; 
.;; 
IsNullOrEmpty;; )
(;;) *
Comment;;* 1
.;;1 2
Comment;;2 9
);;9 :
);;: ;
throw;;< A
new;;B E
ValidationException;;F Y
(;;Y Z
$str;;Z {
);;{ |
;;;| }
else== 
return== 
true== 
;== 
}>> 	
publicDD 
staticDD 
boolDD 
ValidateUserDD '
(DD' (
UserDD( ,
userDD- 1
)DD1 2
{EE 	
ifII 
(II 
userII 
==II 
nullII 
)II 
throwII #
newII$ '
ValidationExceptionII( ;
(II; <
$strII< U
)IIU V
;IIV W
elseJJ 
ifJJ 
(JJ 
userJJ 
.JJ 
VerifyStatusIDJJ (
!=JJ) +
$numJJ, -
)JJ- .
throwJJ/ 4
newJJ5 8
ValidationExceptionJJ9 L
(JJL M
$"JJM O
$strJJO v
{JJv w
userJJw {
.JJ{ |
VerifyStatusID	JJ| ä
}
JJä ã
"
JJã å
)
JJå ç
;
JJç é
elseKK 
ifKK 
(KK 
userKK 
.KK 

IsReviewerKK $
)KK$ %
throwKK& +
newKK, /
ValidationExceptionKK0 C
(KKC D
$"KKD F
$strKKF ^
"KK^ _
)KK_ `
;KK` a
elseLL 
ifLL 
(LL 
userLL 
.LL 
GenderIdLL "
<=LL# %
$numLL& '
&&LL( *
userLL+ /
.LL/ 0
GenderIdLL0 8
>LL9 :
$numLL; <
)LL< =
throwLL> C
newLLD G
ValidationExceptionLLH [
(LL[ \
$"LL\ ^
$strLL^ v
"LLv w
)LLw x
;LLx y
elseMM 
ifMM 
(MM 
userMM 
.MM 

UserRoleIdMM $
!=MM% '
$numMM( )
)MM) *
throwMM+ 0
newMM1 4
ValidationExceptionMM5 H
(MMH I
$"MMI K
$strMMK r
{MMr s
userMMs w
.MMw x

UserRoleId	MMx Ç
}
MMÇ É
"
MMÉ Ñ
)
MMÑ Ö
;
MMÖ Ü
elseNN 
ifNN 
(NN 
!NN #
ValidateUserCredentialsNN ,
(NN, -
userNN- 1
.NN1 2
EmailAddressNN2 >
,NN> ?
userNN? C
.NNC D
PasswordNND L
)NNL M
)NNM N
returnNNO U
falseNNV [
;NN[ \
elseOO 
returnOO 
trueOO 
;OO 
}PP 	
publicTT 
staticTT 
boolTT 
ValidateSpamTT '
(TT' (
SpamTT( ,
spamTT- 1
)TT1 2
{UU 	
ifVV 
(VV 
spamVV 
==VV 
nullVV 
)VV 
throwVV #
newVV$ '
ValidationExceptionVV( ;
(VV; <
$strVV< U
)VVU V
;VVV W
elseWW 
ifWW 
(WW 
spamWW 
.WW 
QueryIdWW !
<=WW" $
$numWW% &
)WW& '
throwWW( -
newWW. 1
ValidationExceptionWW2 E
(WWE F
$strWWF g
)WWg h
;WWh i
elseXX 
ifXX 
(XX 
spamXX 
.XX 
UserIdXX  
<=XX! #
$numXX$ %
)XX% &
throwXX' ,
newXX- 0
ValidationExceptionXX1 D
(XXD E
$strXXE d
)XXd e
;XXe f
elseYY 
ifYY 
(YY 
spamYY 
.YY 
VerifyStatusIDYY (
<=YY) +
$numYY, -
||YY. 0
spamYY1 5
.YY5 6
VerifyStatusIDYY6 D
>YYE F
$numYYG H
)YYH I
throwYYJ O
newYYP S
ValidationExceptionYYT g
(YYg h
$str	YYh í
)
YYí ì
;
YYì î
elseZZ 
ifZZ 
(ZZ 
StringZZ 
.ZZ 
IsNullOrEmptyZZ )
(ZZ) *
spamZZ* .
.ZZ. /
ReasonZZ/ 5
)ZZ5 6
)ZZ6 7
throwZZ8 =
newZZ> A
ValidationExceptionZZB U
(ZZU V
$strZZV {
)ZZ{ |
;ZZ| }
else[[ 
return[[ 
true[[ 
;[[ 
}\\ 	
public]] 
static]] 
bool]] #
ValidateUserCredentials]] +
(]]+ ,
String]], 2
Email]]3 8
,]]8 9
String]]9 ?
Password]]@ H
)]]I J
{^^ 	
var__ 
mail__ 
=__ 
new__ 
Regex__  
(__  !
$str__! D
)__D E
;__E F
var`` 
password`` 
=`` 
new`` 
Regex`` $
(``$ %
$str``% e
)``e f
;``f g
ifaa 
(aa 
!aa 
mailaa 
.aa 
IsMatchaa 
(aa 
Emailaa #
)aa# $
)aa$ %
throwaa& +
newaa, /
ValidationExceptionaa0 C
(aaC D
$"aaD F
$straaF m
{aam n
Emailaao t
}aau v
"aav w
)aaw x
;aax y
elsebb 
ifbb 
(bb 
!bb 
passwordbb 
.bb 
IsMatchbb %
(bb% &
Passwordbb& .
)bb. /
)bb/ 0
throwbb0 5
newbb6 9
ValidationExceptionbb: M
(bbM N
$"bbN P
$str	bbP ö
{
bbö õ
Password
bbõ £
}
bb£ §
"
bb§ •
)
bb• ¶
;
bb¶ ß
elsecc 
returncc 
truecc 
;cc 
}dd 	
}hh 
}ll 