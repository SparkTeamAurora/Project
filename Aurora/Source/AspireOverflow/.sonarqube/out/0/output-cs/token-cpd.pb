”Ì
PC:\Users\pooja.sakthivel\Desktop\AspireOverflow\Controllers\ArticleController.cs
	namespace 	
AspireOverflow
 
. 
Controllers $
{		 
[

 
ApiController

 
]

 
[ 
	Authorize 
] 
[ 
Route 

(
 
$str "
)" #
]# $
public 

class 
ArticleController "
:# $
BaseController% 3
{ 
private 
readonly 
ILogger  
<  !
ArticleController! 2
>2 3
_logger4 ;
;; <
private 
readonly 
IArticleService (
_articleService) 8
;8 9
public 
ArticleController  
(  !
ILogger! (
<( )
ArticleController) :
>: ;
logger< B
,B C
IArticleServiceD S
articleServiceT b
)b c
{ 	
_logger 
= 
logger 
; 
_articleService 
= 
articleService ,
;, -
} 	
[ 	
HttpPost	 
] 
public 
async 
Task 
< 
ActionResult &
>& '
CreateArticle( 5
(5 6
Article6 =
article> E
)E F
{ 	
if 
( 
article 
== 
null 
)  
return! '

BadRequest( 2
(2 3
Message3 :
(: ;
$str; X
)X Y
)Y Z
;Z [
try   
{!! 
article"" 
."" 
	CreatedBy"" !
=""" #
GetCurrentUser""$ 2
(""2 3
)""3 4
.""4 5
UserId""5 ;
;""; <
return## 
_articleService## &
.##& '
CreateArticle##' 4
(##4 5
article##5 <
)##< =
?##> ?
await##@ E
Task##F J
.##J K

FromResult##K U
(##U V
Ok##V X
(##X Y
Message##Y `
(##` a
$str##a w
)##w x
)##x y
)##y z
:##{ |

BadRequest	##} á
(
##á à
Message
##à è
(
##è ê
$"
##ê í
$str
##í µ
"
##µ ∂
,
##∂ ∑
article
##∏ ø
)
##ø ¿
)
##¿ ¡
;
##¡ ¬
}$$ 
catch%% 
(%% 
ValidationException%% &
	exception%%' 0
)%%0 1
{&& 
_logger(( 
.(( 
LogError((  
(((  !
HelperService((! .
.((. /
LoggerMessage((/ <
(((< =
$str((= P
,((P Q
$str((R r
,((r s
	exception((t }
,((} ~
article	(( Ü
)
((Ü á
)
((á à
;
((à â
return)) 

BadRequest)) !
())! "
Message))" )
())) *
	exception))* 3
.))3 4
Message))4 ;
,)); <
article))= D
)))D E
)))E F
;))F G
}** 
catch++ 
(++ 
	Exception++ 
	exception++ &
)++& '
{,, 
_logger-- 
.-- 
LogError--  
(--  !
HelperService--! .
.--. /
LoggerMessage--/ <
(--< =
$str--= P
,--P Q
$str--R r
,--r s
	exception--t }
,--} ~
article	-- Ü
)
--Ü á
)
--á à
;
--à â
return.. 
Problem.. 
(.. 
$".. !
$str..! E
{..E F
HelperService..F S
...S T
PropertyList..T `
(..` a
article..a h
)..h i
}..i j
"..j k
)..k l
;..l m
}// 
}00 	
[LL 	
HttpPostLL	 
]LL 
publicMM 
asyncMM 
TaskMM 
<MM 
ActionResultMM &
>MM& ' 
CreatePrivateArticleMM( <
(MM< =
PrivateArticleDtoMM= N
privateArticleDtoMMO `
)MM` a
{NN 	
ifOO 
(OO 
privateArticleDtoOO !
==OO" $
nullOO% )
)OO) *
returnOO+ 1

BadRequestOO2 <
(OO< =
MessageOO= D
(OOD E
$strOOE b
)OOb c
)OOc d
;OOd e
tryPP 
{QQ 
privateArticleDtoRR !
.RR! "
articleRR" )
!RR) *
.RR* +
	CreatedByRR+ 4
=RR5 6
GetCurrentUserRR7 E
(RRE F
)RRF G
.RRG H
UserIdRRH N
;RRN O
returnSS 
_articleServiceSS &
.SS& '
CreateArticleSS' 4
(SS4 5
privateArticleDtoSS5 F
.SSF G
articleSSG N
,SSN O
privateArticleDtoSSP a
.SSa b
SharedUsersIdSSb o
!SSo p
)SSp q
?SSr s
awaitSSt y
TaskSSz ~
.SS~ 

FromResult	SS â
(
SSâ ä
Ok
SSä å
(
SSå ç
Message
SSç î
(
SSî ï
$str
SSï ´
)
SS´ ¨
)
SS¨ ≠
)
SS≠ Æ
:
SSØ ∞

BadRequest
SS± ª
(
SSª º
Message
SSº √
(
SS√ ƒ
$"
SSƒ ∆
$str
SS∆ Ò
"
SSÒ Ú
,
SSÚ Û
privateArticleDto
SSÙ Ö
)
SSÖ Ü
)
SSÜ á
;
SSá à
}TT 
catchUU 
(UU 
ValidationExceptionUU &
	exceptionUU' 0
)UU0 1
{VV 
_loggerXX 
.XX 
LogErrorXX  
(XX  !
HelperServiceXX! .
.XX. /
LoggerMessageXX/ <
(XX< =
$strXX= P
,XXP Q
$str	XXR É
,
XXÉ Ñ
	exception
XXÖ é
,
XXé è
privateArticleDto
XXê °
)
XX° ¢
)
XX¢ £
;
XX£ §
returnYY 

BadRequestYY !
(YY! "
MessageYY" )
(YY) *
	exceptionYY* 3
.YY3 4
MessageYY4 ;
,YY; <
privateArticleDtoYY= N
)YYN O
)YYO P
;YYP Q
}ZZ 
catch[[ 
([[ 
	Exception[[ 
	exception[[ &
)[[& '
{\\ 
_logger]] 
.]] 
LogError]]  
(]]  !
HelperService]]! .
.]]. /
LoggerMessage]]/ <
(]]< =
$str]]= P
,]]P Q
$str	]]R É
,
]]É Ñ
	exception
]]Ö é
,
]]é è
privateArticleDto
]]ê °
)
]]° ¢
)
]]¢ £
;
]]£ §
return^^ 
Problem^^ 
(^^ 
$"^^ !
$str^^! K
"^^K L
)^^L M
;^^M N
}__ 
}`` 	
[|| 	
HttpPost||	 
]|| 
public}} 
async}} 
Task}} 
<}} 
ActionResult}} &
>}}& '
CreateComment}}( 5
(}}5 6
ArticleComment}}6 D
comment}}E L
)}}L M
{~~ 	
if 
( 
comment 
== 
null 
)  
return! '

BadRequest( 2
(2 3
Message3 :
(: ;
$str; X
)X Y
)Y Z
;Z [
try
ÄÄ 
{
ÅÅ 
comment
ÇÇ 
.
ÇÇ 
UserId
ÇÇ 
=
ÇÇ  
GetCurrentUser
ÇÇ! /
(
ÇÇ/ 0
)
ÇÇ0 1
.
ÇÇ1 2
UserId
ÇÇ2 8
;
ÇÇ8 9
return
ÉÉ 
_articleService
ÉÉ &
.
ÉÉ& '
CreateComment
ÉÉ' 4
(
ÉÉ4 5
comment
ÉÉ5 <
)
ÉÉ< =
?
ÉÉ> ?
await
ÉÉ@ E
Task
ÉÉF J
.
ÉÉJ K

FromResult
ÉÉK U
(
ÉÉU V
Ok
ÉÉV X
(
ÉÉX Y
Message
ÉÉY `
(
ÉÉ` a
$strÉÉa å
)ÉÉå ç
)ÉÉç é
)ÉÉé è
:ÉÉê ë

BadRequestÉÉí ú
(ÉÉú ù
MessageÉÉù §
(ÉÉ§ •
$"ÉÉ• ß
$strÉÉß À
{ÉÉÀ Ã
HelperServiceÉÉÃ Ÿ
.ÉÉŸ ⁄
PropertyListÉÉ⁄ Ê
(ÉÉÊ Á
commentÉÉÁ Ó
)ÉÉÓ Ô
}ÉÉÔ 
"ÉÉ Ò
)ÉÉÒ Ú
)ÉÉÚ Û
;ÉÉÛ Ù
}
ÑÑ 
catch
ÖÖ 
(
ÖÖ !
ValidationException
ÖÖ &
	exception
ÖÖ' 0
)
ÖÖ0 1
{
ÜÜ 
_logger
áá 
.
áá 
LogError
áá  
(
áá  !
HelperService
áá! .
.
áá. /
LoggerMessage
áá/ <
(
áá< =
$str
áá= P
,
ááP Q
$str
ááR y
,
ááy z
	exceptionáá{ Ñ
,ááÑ Ö
commentááÜ ç
)ááç é
)ááé è
;ááè ê
return
àà 

BadRequest
àà !
(
àà! "
Message
àà" )
(
àà) *
	exception
àà* 3
.
àà3 4
Message
àà4 ;
,
àà; <
comment
àà= D
)
ààD E
)
ààE F
;
ààF G
}
ââ 
catch
ää 
(
ää 
	Exception
ää 
	exception
ää &
)
ää& '
{
ãã 
_logger
åå 
.
åå 
LogError
åå  
(
åå  !
HelperService
åå! .
.
åå. /
LoggerMessage
åå/ <
(
åå< =
$str
åå= P
,
ååP Q
$str
ååR y
,
ååy z
	exceptionåå{ Ñ
,ååÑ Ö
commentååÜ ç
)ååç é
)ååé è
;ååè ê
return
çç 
Problem
çç 
(
çç 
$"
çç !
$str
çç! E
{
ççE F
HelperService
ççF S
.
ççS T
PropertyList
ççT `
(
çç` a
comment
çça h
)
ççh i
}
ççi j
"
ççj k
)
ççk l
;
ççl m
}
éé 
}
èè 	
[
®® 	
HttpPost
®®	 
]
®® 
public
©© 
async
©© 
Task
©© 
<
©© 
ActionResult
©© &
>
©©& '
AddLikeToArticle
©©( 8
(
©©8 9
ArticleLike
©©9 D
Like
©©E I
)
©©I J
{
™™ 	
if
´´ 
(
´´ 
Like
´´ 
==
´´ 
null
´´ 
)
´´ 
return
´´ $

BadRequest
´´% /
(
´´/ 0
Message
´´0 7
(
´´7 8
$str
´´8 T
)
´´T U
)
´´U V
;
´´V W
if
¨¨ 
(
¨¨ 
Like
¨¨ 
.
¨¨ 
	ArticleId
¨¨ 
<=
¨¨ !
$num
¨¨" #
)
¨¨# $
return
¨¨% +

BadRequest
¨¨, 6
(
¨¨6 7
Message
¨¨7 >
(
¨¨> ?
$str
¨¨? b
)
¨¨b c
)
¨¨c d
;
¨¨d e
Like
≠≠ 
.
≠≠ 
UserId
≠≠ 
=
≠≠ 
GetCurrentUser
≠≠ (
(
≠≠( )
)
≠≠) *
.
≠≠* +
UserId
≠≠+ 1
;
≠≠1 2
try
ÆÆ 
{
ØØ 
if
∞∞ 
(
∞∞ 
!
∞∞ 
_articleService
∞∞ $
.
∞∞$ %
AddLikeToArticle
∞∞% 5
(
∞∞5 6
Like
∞∞6 :
)
∞∞: ;
)
∞∞; <

BadRequest
∞∞= G
(
∞∞G H
Message
∞∞H O
(
∞∞O P
$str
∞∞P }
)
∞∞} ~
)
∞∞~ 
;∞∞ Ä
var
±± 
Result
±± 
=
±± 
new
±±  
{
±±! "
message
±±# *
=
±±+ ,
$str
±±- Q
,
±±Q R

LikesCount
±±S ]
=
±±^ _
_articleService
±±` o
.
±±o p
GetLikesCount
±±p }
(
±±} ~
Like±±~ Ç
.±±Ç É
	ArticleId±±É å
)±±å ç
}±±é è
;±±è ê
return
≤≤ 
await
≤≤ 
Task
≤≤ !
.
≤≤! "

FromResult
≤≤" ,
(
≤≤, -
Ok
≤≤- /
(
≤≤/ 0
Result
≤≤0 6
)
≤≤6 7
)
≤≤7 8
;
≤≤8 9
}
≥≥ 
catch
¥¥ 
(
¥¥ !
ValidationException
¥¥ &
	exception
¥¥' 0
)
¥¥0 1
{
µµ 
_logger
∂∂ 
.
∂∂ 
LogError
∂∂  
(
∂∂  !
HelperService
∂∂! .
.
∂∂. /
LoggerMessage
∂∂/ <
(
∂∂< =
$str
∂∂= P
,
∂∂P Q
$str
∂∂R v
,
∂∂v w
	exception∂∂x Å
,∂∂Å Ç
Like∂∂É á
)∂∂á à
)∂∂à â
;∂∂â ä
return
∑∑ 

BadRequest
∑∑ !
(
∑∑! "
Message
∑∑" )
(
∑∑) *
$"
∑∑* ,
{
∑∑, -
	exception
∑∑- 6
.
∑∑6 7
Message
∑∑7 >
}
∑∑> ?
"
∑∑? @
)
∑∑@ A
)
∑∑A B
;
∑∑B C
}
∏∏ 
catch
ππ 
(
ππ 
	Exception
ππ 
	exception
ππ &
)
ππ& '
{
∫∫ 
_logger
ªª 
.
ªª 
LogError
ªª  
(
ªª  !
HelperService
ªª! .
.
ªª. /
LoggerMessage
ªª/ <
(
ªª< =
$str
ªª= P
,
ªªP Q
$str
ªªR v
,
ªªv w
	exceptionªªx Å
,ªªÅ Ç
LikeªªÉ á
)ªªá à
)ªªà â
;ªªâ ä
return
ºº 
Problem
ºº 
(
ºº 
$"
ºº !
$str
ºº! D
{
ººD E
Like
ººE I
}
ººI J
"
ººJ K
)
ººK L
;
ººL M
}
ΩΩ 
}
ææ 	
[
ﬁﬁ 	
HttpPut
ﬁﬁ	 
]
ﬁﬁ 
public
ﬂﬂ 
async
ﬂﬂ 
Task
ﬂﬂ 
<
ﬂﬂ 
ActionResult
ﬂﬂ &
>
ﬂﬂ& '
UpdateArticle
ﬂﬂ( 5
(
ﬂﬂ5 6
Article
ﬂﬂ6 =
article
ﬂﬂ> E
)
ﬂﬂE F
{
‡‡ 	
if
·· 
(
·· 
article
·· 
==
·· 
null
·· 
)
··  
return
··! '

BadRequest
··( 2
(
··2 3
Message
··3 :
(
··: ;
$str
··; R
)
··R S
)
··S T
;
··T U
try
‚‚ 
{
„„ 
var
„„ 
_currentUser
„„  
=
„„  !
GetCurrentUser
„„! /
(
„„/ 0
)
„„0 1
;
„„1 2
return
‰‰ 
_articleService
‰‰ &
.
‰‰& '
UpdateArticle
‰‰' 4
(
‰‰4 5
article
‰‰5 <
,
‰‰< =
_currentUser
‰‰> J
.
‰‰J K
UserId
‰‰K Q
,
‰‰Q R
_currentUser
‰‰R ^
.
‰‰^ _

IsReviewer
‰‰_ i
)
‰‰i j
?
‰‰k l
await
‰‰m r
Task
‰‰s w
.
‰‰w x

FromResult‰‰x Ç
(‰‰Ç É
Ok‰‰É Ö
(‰‰Ö Ü
Message‰‰Ü ç
(‰‰ç é
$str‰‰é ∞
)‰‰∞ ±
)‰‰± ≤
)‰‰≤ ≥
:‰‰¥ µ

BadRequest‰‰∂ ¿
(‰‰¿ ¡
Message‰‰¡ »
(‰‰» …
$str‰‰… Û
)‰‰Û Ù
)‰‰Ù ı
;‰‰ı ˆ
}
ÂÂ 
catch
ÊÊ 
(
ÊÊ !
ValidationException
ÊÊ &
	exception
ÊÊ' 0
)
ÊÊ0 1
{
ÁÁ 
_logger
ËË 
.
ËË 
LogError
ËË  
(
ËË  !
HelperService
ËË! .
.
ËË. /
LoggerMessage
ËË/ <
(
ËË< =
$str
ËË= P
,
ËËP Q
$str
ËËR r
,
ËËr s
	exception
ËËt }
,
ËË} ~
articleËË Ü
)ËËÜ á
)ËËá à
;ËËà â
return
ÈÈ 

BadRequest
ÈÈ !
(
ÈÈ! "
Message
ÈÈ" )
(
ÈÈ) *
$"
ÈÈ* ,
{
ÈÈ, -
	exception
ÈÈ- 6
.
ÈÈ6 7
Message
ÈÈ7 >
}
ÈÈ> ?
"
ÈÈ? @
,
ÈÈ@ A
article
ÈÈB I
)
ÈÈI J
)
ÈÈJ K
;
ÈÈK L
}
ÍÍ 
catch
ÎÎ 
(
ÎÎ 
	Exception
ÎÎ 
	exception
ÎÎ &
)
ÎÎ& '
{
ÏÏ 
_logger
ÌÌ 
.
ÌÌ 
LogError
ÌÌ  
(
ÌÌ  !
HelperService
ÌÌ! .
.
ÌÌ. /
LoggerMessage
ÌÌ/ <
(
ÌÌ< =
$str
ÌÌ= P
,
ÌÌP Q
$str
ÌÌR r
,
ÌÌr s
	exception
ÌÌt }
,
ÌÌ} ~
articleÌÌ Ü
)ÌÌÜ á
)ÌÌá à
;ÌÌà â
return
ÓÓ 
Problem
ÓÓ 
(
ÓÓ 
$"
ÓÓ !
$str
ÓÓ! E
{
ÓÓE F
HelperService
ÓÓF S
.
ÓÓS T
PropertyList
ÓÓT `
(
ÓÓ` a
article
ÓÓa h
)
ÓÓh i
}
ÓÓi j
"
ÓÓj k
)
ÓÓk l
;
ÓÓl m
}
ÔÔ 
}
 	
[
çç 	
HttpPut
çç	 
]
çç 
public
éé 
async
éé 
Task
éé 
<
éé 
ActionResult
éé &
>
éé& '"
UpdatePrivateArticle
éé( <
(
éé< =
PrivateArticleDto
éé= N
privateArticleDto
ééO `
)
éé` a
{
èè 	
if
êê 
(
êê 
privateArticleDto
êê !
==
êê" $
null
êê$ (
||
êê) +
privateArticleDto
êê, =
.
êê= >
article
êê> E
==
êêF H
null
êêI M
)
êêM N
return
êêO U

BadRequest
êêV `
(
êê` a
Message
êêa h
(
êêh i
$strêêi Ä
)êêÄ Å
)êêÅ Ç
;êêÇ É
try
ëë 
{
íí 
var
íí 
_currentUser
íí  
=
íí  !
GetCurrentUser
íí! /
(
íí/ 0
)
íí0 1
;
íí1 2
return
ìì 
_articleService
ìì &
.
ìì& '
UpdateArticle
ìì' 4
(
ìì4 5
privateArticleDto
ìì5 F
.
ììF G
article
ììG N
,
ììN O
_currentUser
ììP \
.
ìì\ ]
UserId
ìì] c
,
ììc d
_currentUser
ììd p
.
ììp q

IsReviewer
ììq {
,
ìì{ | 
privateArticleDtoìì| ç
.ììç é
SharedUsersIdììé õ
!ììõ ú
)ììú ù
?ììû ü
awaitìì† •
Taskìì¶ ™
.ìì™ ´

FromResultìì´ µ
(ììµ ∂
Okìì∂ ∏
(ìì∏ π
Messageììπ ¿
(ìì¿ ¡
$strìì¡ „
)ìì„ ‰
)ìì‰ Â
)ììÂ Ê
:ììÁ Ë

BadRequestììÈ Û
(ììÛ Ù
MessageììÙ ˚
(ìì˚ ¸
$strìì¸ ¶
)ìì¶ ß
)ììß ®
;ìì® ©
}
îî 
catch
ïï 
(
ïï !
ValidationException
ïï &
	exception
ïï' 0
)
ïï0 1
{
ññ 
_logger
óó 
.
óó 
LogError
óó  
(
óó  !
HelperService
óó! .
.
óó. /
LoggerMessage
óó/ <
(
óó< =
$str
óó= P
,
óóP Q
$stróóR ç
,óóç é
	exceptionóóè ò
,óóò ô!
privateArticleDtoóóö ´
.óó´ ¨
articleóó¨ ≥
)óó≥ ¥
)óó¥ µ
;óóµ ∂
return
òò 

BadRequest
òò !
(
òò! "
Message
òò" )
(
òò) *
$"
òò* ,
{
òò, -
	exception
òò- 6
.
òò6 7
Message
òò7 >
}
òò> ?
"
òò? @
,
òò@ A
privateArticleDto
òòB S
.
òòS T
article
òòT [
)
òò[ \
)
òò\ ]
;
òò] ^
}
ôô 
catch
öö 
(
öö 
	Exception
öö 
	exception
öö &
)
öö& '
{
õõ 
_logger
úú 
.
úú 
LogError
úú  
(
úú  !
HelperService
úú! .
.
úú. /
LoggerMessage
úú/ <
(
úú< =
$str
úú= P
,
úúP Q
$strúúR ç
,úúç é
	exceptionúúè ò
,úúò ô!
privateArticleDtoúúö ´
.úú´ ¨
articleúú¨ ≥
)úú≥ ¥
)úú¥ µ
;úúµ ∂
return
ùù 
Problem
ùù 
(
ùù 
$"
ùù !
$str
ùù! E
{
ùùE F
HelperService
ùùF S
.
ùùS T
PropertyList
ùùT `
(
ùù` a
privateArticleDto
ùùa r
.
ùùr s
article
ùùs z
)
ùùz {
}
ùù{ |
"
ùù| }
)
ùù} ~
;
ùù~ 
}
ûû 
}
üü 	
[
ππ 	
	HttpPatch
ππ	 
]
ππ 
public
∫∫ 
async
∫∫ 
Task
∫∫ 
<
∫∫ 
ActionResult
∫∫ &
>
∫∫& '!
ChangeArticleStatus
∫∫( ;
(
∫∫; <
int
∫∫< ?
	ArticleId
∫∫@ I
,
∫∫I J
int
∫∫K N
ArticleStatusID
∫∫O ^
)
∫∫^ _
{
ªª 	
if
ºº 
(
ºº 
	ArticleId
ºº 
<=
ºº 
$num
ºº 
||
ºº !
ArticleStatusID
ºº" 1
<=
ºº2 4
$num
ºº5 6
||
ºº7 9
ArticleStatusID
ºº: I
>
ººJ K
$num
ººL M
)
ººM N
return
ººO U

BadRequest
ººV `
(
ºº` a
Message
ººa h
(
ººh i
$strººi ◊
)ºº◊ ÿ
)ººÿ Ÿ
;ººŸ ⁄
if
ΩΩ 
(
ΩΩ 
ArticleStatusID
ΩΩ 
>=
ΩΩ  "
$num
ΩΩ# $
&&
ΩΩ% '
!
ΩΩ( )
GetCurrentUser
ΩΩ) 7
(
ΩΩ7 8
)
ΩΩ8 9
.
ΩΩ9 :

IsReviewer
ΩΩ: D
)
ΩΩD E
return
ΩΩF L

BadRequest
ΩΩM W
(
ΩΩW X
Message
ΩΩX _
(
ΩΩ_ `
$strΩΩ` ç
)ΩΩç é
)ΩΩé è
;ΩΩè ê
try
ææ 
{
øø 
return
¿¿ 
_articleService
¿¿ &
.
¿¿& '!
ChangeArticleStatus
¿¿' :
(
¿¿: ;
	ArticleId
¿¿; D
,
¿¿D E
ArticleStatusID
¿¿F U
,
¿¿U V
GetCurrentUser
¿¿W e
(
¿¿e f
)
¿¿f g
.
¿¿g h
UserId
¿¿h n
)
¿¿n o
?
¿¿p q
await
¿¿r w
Task
¿¿x |
.
¿¿| }

FromResult¿¿} á
(¿¿á à
Ok¿¿à ä
(¿¿ä ã
$"¿¿ã ç
$str¿¿ç Ω
{¿¿Ω æ
	ArticleId¿¿æ «
}¿¿« »
"¿¿» …
)¿¿…  
)¿¿  À
:¿¿Ã Õ

BadRequest¿¿Œ ÿ
(¿¿ÿ Ÿ
Message¿¿Ÿ ‡
(¿¿‡ ·
$"¿¿· „
$str¿¿„ õ
{¿¿õ ú
	ArticleId¿¿ú •
}¿¿• ¶
"¿¿¶ ß
)¿¿ß ®
)¿¿® ©
;¿¿© ™
}
¡¡ 
catch
¬¬ 
(
¬¬ #
ItemNotFoundException
¬¬ (
	exception
¬¬) 2
)
¬¬2 3
{
√√ 
_logger
ƒƒ 
.
ƒƒ 
LogError
ƒƒ  
(
ƒƒ  !
HelperService
ƒƒ! .
.
ƒƒ. /
LoggerMessage
ƒƒ/ <
(
ƒƒ< =
$str
ƒƒ= P
,
ƒƒP Q
$strƒƒR ã
,ƒƒã å
	exceptionƒƒç ñ
,ƒƒñ ó
	ArticleIdƒƒò °
,ƒƒ° ¢
ArticleStatusIDƒƒ£ ≤
)ƒƒ≤ ≥
)ƒƒ≥ ¥
;ƒƒ¥ µ
return
≈≈ 

BadRequest
≈≈ !
(
≈≈! "
$"
≈≈" $
{
≈≈$ %
	exception
≈≈% .
.
≈≈. /
Message
≈≈/ 6
}
≈≈6 7
"
≈≈7 8
)
≈≈8 9
;
≈≈9 :
}
∆∆ 
catch
«« 
(
«« !
ValidationException
«« &
	exception
««' 0
)
««0 1
{
»» 
_logger
…… 
.
…… 
LogError
……  
(
……  !
HelperService
……! .
.
……. /
LoggerMessage
……/ <
(
……< =
$str
……= P
,
……P Q
$str……R ã
,……ã å
	exception……ç ñ
,……ñ ó
	ArticleId……ò °
,……° ¢
ArticleStatusID……£ ≤
)……≤ ≥
)……≥ ¥
;……¥ µ
return
   

BadRequest
   !
(
  ! "
Message
  " )
(
  ) *
$"
  * ,
{
  , -
	exception
  - 6
.
  6 7
Message
  7 >
}
  > ?
"
  ? @
)
  @ A
)
  A B
;
  B C
}
ÀÀ 
catch
ÃÃ 
(
ÃÃ 
	Exception
ÃÃ 
	exception
ÃÃ &
)
ÃÃ& '
{
ÕÕ 
_logger
ŒŒ 
.
ŒŒ 
LogError
ŒŒ  
(
ŒŒ  !
HelperService
ŒŒ! .
.
ŒŒ. /
LoggerMessage
ŒŒ/ <
(
ŒŒ< =
$str
ŒŒ= P
,
ŒŒP Q
$strŒŒR ã
,ŒŒã å
	exceptionŒŒç ñ
,ŒŒñ ó
	ArticleIdŒŒò °
,ŒŒ° ¢
ArticleStatusIDŒŒ£ ≤
)ŒŒ≤ ≥
)ŒŒ≥ ¥
;ŒŒ¥ µ
return
œœ 
Problem
œœ 
(
œœ 
$"
œœ !
$str
œœ! Z
{
œœZ [
	ArticleId
œœ[ d
}
œœd e
"
œœe f
)
œœf g
;
œœg h
}
–– 
}
—— 	
[
‘‘ 	

HttpDelete
‘‘	 
]
‘‘ 
public
’’ 
async
’’ 
Task
’’ 
<
’’ 
ActionResult
’’ &
>
’’& '&
DeleteArticleByArticleId
’’( @
(
’’@ A
int
’’A D
	ArticleId
’’E N
)
’’N O
{
÷÷ 	
if
◊◊ 
(
◊◊ 
	ArticleId
◊◊ 
<=
◊◊ 
$num
◊◊ 
)
◊◊ 
return
◊◊  &

BadRequest
◊◊' 1
(
◊◊1 2
Message
◊◊2 9
(
◊◊9 :
$str
◊◊: ]
)
◊◊] ^
)
◊◊^ _
;
◊◊_ `
try
ÿÿ 
{
ŸŸ 
return
⁄⁄ 
_articleService
⁄⁄ &
.
⁄⁄& '&
DeleteArticleByArticleId
⁄⁄' ?
(
⁄⁄? @
	ArticleId
⁄⁄@ I
)
⁄⁄I J
?
⁄⁄K L
await
⁄⁄M R
Task
⁄⁄S W
.
⁄⁄W X

FromResult
⁄⁄X b
(
⁄⁄b c
Ok
⁄⁄c e
(
⁄⁄e f
Message
⁄⁄f m
(
⁄⁄m n
$str⁄⁄n ñ
)⁄⁄ñ ó
)⁄⁄ó ò
)⁄⁄ò ô
:⁄⁄ö õ

BadRequest⁄⁄ú ¶
(⁄⁄¶ ß
Message⁄⁄ß Æ
(⁄⁄Æ Ø
$"⁄⁄Ø ±
$str⁄⁄± Â
{⁄⁄Â Ê
	ArticleId⁄⁄Ê Ô
}⁄⁄Ô 
$str⁄⁄ Ò
"⁄⁄Ò Ú
)⁄⁄Ú Û
)⁄⁄Û Ù
;⁄⁄Ù ı
}
€€ 
catch
‹‹ 
(
‹‹ 
ArgumentException
‹‹ $
	exception
‹‹% .
)
‹‹. /
{
›› 
_logger
ﬁﬁ 
.
ﬁﬁ 
LogError
ﬁﬁ  
(
ﬁﬁ  !
HelperService
ﬁﬁ! .
.
ﬁﬁ. /
LoggerMessage
ﬁﬁ/ <
(
ﬁﬁ< =
$str
ﬁﬁ= P
,
ﬁﬁP Q
$str
ﬁﬁR {
,
ﬁﬁ{ |
	exceptionﬁﬁ} Ü
,ﬁﬁÜ á
	ArticleIdﬁﬁà ë
)ﬁﬁë í
)ﬁﬁí ì
;ﬁﬁì î
return
ﬂﬂ 

BadRequest
ﬂﬂ !
(
ﬂﬂ! "
$"
ﬂﬂ" $
{
ﬂﬂ$ %
	exception
ﬂﬂ% .
.
ﬂﬂ. /
Message
ﬂﬂ/ 6
}
ﬂﬂ6 7
"
ﬂﬂ7 8
)
ﬂﬂ8 9
;
ﬂﬂ9 :
}
‡‡ 
catch
·· 
(
·· 
	Exception
·· 
	exception
·· &
)
··& '
{
‚‚ 
_logger
„„ 
.
„„ 
LogError
„„  
(
„„  !
HelperService
„„! .
.
„„. /
LoggerMessage
„„/ <
(
„„< =
$str
„„= P
,
„„P Q
$str
„„R {
,
„„{ |
	exception„„} Ü
,„„Ü á
	ArticleId„„à ë
)„„ë í
)„„í ì
;„„ì î
return
‰‰ 
Problem
‰‰ 
(
‰‰ 
$"
‰‰ !
$str
‰‰! P
{
‰‰P Q
	ArticleId
‰‰Q Z
}
‰‰Z [
"
‰‰[ \
)
‰‰\ ]
;
‰‰] ^
}
ÂÂ 
}
ÊÊ 	
[
¸¸ 	
HttpGet
¸¸	 
]
¸¸ 
public
˝˝ 
async
˝˝ 
Task
˝˝ 
<
˝˝ 
ActionResult
˝˝ &
>
˝˝& '
GetLatestArticles
˝˝( 9
(
˝˝9 :
int
˝˝: =
Range
˝˝> C
=
˝˝D E
$num
˝˝F G
)
˝˝G H
{
˛˛ 	
try
ˇˇ 
{
ÄÄ 
var
ÅÅ 
Articles
ÅÅ 
=
ÅÅ 
_articleService
ÅÅ .
.
ÅÅ. /
GetLatestArticles
ÅÅ/ @
(
ÅÅ@ A
)
ÅÅA B
.
ÅÅB C
ToList
ÅÅC I
(
ÅÅI J
)
ÅÅJ K
;
ÅÅK L
return
ÇÇ 
await
ÇÇ 
Task
ÇÇ !
.
ÇÇ! "

FromResult
ÇÇ" ,
(
ÇÇ, -
Ok
ÇÇ- /
(
ÇÇ/ 0
Articles
ÇÇ0 8
)
ÇÇ8 9
)
ÇÇ9 :
;
ÇÇ: ;
}
ÉÉ 
catch
ÑÑ 
(
ÑÑ 
	Exception
ÑÑ 
	exception
ÑÑ &
)
ÑÑ& '
{
ÖÖ 
_logger
ÜÜ 
.
ÜÜ 
LogError
ÜÜ  
(
ÜÜ  !
HelperService
ÜÜ! .
.
ÜÜ. /
LoggerMessage
ÜÜ/ <
(
ÜÜ< =
$str
ÜÜ= P
,
ÜÜP Q
$str
ÜÜR q
,
ÜÜq r
	exception
ÜÜs |
)
ÜÜ| }
)
ÜÜ} ~
;
ÜÜ~ 
return
áá 
Problem
áá 
(
áá 
$str
áá L
)
ááL M
;
ááM N
}
àà 
}
ââ 	
[
üü 	
HttpGet
üü	 
]
üü 
public
†† 
async
†† 
Task
†† 
<
†† 
ActionResult
†† &
>
††& '!
GetTrendingArticles
††( ;
(
††; <
int
††< ?
Range
††@ E
=
††F G
$num
††H I
)
††I J
{
°° 	
try
¢¢ 
{
££ 
var
§§ 
Articles
§§ 
=
§§ 
_articleService
§§ .
.
§§. /!
GetTrendingArticles
§§/ B
(
§§B C
Range
§§C H
)
§§H I
.
§§I J
ToList
§§J P
(
§§P Q
)
§§Q R
;
§§R S
return
•• 
await
•• 
Task
•• !
.
••! "

FromResult
••" ,
(
••, -
Ok
••- /
(
••/ 0
Articles
••0 8
)
••8 9
)
••9 :
;
••: ;
}
¶¶ 
catch
ßß 
(
ßß 
	Exception
ßß 
	exception
ßß &
)
ßß& '
{
®® 
_logger
©© 
.
©© 
LogError
©©  
(
©©  !
HelperService
©©! .
.
©©. /
LoggerMessage
©©/ <
(
©©< =
$str
©©= P
,
©©P Q
$str
©©R r
,
©©r s
	exception
©©t }
)
©©} ~
)
©©~ 
;©© Ä
return
™™ 
Problem
™™ 
(
™™ 
$str
™™ L
)
™™L M
;
™™M N
}
´´ 
}
¨¨ 	
[
¬¬ 	
HttpGet
¬¬	 
]
¬¬ 
public
√√ 
async
√√ 
Task
√√ 
<
√√ 
ActionResult
√√ &
>
√√& '
GetArticleById
√√( 6
(
√√6 7
int
√√7 :
	ArticleId
√√; D
)
√√D E
{
ƒƒ 	
if
≈≈ 
(
≈≈ 
	ArticleId
≈≈ 
<=
≈≈ 
$num
≈≈ 
)
≈≈ 
return
≈≈  &

BadRequest
≈≈' 1
(
≈≈1 2
Message
≈≈2 9
(
≈≈9 :
$str
≈≈: ]
)
≈≈] ^
)
≈≈^ _
;
≈≈_ `
try
∆∆ 
{
«« 
return
»» 
await
»» 
Task
»» !
.
»»! "

FromResult
»»" ,
(
»», -
Ok
»»- /
(
»»/ 0
_articleService
»»0 ?
.
»»? @
GetArticleById
»»@ N
(
»»N O
	ArticleId
»»O X
)
»»X Y
)
»»Y Z
)
»»Z [
;
»»[ \
}
…… 
catch
   
(
   #
ItemNotFoundException
   (
	exception
  ) 2
)
  2 3
{
ÀÀ 
_logger
ÃÃ 
.
ÃÃ 
LogError
ÃÃ  
(
ÃÃ  !
HelperService
ÃÃ! .
.
ÃÃ. /
LoggerMessage
ÃÃ/ <
(
ÃÃ< =
$str
ÃÃ= P
,
ÃÃP Q
$str
ÃÃR q
,
ÃÃq r
	exception
ÃÃs |
,
ÃÃ| }
	ArticleIdÃÃ~ á
)ÃÃá à
)ÃÃà â
;ÃÃâ ä
return
ÕÕ 

BadRequest
ÕÕ !
(
ÕÕ! "
Message
ÕÕ" )
(
ÕÕ) *
$"
ÕÕ* ,
{
ÕÕ, -
	exception
ÕÕ- 6
.
ÕÕ6 7
Message
ÕÕ7 >
}
ÕÕ> ?
"
ÕÕ? @
)
ÕÕ@ A
)
ÕÕA B
;
ÕÕB C
}
ŒŒ 
catch
œœ 
(
œœ 
	Exception
œœ 
	exception
œœ &
)
œœ& '
{
–– 
_logger
—— 
.
—— 
LogError
——  
(
——  !
HelperService
——! .
.
——. /
LoggerMessage
——/ <
(
——< =
$str
——= P
,
——P Q
$str
——R q
,
——q r
	exception
——s |
,
——| }
	ArticleId——~ á
)——á à
)——à â
;——â ä
return
““ 
Problem
““ 
(
““ 
$"
““ !
$str
““! V
{
““V W
	ArticleId
““W `
}
““` a
"
““a b
)
““b c
;
““c d
}
”” 
}
‘‘ 	
[
‚‚ 	
HttpGet
‚‚	 
]
‚‚ 
public
„„ 
async
„„ 
Task
„„ 
<
„„ 
ActionResult
„„ &
>
„„& '
GetAll
„„( .
(
„„. /
)
„„/ 0
{
‰‰ 	
try
ÂÂ 
{
ÊÊ 
var
ÁÁ 
Articles
ÁÁ 
=
ÁÁ 
_articleService
ÁÁ .
.
ÁÁ. /
GetListOfArticles
ÁÁ/ @
(
ÁÁ@ A
)
ÁÁA B
;
ÁÁB C
return
ËË 
await
ËË 
Task
ËË !
.
ËË! "

FromResult
ËË" ,
(
ËË, -
Ok
ËË- /
(
ËË/ 0
Articles
ËË0 8
)
ËË8 9
)
ËË9 :
;
ËË: ;
}
ÈÈ 
catch
ÍÍ 
(
ÍÍ 
	Exception
ÍÍ 
	exception
ÍÍ &
)
ÍÍ& '
{
ÎÎ 
_logger
ÏÏ 
.
ÏÏ 
LogError
ÏÏ  
(
ÏÏ  !
HelperService
ÏÏ! .
.
ÏÏ. /
LoggerMessage
ÏÏ/ <
(
ÏÏ< =
$str
ÏÏ= P
,
ÏÏP Q
$str
ÏÏR ]
,
ÏÏ] ^
	exception
ÏÏ_ h
)
ÏÏh i
)
ÏÏi j
;
ÏÏj k
return
ÌÌ 
Problem
ÌÌ 
(
ÌÌ 
$str
ÌÌ L
)
ÌÌL M
;
ÌÌM N
}
ÓÓ 
}
ÔÔ 	
[
˝˝ 	
HttpGet
˝˝	 
]
˝˝ 
public
˛˛ 
async
˛˛ 
Task
˛˛ 
<
˛˛ 
ActionResult
˛˛ &
>
˛˛& '!
GetArticlesByUserId
˛˛( ;
(
˛˛; <
)
˛˛< =
{
ˇˇ 	
try
ÄÄ 
{
ÅÅ 
var
ÇÇ #
ListOfArticleByUserId
ÇÇ )
=
ÇÇ* +
_articleService
ÇÇ, ;
.
ÇÇ; <!
GetArticlesByUserId
ÇÇ< O
(
ÇÇO P
GetCurrentUser
ÇÇP ^
(
ÇÇ^ _
)
ÇÇ_ `
.
ÇÇ` a
UserId
ÇÇa g
)
ÇÇg h
;
ÇÇh i
return
ÉÉ 
await
ÉÉ 
Task
ÉÉ !
.
ÉÉ! "

FromResult
ÉÉ" ,
(
ÉÉ, -
Ok
ÉÉ- /
(
ÉÉ/ 0#
ListOfArticleByUserId
ÉÉ0 E
)
ÉÉE F
)
ÉÉF G
;
ÉÉG H
}
ÑÑ 
catch
ÖÖ 
(
ÖÖ 
	Exception
ÖÖ 
	exception
ÖÖ &
)
ÖÖ& '
{
ÜÜ 
_logger
áá 
.
áá 
LogError
áá  
(
áá  !
HelperService
áá! .
.
áá. /
LoggerMessage
áá/ <
(
áá< =
$str
áá= P
,
ááP Q
$str
ááR s
,
áás t
	exception
ááu ~
)
áá~ 
)áá Ä
;ááÄ Å
return
àà 
Problem
àà 
(
àà 
$"
àà !
$str
àà! f
"
ààf g
)
ààg h
;
ààh i
}
ââ 
}
ää 	
[
°° 	
HttpGet
°°	 
]
°° 
public
¢¢ 
async
¢¢ 
Task
¢¢ 
<
¢¢ 
ActionResult
¢¢ &
>
¢¢& ' 
GetPrivateArticles
¢¢( :
(
¢¢: ;
)
¢¢; <
{
££ 	
try
§§ 
{
•• 
var
¶¶ #
ListOfPrivateArticles
¶¶ )
=
¶¶* +
_articleService
¶¶, ;
.
¶¶; < 
GetPrivateArticles
¶¶< N
(
¶¶N O
GetCurrentUser
¶¶O ]
(
¶¶] ^
)
¶¶^ _
.
¶¶_ `
UserId
¶¶` f
)
¶¶f g
;
¶¶g h
return
ßß 
await
ßß 
Task
ßß !
.
ßß! "

FromResult
ßß" ,
(
ßß, -
Ok
ßß- /
(
ßß/ 0#
ListOfPrivateArticles
ßß0 E
)
ßßE F
)
ßßF G
;
ßßG H
}
®® 
catch
©© 
(
©© 
	Exception
©© 
	exception
©© &
)
©©& '
{
™™ 
_logger
´´ 
.
´´ 
LogError
´´  
(
´´  !
HelperService
´´! .
.
´´. /
LoggerMessage
´´/ <
(
´´< =
$str
´´= P
,
´´P Q
$str
´´R i
,
´´i j
	exception
´´k t
)
´´t u
)
´´u v
;
´´v w
return
¨¨ 
Problem
¨¨ 
(
¨¨ 
$"
¨¨ !
$str
¨¨! L
"
¨¨L M
)
¨¨M N
;
¨¨N O
}
≠≠ 
}
ÆÆ 	
[
≈≈ 	
HttpGet
≈≈	 
]
≈≈ 
public
∆∆ 
async
∆∆ 
Task
∆∆ 
<
∆∆ 
ActionResult
∆∆ &
>
∆∆& ' 
GetArticlesByTitle
∆∆( :
(
∆∆: ;
string
∆∆; A
Title
∆∆B G
)
∆∆G H
{
«« 	
if
»» 
(
»» 
String
»» 
.
»» 
IsNullOrEmpty
»» $
(
»»$ %
Title
»»% *
)
»»* +
)
»»+ ,
return
»»- 3

BadRequest
»»4 >
(
»»> ?
Message
»»? F
(
»»F G
$str
»»G \
)
»»\ ]
)
»»] ^
;
»»^ _
try
…… 
{
   
var
ÀÀ #
ListOfArticlesByTitle
ÀÀ )
=
ÀÀ* +
_articleService
ÀÀ, ;
.
ÀÀ; < 
GetArticlesByTitle
ÀÀ< N
(
ÀÀN O
Title
ÀÀO T
)
ÀÀT U
;
ÀÀU V
return
ÃÃ 
await
ÃÃ 
Task
ÃÃ !
.
ÃÃ! "

FromResult
ÃÃ" ,
(
ÃÃ, -
Ok
ÃÃ- /
(
ÃÃ/ 0#
ListOfArticlesByTitle
ÃÃ0 E
)
ÃÃE F
)
ÃÃF G
;
ÃÃG H
}
ÕÕ 
catch
ŒŒ 
(
ŒŒ 
	Exception
ŒŒ 
	exception
ŒŒ &
)
ŒŒ& '
{
œœ 
_logger
–– 
.
–– 
LogError
––  
(
––  !
HelperService
––! .
.
––. /
LoggerMessage
––/ <
(
––< =
$str
––= P
,
––P Q
$str
––R t
,
––t u
	exception
––v 
,–– Ä
Title––Å Ü
)––Ü á
)––á à
;––à â
return
—— 
Problem
—— 
(
—— 
$"
—— !
$str
——! Y
{
——Y Z
Title
——Z _
}
——_ `
"
——` a
)
——a b
;
——b c
}
““ 
}
”” 	
[
ÍÍ 	
HttpGet
ÍÍ	 
]
ÍÍ 
public
ÎÎ 
async
ÎÎ 
Task
ÎÎ 
<
ÎÎ 
ActionResult
ÎÎ &
>
ÎÎ& '!
GetArticlesByAuthor
ÎÎ( ;
(
ÎÎ; <
string
ÎÎ< B

AuthorName
ÎÎC M
)
ÎÎM N
{
ÏÏ 	
if
ÌÌ 
(
ÌÌ 
String
ÌÌ 
.
ÌÌ 
IsNullOrEmpty
ÌÌ $
(
ÌÌ$ %

AuthorName
ÌÌ% /
)
ÌÌ/ 0
)
ÌÌ0 1
return
ÌÌ2 8

BadRequest
ÌÌ9 C
(
ÌÌC D
Message
ÌÌD K
(
ÌÌK L
$str
ÌÌL g
)
ÌÌg h
)
ÌÌh i
;
ÌÌi j
try
ÓÓ 
{
ÔÔ 
var
 $
ListOfArticlesByAuthor
 *
=
+ ,
_articleService
- <
.
< = 
GetArticlesByTitle
= O
(
O P

AuthorName
P Z
)
Z [
;
[ \
return
ÒÒ 
await
ÒÒ 
Task
ÒÒ !
.
ÒÒ! "

FromResult
ÒÒ" ,
(
ÒÒ, -
Ok
ÒÒ- /
(
ÒÒ/ 0$
ListOfArticlesByAuthor
ÒÒ0 F
)
ÒÒF G
)
ÒÒG H
;
ÒÒH I
}
ÚÚ 
catch
ÛÛ 
(
ÛÛ 
	Exception
ÛÛ 
	exception
ÛÛ &
)
ÛÛ& '
{
ÙÙ 
_logger
ıı 
.
ıı 
LogError
ıı  
(
ıı  !
HelperService
ıı! .
.
ıı. /
LoggerMessage
ıı/ <
(
ıı< =
$str
ıı= P
,
ııP Q
$str
ııR z
,
ıız {
	exceptionıı| Ö
,ııÖ Ü

AuthorNameııá ë
)ııë í
)ııí ì
;ııì î
return
ˆˆ 
Problem
ˆˆ 
(
ˆˆ 
$"
ˆˆ !
$str
ˆˆ! Y
{
ˆˆY Z

AuthorName
ˆˆZ d
}
ˆˆd e
"
ˆˆe f
)
ˆˆf g
;
ˆˆg h
}
˜˜ 
}
¯¯ 	
[
èè 	
HttpGet
èè	 
]
èè 
public
êê 
async
êê 
Task
êê 
<
êê 
IActionResult
êê '
>
êê' (*
GetArticlesByArticleStatusId
êê) E
(
êêE F
int
êêF I
ArticleStatusID
êêJ Y
)
êêY Z
{
ëë 	
if
íí 
(
íí 
ArticleStatusID
íí 
<=
íí  "
$num
íí# $
||
íí% '
ArticleStatusID
íí( 7
>
íí8 9
$num
íí: ;
)
íí; <
return
íí= C

BadRequest
ííD N
(
ííN O
Message
ííO V
(
ííV W
$"
ííW Y
$strííY ì
{ííì î
ArticleStatusIDííî £
}íí£ §
"íí§ •
)íí• ¶
)íí¶ ß
;ííß ®
try
ìì 
{
îî 
var
ïï 
ListOfArticles
ïï "
=
ïï# $
_articleService
ïï% 4
.
ïï4 5*
GetArticlesByArticleStatusId
ïï5 Q
(
ïïQ R
ArticleStatusID
ïïR a
,
ïïa b
GetCurrentUser
ïïc q
(
ïïq r
)
ïïr s
.
ïïs t

IsReviewer
ïït ~
)
ïï~ 
;ïï Ä
return
ññ 
await
ññ 
Task
ññ !
.
ññ! "

FromResult
ññ" ,
(
ññ, -
Ok
ññ- /
(
ññ/ 0
ListOfArticles
ññ0 >
)
ññ> ?
)
ññ? @
;
ññ@ A
}
óó 
catch
òò 
(
òò 
	Exception
òò 
	exception
òò &
)
òò& '
{
ôô 
_logger
öö 
.
öö 
LogError
öö  
(
öö  !
HelperService
öö! .
.
öö. /
LoggerMessage
öö/ <
(
öö< =
$str
öö= P
,
ööP Q
$strööR Ö
,ööÖ Ü
	exceptionööá ê
)ööê ë
,ööë í
ArticleStatusIDööì ¢
)öö¢ £
;öö£ §
return
õõ 
Problem
õõ 
(
õõ 
$str
õõ =
)
õõ= >
;
õõ> ?
}
úú 
}
ùù 	
[
¥¥ 	
HttpGet
¥¥	 
]
¥¥ 
public
µµ 
async
µµ 
Task
µµ 
<
µµ 
ActionResult
µµ &
>
µµ& '
GetComments
µµ( 3
(
µµ3 4
int
µµ4 7
	ArticleId
µµ8 A
)
µµA B
{
∂∂ 	
if
∑∑ 
(
∑∑ 
	ArticleId
∑∑ 
<=
∑∑ 
$num
∑∑ 
)
∑∑ 
return
∑∑  &

BadRequest
∑∑' 1
(
∑∑1 2
Message
∑∑2 9
(
∑∑9 :
$str
∑∑: \
)
∑∑\ ]
)
∑∑] ^
;
∑∑^ _
try
∏∏ 
{
ππ 
var
∫∫ 
ListOfComments
∫∫ "
=
∫∫# $
_articleService
∫∫% 4
.
∫∫4 5
GetComments
∫∫5 @
(
∫∫@ A
	ArticleId
∫∫A J
)
∫∫J K
;
∫∫K L
return
ªª 
await
ªª 
Task
ªª !
.
ªª! "

FromResult
ªª" ,
(
ªª, -
Ok
ªª- /
(
ªª/ 0
ListOfComments
ªª0 >
)
ªª> ?
)
ªª? @
;
ªª@ A
}
ºº 
catch
ΩΩ 
(
ΩΩ 
	Exception
ΩΩ 
	exception
ΩΩ &
)
ΩΩ& '
{
ææ 
_logger
øø 
.
øø 
LogError
øø  
(
øø  !
HelperService
øø! .
.
øø. /
LoggerMessage
øø/ <
(
øø< =
$str
øø= P
,
øøP Q
nameof
øøR X
(
øøX Y
GetComments
øøY d
)
øød e
,
øøe f
	exception
øøg p
,
øøp q
	ArticleId
øør {
)
øø{ |
)
øø| }
;
øø} ~
return
¿¿ 
Problem
¿¿ 
(
¿¿ 
$"
¿¿ !
$str
¿¿! ]
{
¿¿] ^
	ArticleId
¿¿^ g
}
¿¿g h
"
¿¿h i
)
¿¿i j
;
¿¿j k
}
¡¡ 
}
¬¬ 	
}
√√ 
}ƒƒ °
MC:\Users\pooja.sakthivel\Desktop\AspireOverflow\Controllers\BaseController.cs
	namespace 	
AspireOverflow
 
. 
Controllers $
{ 
public 

class 
BaseController 
:  !
ControllerBase" 0
{ 
	protected

 
object

 
Message

  
(

  !
string

! '
message

( /
,

/ 0
object

1 7
?

7 8
obj

9 <
=

= >
null

? C
)

C D
{ 	
if 
( 
Message 
!= 
null 
&&  "
obj# &
==' )
null* .
). /
return0 6
new7 :
{; <
Message= D
=E F
messageG N
}O P
;P Q
else 
if 
( 
Message 
!= 
null  $
&&% '
obj( +
!=, .
null/ 3
)3 4
return5 ;
new< ?
{@ A
MessageB I
=J K
messageL S
,S T

DataPassedU _
=` a
objb e
}f g
;g h
else 
return 
new 
{ 
} 
;  
} 	
	protected 
CurrentUser 
GetCurrentUser ,
(, -
)- .
{ 	
var 
CurrentUser 
= 
new !
CurrentUser" -
(- .
). /
;/ 0
if 
( 
User 
!= 
null 
) 
try 
{ 
CurrentUser 
.  
UserId  &
=' (
Convert) 0
.0 1
ToInt321 8
(8 9
User9 =
.= >
	FindFirst> G
(G H
$strH P
)P Q
?Q R
.R S
ValueS X
)X Y
;Y Z
CurrentUser 
.  
Email  %
=& '
User( ,
., -
	FindFirst- 6
(6 7

ClaimTypes7 A
.A B
EmailB G
)G H
?H I
.I J
ValueJ O
;O P
CurrentUser 
.  
RoleId  &
=' (
Convert) 0
.0 1
ToInt321 8
(8 9
User9 =
.= >
	FindFirst> G
(G H
$strH P
)P Q
?Q R
.R S
ValueS X
)X Y
;Y Z
CurrentUser 
.  

IsReviewer  *
=+ ,
Convert- 4
.4 5
	ToBoolean5 >
(> ?
User? C
.C D
	FindFirstD M
(M N
$strN Z
)Z [
?[ \
.\ ]
Value] b
)b c
;c d
return 
CurrentUser &
;& '
} 
catch 
( 
	Exception !
)! "
{" #
throw 
; 
} 
return   
CurrentUser   
;   
}!! 	
}"" 
}## Ω7
RC:\Users\pooja.sakthivel\Desktop\AspireOverflow\Controllers\DashboardController.cs
	namespace 	
AspireOverflow
 
. 
Controllers $
{ 
[		 
ApiController		 
]		 
[

 
	Authorize

 
]

 
[ 
Route 

(
 
$str "
)" #
]# $
public 

class 
DashboardController $
:% &
BaseController' 5
{ 
private 
readonly 
ILogger  
<  !
DashboardController! 4
>4 5
_logger6 =
;= >
private 
readonly 
IArticleService (
_articleService) 8
;8 9
private 
readonly 
IQueryService &
_queryService' 4
;4 5
private 
readonly 
IUserService %
_userService& 2
;2 3
public 
DashboardController "
(" #
ILogger# *
<* +
DashboardController+ >
>> ?
logger@ F
,F G
IArticleServiceH W
articleServiceX f
,f g
IQueryServiceh u
queryService	v Ç
,
Ç É
IUserService
Ñ ê
userService
ë ú
)
ú ù
{ 	
_logger 
= 
logger 
; 
_articleService 
= 
articleService ,
;, -
_userService 
= 
userService &
;& '
_queryService 
= 
queryService (
;( )
} 	
[-- 	
HttpGet--	 
]-- 
[-- 
	Authorize-- 
(-- 
Roles-- !
=--" #
$str--# -
)--- .
]--. /
public.. 
async.. 
Task.. 
<.. 
ActionResult.. &
>..& ' 
GetReviewerDashboard..( <
(..< =
)..= >
{// 	
try00 
{11 
var22  
DashboardInformation22 (
=22) *
new22+ .
{22/ 0
articleCounts220 =
=22> ?
_articleService22? N
.22N O
GetCountOfArticles22O a
(22a b
)22b c
}22c d
;22d e
return33 
await33 
Task33 !
.33! "

FromResult33" ,
(33, -
Ok33- /
(33/ 0 
DashboardInformation330 D
)33D E
)33E F
;33F G
}44 
catch55 
(55 
	Exception55 
	exception55 &
)55& '
{66 
_logger77 
.77 
LogError77  
(77  !
HelperService77! .
.77. /
LoggerMessage77/ <
(77< =
$str77= R
,77R S
$str77T z
,77z {
	exception	77| Ö
)
77Ö Ü
)
77Ü á
;
77á à
return88 

BadRequest88 !
(88! "
Message88" )
(88) *
$str88* W
)88W X
)88X Y
;88Y Z
}99 
}:: 	
[II 	
HttpGetII	 
]II 
[II 
	AuthorizeII 
(II 
RolesII !
=II" #
$strII# *
)II* +
]II+ ,
publicJJ 
asyncJJ 
TaskJJ 
<JJ 
ActionResultJJ &
>JJ& '
GetAdminDashboardJJ( 9
(JJ9 :
)JJ: ;
{KK 	
tryLL 
{MM 
varNN  
DashboardInformationNN (
=NN) *
newNN+ .
{OO 
ArticlesPP 
=PP 
_articleServicePP -
.PP- .
GetCountOfArticlesPP. @
(PP@ A
)PPA B
,PPB C
UsersQQ 
=QQ 
_userServiceQQ '
.QQ' (
GetCountOfUsersQQ( 7
(QQ7 8
)QQ8 9
,QQ9 :
QueriesRR 
=RR 
_queryServiceRR *
.RR* +
GetCountOfQueriesRR+ <
(RR< =
)RR= >
}SS 
;SS 
returnSS 
awaitSS 
TaskSS  $
.SS$ %

FromResultSS% /
(SS/ 0
OkSS0 2
(SS2 3 
DashboardInformationSS3 G
)SSG H
)SSH I
;SSI J
}TT 
catchUU 
(UU 
	ExceptionUU 
	exceptionUU &
)UU& '
{VV 
_loggerWW 
.WW 
LogErrorWW  
(WW  !
HelperServiceWW! .
.WW. /
LoggerMessageWW/ <
(WW< =
$strWW= R
,WWR S
$strWWT i
,WWi j
	exceptionWWk t
)WWt u
)WWu v
;WWv w
returnXX 

BadRequestXX !
(XX! "
MessageXX" )
(XX) *
$strXX* W
)XXW X
)XXX Y
;XXY Z
}YY 
}ZZ 	
[hh 	
HttpGethh	 
]hh 
publicii 
asyncii 
Taskii 
<ii 
ActionResultii &
>ii& '
GetHomePageii( 3
(ii3 4
intii4 7
	DataRangeii8 A
)iiA B
{jj 	
tryjj
 
{kk 
varll 
Datall 
=ll 
newll 
{mm 
TrendingArticlesnn $
=nn% &
_articleServicenn' 6
.nn6 7
GetTrendingArticlesnn7 J
(nnJ K
	DataRangennK T
)nnT U
,nnU V
LatestArticlesoo "
=oo# $
_articleServiceoo% 4
.oo4 5
GetLatestArticlesoo5 F
(ooF G
	DataRangeooG P
)ooP Q
,ooQ R
TrendingQueriespp #
=pp$ %
_queryServicepp& 3
.pp3 4
GetTrendingQueriespp4 F
(ppF G
	DataRangeppG P
)ppP Q
,ppQ R
LatestQueriesqq !
=qq" #
_queryServiceqq$ 1
.qq1 2
GetLatestQueriesqq2 B
(qqB C
	DataRangeqqC L
)qqL M
,qqM N
}rr 
;rr 
returnrr 
awaitrr 
Taskrr  $
.rr$ %

FromResultrr% /
(rr/ 0
Okrr0 2
(rr2 3
Datarr3 7
)rr7 8
)rr8 9
;rr9 :
}ss 
catchtt 
(tt 
	Exceptiontt 
	exceptiontt &
)tt& '
{uu 
_loggervv 
.vv 
LogErrorvv  
(vv  !
HelperServicevv! .
.vv. /
LoggerMessagevv/ <
(vv< =
$strvv= R
,vvR S
$strvvT c
,vvc d
	exceptionvve n
)vvn o
)vvo p
;vvp q
returnww 

BadRequestww !
(ww! "
Messageww" )
(ww) *
$strww* W
)wwW X
)wwX Y
;wwY Z
}xx 
}yy 	
}zz 
}{{ Ÿç
NC:\Users\pooja.sakthivel\Desktop\AspireOverflow\Controllers\QueryController.cs
	namespace 	
AspireOverflow
 
. 
Controllers $
{		 
[

 
ApiController

 
]

 
[ 
Route 

(
 
$str "
)" #
]# $
public 

class 
QueryController  
:! "
BaseController# 1
{ 
private 
readonly 
ILogger  
<  !
QueryController! 0
>0 1
_logger2 9
;9 :
private 
readonly 
IQueryService &
_queryService' 4
;4 5
public 
QueryController 
( 
ILogger &
<& '
QueryController' 6
>6 7
logger8 >
,> ?
IQueryService@ M
queryServiceN Z
)Z [
{ 	
_logger 
= 
logger 
; 
_queryService 
= 
queryService (
;( )
} 	
[00 	
HttpPost00	 
]00 
public11 
async11 
Task11 
<11 
ActionResult11 &
>11& '
CreateQuery11( 3
(113 4
Query114 9
query11: ?
)11? @
{22 	
if33 
(33 
query33 
==33 
null33 
)33 
return33 %

BadRequest33& 0
(330 1
Message331 8
(338 9
$str339 V
)33V W
)33W X
;33X Y
try44 
{55 
query66 
.66 
	CreatedBy66 
=66  !
GetCurrentUser66" 0
(660 1
)661 2
.662 3
UserId663 9
;669 :
return77 
_queryService77 $
.77$ %
CreateQuery77% 0
(770 1
query771 6
)776 7
?778 9
await77: ?
Task77@ D
.77D E

FromResult77E O
(77O P
Ok77P R
(77R S
Message77S Z
(77Z [
$str77[ q
)77q r
)77r s
)77s t
:77u v

BadRequest	77w Å
(
77Å Ç
Message
77Ç â
(
77â ä
$"
77ä å
$str
77å Æ
{
77Æ Ø
HelperService
77Ø º
.
77º Ω
PropertyList
77Ω …
(
77…  
query
77  œ
)
77œ –
}
77– —
"
77— “
)
77“ ”
)
77” ‘
;
77‘ ’
}88 
catch99 
(99 
ValidationException99 &
	exception99' 0
)990 1
{:: 
_logger<< 
.<< 
LogError<<  
(<<  !
HelperService<<! .
.<<. /
LoggerMessage<</ <
(<<< =
$str<<= N
,<<N O
$str<<P j
,<<j k
	exception<<l u
,<<u v
query<<w |
)<<| }
)<<} ~
;<<~ 
return== 

BadRequest== !
(==! "
Message==" )
(==) *
$"==* ,
{==, -
	exception==- 6
.==6 7
Message==7 >
}==> ?
"==? @
,==@ A
query==B G
)==G H
)==H I
;==I J
}>> 
catch?? 
(?? 
	Exception?? 
	exception?? &
)??& '
{@@ 
_loggerAA 
.AA 
LogErrorAA  
(AA  !
HelperServiceAA! .
.AA. /
LoggerMessageAA/ <
(AA< =
$strAA= N
,AAN O
$strAAP j
,AAj k
	exceptionAAl u
,AAu v
queryAAw |
)AA| }
)AA} ~
;AA~ 
returnBB 
ProblemBB 
(BB 
$"BB !
$strBB! C
{BBC D
HelperServiceBBD Q
.BBQ R
PropertyListBBR ^
(BB^ _
queryBB_ d
)BBd e
}BBe f
"BBf g
)BBg h
;BBh i
}CC 
}DD 	
[]] 	

HttpDelete]]	 
]]] 
[]] 
	Authorize]] 
(]] 
Roles]] $
=]]% &
$str]]& -
)]]- .
]]]. /
public^^ 
async^^ 
Task^^ 
<^^ 
ActionResult^^ &
>^^& ' 
RemoveQueryByQueryId^^( <
(^^< =
int^^= @
QueryId^^A H
)^^H I
{__ 	
if`` 
(`` 
QueryId`` 
<=`` 
$num`` 
)`` 
return`` $

BadRequest``% /
(``/ 0
Message``0 7
(``7 8
$str``8 Y
)``Y Z
)``Z [
;``[ \
tryaa 
{bb 
returncc 
_queryServicecc $
.cc$ % 
RemoveQueryByQueryIdcc% 9
(cc9 :
QueryIdcc: A
)ccA B
?ccC D
awaitccE J
TaskccK O
.ccO P

FromResultccP Z
(ccZ [
Okcc[ ]
(cc] ^
$"cc^ `
$str	cc` é
{
ccé è
QueryId
ccè ñ
}
ccñ ó
"
ccó ò
)
ccò ô
)
ccô ö
:
ccõ ú

BadRequest
ccù ß
(
ccß ®
Message
cc® Ø
(
ccØ ∞
$"
cc∞ ≤
$str
cc≤ ‰
{
cc‰ Â
QueryId
ccÂ Ï
}
ccÏ Ì
"
ccÌ Ó
)
ccÓ Ô
)
ccÔ 
;
cc Ò
}dd 
catchee 
(ee !
ItemNotFoundExceptionee (
	exceptionee) 2
)ee2 3
{ff 
_loggergg 
.gg 
LogErrorgg  
(gg  !
HelperServicegg! .
.gg. /
LoggerMessagegg/ <
(gg< =
$strgg= N
,ggN O
$strggP s
,ggs t
	exceptionggu ~
,gg~ 
QueryId
ggÄ á
)
ggá à
)
ggà â
;
ggâ ä
returnhh 
NotFoundhh 
(hh  
$"hh  "
{hh" #
	exceptionhh# ,
.hh, -
Messagehh- 4
}hh4 5
"hh5 6
)hh6 7
;hh7 8
}ii 
catchjj 
(jj 
	Exceptionjj 
	exceptionjj &
)jj& '
{kk 
_loggerll 
.ll 
LogErrorll  
(ll  !
HelperServicell! .
.ll. /
LoggerMessagell/ <
(ll< =
$strll= N
,llN O
$strllP s
,lls t
	exceptionllu ~
,ll~ 
QueryId
llÄ á
)
llá à
)
llà â
;
llâ ä
returnmm 
Problemmm 
(mm 
$"mm !
$strmm! S
{mmS T
QueryIdmmT [
}mm[ \
"mm\ ]
)mm] ^
;mm^ _
}nn 
}oo 	
[rr 	
	HttpPatchrr	 
]rr 
publicss 
asyncss 
Taskss 
<ss 
ActionResultss &
>ss& '
MarkQueryAsSolvedss( 9
(ss9 :
intss: =
QueryIdss> E
)ssE F
{tt 	
ifuu 
(uu 
QueryIduu 
<=uu 
$numuu 
)uu 
returnuu $

BadRequestuu% /
(uu/ 0
Messageuu0 7
(uu7 8
$struu8 Y
)uuY Z
)uuZ [
;uu[ \
tryvv 
{ww 
returnxx 
_queryServicexx $
.xx$ %
MarkQueryAsSolvedxx% 6
(xx6 7
QueryIdxx7 >
)xx> ?
?xx@ A
awaitxxB G
TaskxxH L
.xxL M

FromResultxxM W
(xxW X
OkxxX Z
(xxZ [
$"xx[ ]
$str	xx] ù
{
xxù û
QueryId
xxû •
}
xx• ¶
"
xx¶ ß
)
xxß ®
)
xx® ©
:
xx™ ´

BadRequest
xx¨ ∂
(
xx∂ ∑
Message
xx∑ æ
(
xxæ ø
$"
xxø ¡
$str
xx¡ ¸
{
xx¸ ˝
QueryId
xx˝ Ñ
}
xxÑ Ö
"
xxÖ Ü
)
xxÜ á
)
xxá à
;
xxà â
}yy 
catchzz 
(zz !
ItemNotFoundExceptionzz (
	exceptionzz) 2
)zz2 3
{{{ 
_logger|| 
.|| 
LogError||  
(||  !
HelperService||! .
.||. /
LoggerMessage||/ <
(||< =
$str||= N
,||N O
$str||P p
,||p q
	exception||r {
,||{ |
QueryId	||} Ñ
)
||Ñ Ö
)
||Ö Ü
;
||Ü á
return}} 
NotFound}} 
(}}  
$"}}  "
{}}" #
	exception}}# ,
.}}, -
Message}}- 4
}}}4 5
"}}5 6
)}}6 7
;}}7 8
}~~ 
catch 
( 
	Exception 
	exception &
)& '
{
ÄÄ 
_logger
ÅÅ 
.
ÅÅ 
LogError
ÅÅ  
(
ÅÅ  !
HelperService
ÅÅ! .
.
ÅÅ. /
LoggerMessage
ÅÅ/ <
(
ÅÅ< =
$str
ÅÅ= N
,
ÅÅN O
$str
ÅÅP p
,
ÅÅp q
	exception
ÅÅr {
,
ÅÅ{ |
QueryIdÅÅ} Ñ
)ÅÅÑ Ö
)ÅÅÖ Ü
;ÅÅÜ á
return
ÇÇ 
Problem
ÇÇ 
(
ÇÇ 
$"
ÇÇ !
$str
ÇÇ! \
{
ÇÇ\ ]
QueryId
ÇÇ] d
}
ÇÇd e
"
ÇÇe f
)
ÇÇf g
;
ÇÇg h
}
ÉÉ 
}
ÑÑ 	
[
îî 	
HttpGet
îî	 
]
îî 
public
ïï 
async
ïï 
Task
ïï 
<
ïï 
ActionResult
ïï &
>
ïï& '
GetQuery
ïï( 0
(
ïï0 1
int
ïï1 4
QueryId
ïï5 <
)
ïï< =
{
ññ 	
if
óó 
(
óó 
QueryId
óó 
<=
óó 
$num
óó 
)
óó 
return
óó $

BadRequest
óó% /
(
óó/ 0
Message
óó0 7
(
óó7 8
$str
óó8 Y
)
óóY Z
)
óóZ [
;
óó[ \
try
òò 
{
ôô 
var
öö 
Query
öö 
=
öö 
_queryService
öö )
.
öö) *
GetQuery
öö* 2
(
öö2 3
QueryId
öö3 :
)
öö: ;
;
öö; <
return
õõ 
await
õõ 
Task
õõ !
.
õõ! "

FromResult
õõ" ,
(
õõ, -
Ok
õõ- /
(
õõ/ 0
Query
õõ0 5
)
õõ5 6
)
õõ6 7
;
õõ7 8
}
úú 
catch
ùù 
(
ùù #
ItemNotFoundException
ùù (
	exception
ùù) 2
)
ùù2 3
{
ûû 
_logger
üü 
.
üü 
LogError
üü  
(
üü  !
HelperService
üü! .
.
üü. /
LoggerMessage
üü/ <
(
üü< =
$str
üü= N
,
üüN O
$str
üüP g
,
üüg h
	exception
üüi r
,
üür s
QueryId
üüt {
)
üü{ |
)
üü| }
;
üü} ~
return
†† 
Problem
†† 
(
†† 
$"
†† !
{
††! "
	exception
††" +
.
††+ ,
Message
††, 3
}
††3 4
$str
††4 B
{
††B C
QueryId
††C J
}
††J K
"
††K L
)
††L M
;
††M N
}
°° 
catch
¢¢ 
(
¢¢ 
	Exception
¢¢ 
	exception
¢¢ &
)
¢¢& '
{
££ 
_logger
§§ 
.
§§ 
LogError
§§  
(
§§  !
HelperService
§§! .
.
§§. /
LoggerMessage
§§/ <
(
§§< =
$str
§§= N
,
§§N O
$str
§§P g
,
§§g h
	exception
§§i r
,
§§r s
QueryId
§§t {
)
§§{ |
)
§§| }
;
§§} ~
return
•• 

BadRequest
•• !
(
••! "
Message
••" )
(
••) *
$"
••* ,
$str
••, ]
{
••] ^
QueryId
••^ e
}
••e f
"
••f g
)
••g h
)
••h i
;
••i j
}
¶¶ 
}
ßß 	
[
µµ 	
HttpGet
µµ	 
]
µµ 
public
∂∂ 
async
∂∂ 
Task
∂∂ 
<
∂∂ 
ActionResult
∂∂ &
>
∂∂& '
GetAll
∂∂( .
(
∂∂. /
)
∂∂/ 0
{
∑∑ 	
try
∏∏ 
{
ππ 
var
∫∫ 
Queries
∫∫ 
=
∫∫ 
_queryService
∫∫ +
.
∫∫+ ,
GetListOfQueries
∫∫, <
(
∫∫< =
)
∫∫= >
;
∫∫> ?
return
ªª 
await
ªª 
Task
ªª !
.
ªª! "

FromResult
ªª" ,
(
ªª, -
Ok
ªª- /
(
ªª/ 0
Queries
ªª0 7
)
ªª7 8
)
ªª8 9
;
ªª9 :
}
ºº 
catch
ΩΩ 
(
ΩΩ 
	Exception
ΩΩ 
	exception
ΩΩ &
)
ΩΩ& '
{
ææ 
_logger
øø 
.
øø 
LogError
øø  
(
øø  !
HelperService
øø! .
.
øø. /
LoggerMessage
øø/ <
(
øø< =
$str
øø= N
,
øøN O
$str
øøP Z
,
øøZ [
	exception
øø\ e
)
øøe f
)
øøf g
;
øøg h
return
¿¿ 
Problem
¿¿ 
(
¿¿ 
$str
¿¿ L
)
¿¿L M
;
¿¿M N
}
¡¡ 
}
¬¬ 	
[
ŸŸ 	
HttpGet
ŸŸ	 
]
ŸŸ 
public
⁄⁄ 
async
⁄⁄ 
Task
⁄⁄ 
<
⁄⁄ 
ActionResult
⁄⁄ &
>
⁄⁄& '
GetLatestQueries
⁄⁄( 8
(
⁄⁄8 9
int
⁄⁄9 <
Range
⁄⁄= B
=
⁄⁄C D
$num
⁄⁄E F
)
⁄⁄F G
{
€€ 	
try
‹‹ 
{
›› 
var
ﬁﬁ 
Queries
ﬁﬁ 
=
ﬁﬁ 
_queryService
ﬁﬁ +
.
ﬁﬁ+ ,
GetLatestQueries
ﬁﬁ, <
(
ﬁﬁ< =
Range
ﬁﬁ= B
)
ﬁﬁB C
.
ﬁﬁC D
ToList
ﬁﬁD J
(
ﬁﬁJ K
)
ﬁﬁK L
;
ﬁﬁL M
return
ﬂﬂ 
await
ﬂﬂ  
Task
ﬂﬂ! %
.
ﬂﬂ% &

FromResult
ﬂﬂ& 0
(
ﬂﬂ0 1
Ok
ﬂﬂ1 3
(
ﬂﬂ3 4
Queries
ﬂﬂ4 ;
)
ﬂﬂ; <
)
ﬂﬂ< =
;
ﬂﬂ= >
}
‡‡ 
catch
·· 
(
·· 
	Exception
·· 
	exception
·· &
)
··& '
{
‚‚ 
_logger
„„ 
.
„„ 
LogError
„„  
(
„„  !
HelperService
„„! .
.
„„. /
LoggerMessage
„„/ <
(
„„< =
$str
„„= N
,
„„N O
$str
„„P o
,
„„o p
	exception
„„q z
)
„„z {
)
„„{ |
;
„„| }
return
‰‰ 
Problem
‰‰ 
(
‰‰ 
$str
‰‰ L
)
‰‰L M
;
‰‰M N
}
ÂÂ 
}
ÊÊ 	
[
˚˚ 	
HttpGet
˚˚	 
]
˚˚ 
public
¸¸ 
async
¸¸ 
Task
¸¸ 
<
¸¸ 
ActionResult
¸¸ &
>
¸¸& ' 
GetTrendingQueries
¸¸( :
(
¸¸: ;
int
¸¸; >
Range
¸¸? D
=
¸¸E F
$num
¸¸G H
)
¸¸H I
{
˝˝ 	
try
˛˛ 
{
ˇˇ 
List
ÄÄ 
<
ÄÄ 
object
ÄÄ 
>
ÄÄ 
Queries
ÄÄ $
=
ÄÄ% &
_queryService
ÄÄ' 4
.
ÄÄ4 5 
GetTrendingQueries
ÄÄ5 G
(
ÄÄG H
Range
ÄÄH M
)
ÄÄM N
.
ÄÄN O
ToList
ÄÄO U
(
ÄÄU V
)
ÄÄV W
;
ÄÄW X
return
ÇÇ 
await
ÇÇ 
Task
ÇÇ !
.
ÇÇ! "

FromResult
ÇÇ" ,
(
ÇÇ, -
Ok
ÇÇ- /
(
ÇÇ/ 0
Queries
ÇÇ0 7
)
ÇÇ7 8
)
ÇÇ8 9
;
ÇÇ9 :
}
ÑÑ 
catch
ÖÖ 
(
ÖÖ 
	Exception
ÖÖ 
	exception
ÖÖ &
)
ÖÖ& '
{
ÜÜ 
_logger
áá 
.
áá 
LogError
áá  
(
áá  !
HelperService
áá! .
.
áá. /
LoggerMessage
áá/ <
(
áá< =
$str
áá= N
,
ááN O
$str
ááP q
,
ááq r
	exception
áás |
)
áá| }
)
áá} ~
;
áá~ 
return
àà 
Problem
àà 
(
àà 
$str
àà L
)
ààL M
;
ààM N
}
ââ 
}
ää 	
[
çç 	
HttpGet
çç	 
]
çç 
public
éé 
async
éé 
Task
éé 
<
éé 
ActionResult
éé &
>
éé& ' 
GetQueriesByUserId
éé( :
(
éé: ;
)
éé; <
{
èè 	
int
êê 
UserId
êê 
=
êê 
GetCurrentUser
êê '
(
êê' (
)
êê( )
.
êê) *
UserId
êê* 0
;
êê0 1
try
ëë 
{
íí 
var
ìì #
ListOfQueriesByUserId
ìì )
=
ìì* +
_queryService
ìì, 9
.
ìì9 : 
GetQueriesByUserId
ìì: L
(
ììL M
UserId
ììM S
)
ììS T
;
ììT U
return
îî 
await
îî 
Task
îî !
.
îî! "

FromResult
îî" ,
(
îî, -
Ok
îî- /
(
îî/ 0#
ListOfQueriesByUserId
îî0 E
)
îîE F
)
îîF G
;
îîG H
}
ïï 
catch
ññ 
(
ññ 
	Exception
ññ 
	exception
ññ &
)
ññ& '
{
óó 
_logger
òò 
.
òò 
LogError
òò  
(
òò  !
HelperService
òò! .
.
òò. /
LoggerMessage
òò/ <
(
òò< =
$str
òò= N
,
òòN O
$str
òòP p
,
òòp q
	exception
òòr {
,
òò{ |
UserIdòò} É
)òòÉ Ñ
)òòÑ Ö
;òòÖ Ü
return
ôô 
Problem
ôô 
(
ôô 
$"
ôô !
$str
ôô! Z
{
ôôZ [
UserId
ôô[ a
}
ôôa b
"
ôôb c
)
ôôc d
;
ôôd e
}
öö 
}
õõ 	
[
ûû 	
HttpGet
ûû	 
]
ûû 
public
üü 
async
üü 
Task
üü 
<
üü 
ActionResult
üü &
>
üü& '
GetQueriesByTitle
üü( 9
(
üü9 :
string
üü: @
Title
üüA F
)
üüF G
{
†† 	
if
°° 
(
°° 
String
°° 
.
°° 
IsNullOrEmpty
°° $
(
°°$ %
Title
°°% *
)
°°* +
)
°°+ ,
return
°°- 3

BadRequest
°°4 >
(
°°> ?
Message
°°? F
(
°°F G
$str
°°G \
)
°°\ ]
)
°°] ^
;
°°^ _
try
¢¢ 
{
££ 
var
§§ "
ListOfQueriesByTitle
§§ (
=
§§) *
_queryService
§§+ 8
.
§§8 9
GetQueriesByTitle
§§9 J
(
§§J K
Title
§§K P
)
§§P Q
;
§§Q R
return
•• 
await
•• 
Task
•• !
.
••! "

FromResult
••" ,
(
••, -
Ok
••- /
(
••/ 0"
ListOfQueriesByTitle
••0 D
)
••D E
)
••E F
;
••F G
}
¶¶ 
catch
ßß 
(
ßß 
	Exception
ßß 
	exception
ßß &
)
ßß& '
{
®® 
_logger
©© 
.
©© 
LogError
©©  
(
©©  !
HelperService
©©! .
.
©©. /
LoggerMessage
©©/ <
(
©©< =
$str
©©= N
,
©©N O
$str
©©P q
,
©©q r
	exception
©©s |
,
©©| }
Title©©~ É
)©©É Ñ
)©©Ñ Ö
;©©Ö Ü
return
™™ 
Problem
™™ 
(
™™ 
$"
™™ !
$str
™™! Y
{
™™Y Z
Title
™™Z _
}
™™_ `
"
™™` a
)
™™a b
;
™™b c
}
´´ 
}
¨¨ 	
[
¬¬ 	
HttpGet
¬¬	 
]
¬¬ 
public
√√ 
async
√√ 
Task
√√ 
<
√√ 
ActionResult
√√ &
>
√√& '"
GetQueriesByIsSolved
√√( <
(
√√< =
bool
√√= A
IsSolved
√√B J
)
√√J K
{
ƒƒ 	
try
≈≈ 
{
∆∆ 
var
«« %
ListOfQueriesByIsSolved
«« +
=
««, -
_queryService
««. ;
.
««; <"
GetQueriesByIsSolved
««< P
(
««P Q
IsSolved
««Q Y
)
««Y Z
;
««Z [
return
»» 
await
»» 
Task
»» !
.
»»! "

FromResult
»»" ,
(
»», -
Ok
»»- /
(
»»/ 0%
ListOfQueriesByIsSolved
»»0 G
)
»»G H
)
»»H I
;
»»I J
}
…… 
catch
   
(
   
	Exception
   
	exception
   &
)
  & '
{
ÀÀ 
_logger
ÃÃ 
.
ÃÃ 
LogError
ÃÃ  
(
ÃÃ  !
HelperService
ÃÃ! .
.
ÃÃ. /
LoggerMessage
ÃÃ/ <
(
ÃÃ< =
$str
ÃÃ= N
,
ÃÃN O
$str
ÃÃP u
,
ÃÃu v
	exceptionÃÃw Ä
,ÃÃÄ Å
IsSolvedÃÃÇ ä
)ÃÃä ã
)ÃÃã å
;ÃÃå ç
return
ÕÕ 
Problem
ÕÕ 
(
ÕÕ 
$"
ÕÕ !
$str
ÕÕ! \
{
ÕÕ\ ]
IsSolved
ÕÕ] e
}
ÕÕe f
"
ÕÕf g
)
ÕÕg h
;
ÕÕh i
}
ŒŒ 
}
œœ 	
[
ÍÍ 	
HttpPost
ÍÍ	 
]
ÍÍ 
public
ÎÎ 
async
ÎÎ 
Task
ÎÎ 
<
ÎÎ 
ActionResult
ÎÎ &
>
ÎÎ& '
CreateComment
ÎÎ( 5
(
ÎÎ5 6
QueryComment
ÎÎ6 B
comment
ÎÎC J
)
ÎÎJ K
{
ÏÏ 	
if
ÌÌ 
(
ÌÌ 
comment
ÌÌ 
==
ÌÌ 
null
ÌÌ 
)
ÌÌ  
return
ÌÌ! '

BadRequest
ÌÌ( 2
(
ÌÌ2 3
Message
ÌÌ3 :
(
ÌÌ: ;
$str
ÌÌ; X
)
ÌÌX Y
)
ÌÌY Z
;
ÌÌZ [
try
ÓÓ 
{
ÔÔ 
comment
 
.
 
	CreatedBy
 !
=
" #
GetCurrentUser
$ 2
(
2 3
)
3 4
.
4 5
UserId
5 ;
;
; <
return
ÒÒ 
_queryService
ÒÒ $
.
ÒÒ$ %
CreateComment
ÒÒ% 2
(
ÒÒ2 3
comment
ÒÒ3 :
)
ÒÒ: ;
?
ÒÒ< =
await
ÒÒ> C
Task
ÒÒD H
.
ÒÒH I

FromResult
ÒÒI S
(
ÒÒS T
Ok
ÒÒT V
(
ÒÒV W
Message
ÒÒW ^
(
ÒÒ^ _
$strÒÒ_ à
)ÒÒà â
)ÒÒâ ä
)ÒÒä ã
:ÒÒå ç

BadRequestÒÒé ò
(ÒÒò ô
MessageÒÒô †
(ÒÒ† °
$"ÒÒ° £
$strÒÒ£ «
{ÒÒ« »
HelperServiceÒÒ» ’
.ÒÒ’ ÷
PropertyListÒÒ÷ ‚
(ÒÒ‚ „
commentÒÒ„ Í
)ÒÒÍ Î
}ÒÒÎ Ï
"ÒÒÏ Ì
)ÒÒÌ Ó
)ÒÒÓ Ô
;ÒÒÔ 
}
ÚÚ 
catch
ÛÛ 
(
ÛÛ !
ValidationException
ÛÛ &
	exception
ÛÛ' 0
)
ÛÛ0 1
{
ÙÙ 
_logger
ıı 
.
ıı 
LogError
ıı  
(
ıı  !
HelperService
ıı! .
.
ıı. /
LoggerMessage
ıı/ <
(
ıı< =
$str
ıı= N
,
ııN O
$str
ııP v
,
ııv w
	exceptionııx Å
,ııÅ Ç
commentııÉ ä
)ııä ã
)ııã å
;ııå ç
return
ˆˆ 

BadRequest
ˆˆ !
(
ˆˆ! "
Message
ˆˆ" )
(
ˆˆ) *
$"
ˆˆ* ,
{
ˆˆ, -
	exception
ˆˆ- 6
.
ˆˆ6 7
Message
ˆˆ7 >
}
ˆˆ> ?
"
ˆˆ? @
,
ˆˆ@ A
comment
ˆˆB I
)
ˆˆI J
)
ˆˆJ K
;
ˆˆK L
}
˜˜ 
catch
¯¯ 
(
¯¯ 
	Exception
¯¯ 
	exception
¯¯ &
)
¯¯& '
{
˘˘ 
_logger
˙˙ 
.
˙˙ 
LogError
˙˙  
(
˙˙  !
HelperService
˙˙! .
.
˙˙. /
LoggerMessage
˙˙/ <
(
˙˙< =
$str
˙˙= N
,
˙˙N O
$str
˙˙P v
,
˙˙v w
	exception˙˙x Å
,˙˙Å Ç
comment˙˙É ä
)˙˙ä ã
)˙˙ã å
;˙˙å ç
return
˚˚ 
Problem
˚˚ 
(
˚˚ 
$"
˚˚ !
$str
˚˚! E
{
˚˚E F
HelperService
˚˚F S
.
˚˚S T
PropertyList
˚˚T `
(
˚˚` a
comment
˚˚a h
)
˚˚h i
}
˚˚i j
"
˚˚j k
)
˚˚k l
;
˚˚l m
}
¸¸ 
}
˝˝ 	
[
îî 	
HttpGet
îî	 
]
îî 
public
ïï 
async
ïï 
Task
ïï 
<
ïï 
ActionResult
ïï &
>
ïï& '
GetComments
ïï( 3
(
ïï3 4
int
ïï4 7
QueryId
ïï8 ?
)
ïï? @
{
ññ 	
if
óó 
(
óó 
QueryId
óó 
<=
óó 
$num
óó 
)
óó 
return
óó $

BadRequest
óó% /
(
óó/ 0
Message
óó0 7
(
óó7 8
$str
óó8 X
)
óóX Y
)
óóY Z
;
óóZ [
try
òò 
{
ôô 
var
öö 
ListOfComments
öö "
=
öö# $
_queryService
öö% 2
.
öö2 3
GetComments
öö3 >
(
öö> ?
QueryId
öö? F
)
ööF G
;
ööG H
return
õõ 
await
õõ 
Task
õõ !
.
õõ! "

FromResult
õõ" ,
(
õõ, -
Ok
õõ- /
(
õõ/ 0
ListOfComments
õõ0 >
)
õõ> ?
)
õõ? @
;
õõ@ A
}
úú 
catch
ùù 
(
ùù 
	Exception
ùù 
	exception
ùù &
)
ùù& '
{
ûû 
_logger
üü 
.
üü 
LogError
üü  
(
üü  !
HelperService
üü! .
.
üü. /
LoggerMessage
üü/ <
(
üü< =
$str
üü= N
,
üüN O
$str
üüP k
,
üük l
	exception
üüm v
,
üüv w
QueryId
üüx 
)üü Ä
)üüÄ Å
;üüÅ Ç
return
†† 
Problem
†† 
(
†† 
$"
†† !
$str
††! [
{
††[ \
QueryId
††\ c
}
††c d
"
††d e
)
††e f
;
††f g
}
°° 
}
¢¢ 	
[
ºº 	
HttpPost
ºº	 
]
ºº 
public
ΩΩ 
async
ΩΩ 
Task
ΩΩ 
<
ΩΩ 
ActionResult
ΩΩ &
>
ΩΩ& '
AddSpam
ΩΩ( /
(
ΩΩ/ 0
Spam
ΩΩ0 4
spam
ΩΩ5 9
)
ΩΩ9 :
{
ææ 	
if
øø 
(
øø 
spam
øø 
==
øø 
null
øø 
)
øø 
return
øø $

BadRequest
øø% /
(
øø/ 0
Message
øø0 7
(
øø7 8
$str
øø8 T
)
øøT U
)
øøU V
;
øøV W
try
¿¿ 
{
¡¡ 
spam
¬¬ 
.
¬¬ 
UserId
¬¬ 
=
¬¬ 
GetCurrentUser
¬¬ ,
(
¬¬, -
)
¬¬- .
.
¬¬. /
UserId
¬¬/ 5
;
¬¬5 6
return
√√ 
_queryService
√√ $
.
√√$ %
AddSpam
√√% ,
(
√√, -
spam
√√- 1
)
√√1 2
?
√√3 4
await
√√5 :
Task
√√; ?
.
√√? @

FromResult
√√@ J
(
√√J K
Ok
√√K M
(
√√M N
Message
√√N U
(
√√U V
$str
√√V }
)
√√} ~
)
√√~ 
)√√ Ä
:√√Å Ç

BadRequest√√É ç
(√√ç é
Message√√é ï
(√√ï ñ
$str√√ñ ≈
)√√≈ ∆
)√√∆ «
;√√« »
}
ƒƒ 
catch
≈≈ 
(
≈≈ !
ValidationException
≈≈ &
	exception
≈≈' 0
)
≈≈0 1
{
∆∆ 
_logger
«« 
.
«« 
LogError
««  
(
««  !
HelperService
««! .
.
««. /
LoggerMessage
««/ <
(
««< =
$str
««= N
,
««N O
$str
««P f
,
««f g
	exception
««h q
,
««q r
spam
««s w
)
««w x
)
««x y
;
««y z
return
»» 
Problem
»» 
(
»» 
$"
»» !
{
»»! "
	exception
»»" +
.
»»+ ,
Message
»», 3
}
»»3 4
"
»»4 5
)
»»5 6
;
»»6 7
}
…… 
catch
   
(
   
	Exception
   
	exception
   &
)
  & '
{
ÀÀ 
_logger
ÃÃ 
.
ÃÃ 
LogError
ÃÃ  
(
ÃÃ  !
HelperService
ÃÃ! .
.
ÃÃ. /
LoggerMessage
ÃÃ/ <
(
ÃÃ< =
$str
ÃÃ= N
,
ÃÃN O
$str
ÃÃP d
,
ÃÃd e
	exception
ÃÃf o
,
ÃÃo p
spam
ÃÃq u
)
ÃÃu v
)
ÃÃv w
;
ÃÃw x
return
ÕÕ 

BadRequest
ÕÕ !
(
ÕÕ! "
Message
ÕÕ" )
(
ÕÕ) *
$str
ÕÕ* [
,
ÕÕ[ \
spam
ÕÕ] a
)
ÕÕa b
)
ÕÕb c
;
ÕÕc d
}
ŒŒ 
}
œœ 	
[
›› 	
HttpGet
››	 
]
›› 
public
ﬁﬁ 
async
ﬁﬁ 
Task
ﬁﬁ 
<
ﬁﬁ 
ActionResult
ﬁﬁ &
>
ﬁﬁ& '
GetListOfSpams
ﬁﬁ( 6
(
ﬁﬁ6 7
)
ﬁﬁ7 8
{
ﬂﬂ 	
try
‡‡ 
{
·· 
var
‚‚ 
ListOfSpams
‚‚ 
=
‚‚  !
_queryService
‚‚" /
.
‚‚/ 0
GetSpams
‚‚0 8
(
‚‚8 9
$num
‚‚9 :
)
‚‚: ;
;
‚‚; <
return
„„ 
await
„„ 
Task
„„ !
.
„„! "

FromResult
„„" ,
(
„„, -
Ok
„„- /
(
„„/ 0
ListOfSpams
„„0 ;
)
„„; <
)
„„< =
;
„„= >
}
‰‰ 
catch
ÂÂ 
(
ÂÂ 
	Exception
ÂÂ 
	exception
ÂÂ &
)
ÂÂ& '
{
ÊÊ 
_logger
ÁÁ 
.
ÁÁ 
LogError
ÁÁ  
(
ÁÁ  !
HelperService
ÁÁ! .
.
ÁÁ. /
LoggerMessage
ÁÁ/ <
(
ÁÁ< =
$str
ÁÁ= N
,
ÁÁN O
$str
ÁÁP b
,
ÁÁb c
	exception
ÁÁd m
)
ÁÁm n
)
ÁÁn o
;
ÁÁo p
return
ËË 
Problem
ËË 
(
ËË 
$str
ËË L
)
ËËL M
;
ËËM N
}
ÈÈ 
}
ÍÍ 	
[
ÉÉ 	
	HttpPatch
ÉÉ	 
]
ÉÉ 
[
ÉÉ 
	Authorize
ÉÉ 
(
ÉÉ 
Roles
ÉÉ #
=
ÉÉ# $
$str
ÉÉ$ +
)
ÉÉ+ ,
]
ÉÉ, -
public
ÑÑ 
ActionResult
ÑÑ 
UpdateSpamStatus
ÑÑ ,
(
ÑÑ, -
int
ÑÑ- 0
QueryId
ÑÑ1 8
,
ÑÑ8 9
int
ÑÑ: =
VerifyStatusID
ÑÑ> L
)
ÑÑL M
{
ÖÖ 	
if
ÜÜ 
(
ÜÜ 
QueryId
ÜÜ 
<=
ÜÜ 
$num
ÜÜ 
)
ÜÜ 
return
ÜÜ $

BadRequest
ÜÜ% /
(
ÜÜ/ 0
Message
ÜÜ0 7
(
ÜÜ7 8
$"
ÜÜ8 :
$str
ÜÜ: k
{
ÜÜk l
QueryId
ÜÜl s
}
ÜÜs t
"
ÜÜt u
)
ÜÜu v
)
ÜÜv w
;
ÜÜw x
if
áá 
(
áá 
VerifyStatusID
áá 
<=
áá !
$num
áá" #
||
áá$ &
VerifyStatusID
áá' 5
>
áá6 7
$num
áá8 9
)
áá9 :
return
áá; A

BadRequest
ááB L
(
ááL M
Message
ááM T
(
ááT U
$"
ááU W
$strááW £
{áá£ §
VerifyStatusIDáá§ ≤
}áá≤ ≥
"áá≥ ¥
)áá¥ µ
)ááµ ∂
;áá∂ ∑
try
àà 
{
ââ 
return
ää 
_queryService
ää $
.
ää$ %
ChangeSpamStatus
ää% 5
(
ää5 6
QueryId
ää6 =
,
ää= >
VerifyStatusID
ää? M
,
ääM N
GetCurrentUser
ääN \
(
ää\ ]
)
ää] ^
.
ää^ _
UserId
ää_ e
)
ääe f
?
ääg h
Ok
ääi k
(
ääk l
Message
ääl s
(
ääs t
$sträät ä
)äää ã
)ääã å
:ääç é

BadRequestääè ô
(ääô ö
Messageääö °
(ää° ¢
$"ää¢ §
$strää§ ›
{ää› ﬁ
QueryIdääﬁ Â
}ääÂ Ê
$strääÊ ˙
{ää˙ ˚
VerifyStatusIDää˚ â
}ääâ ä
"äää ã
)ääã å
)ääå ç
;ääç é
}
ãã 
catch
åå 
(
åå 
	Exception
åå 
	exception
åå &
)
åå& '
{
çç 
_logger
éé 
.
éé 
LogError
éé  
(
éé  !
HelperService
éé! .
.
éé. /
LoggerMessage
éé/ <
(
éé< =
$"
éé= ?
$str
éé? K
"
ééK L
,
ééL M
$strééN Å
,ééÅ Ç
	exceptionééÉ å
,ééå ç
QueryIdééé ï
,ééï ñ
VerifyStatusIDééó •
)éé• ¶
)éé¶ ß
;ééß ®
return
èè 
Problem
èè 
(
èè 
$"
èè !
$str
èè! Z
{
èèZ [
QueryId
èè[ b
}
èèb c
$str
èèc w
{
èèw x
VerifyStatusIDèèx Ü
}èèÜ á
"èèá à
)èèà â
;èèâ ä
}
êê 
}
ëë 	
}
íí 
}ìì Æ
NC:\Users\pooja.sakthivel\Desktop\AspireOverflow\Controllers\TokenController.cs
	namespace 	
AspireOverflow
 
. 
Controllers $
{ 
[ 
ApiController 
] 
[		 
Route		 

(		
 
$str		 "
)		" #
]		# $
public

 

class

 
TokenController

  
:

! "
BaseController

# 1
{ 
private 
readonly 
ITokenService &
_tokenService' 4
;4 5
private 
readonly 
ILogger  
<  !
TokenController! 0
>0 1
_logger2 9
;9 :
public 
TokenController 
( 
ITokenService ,
tokenService- 9
,9 :
ILogger; B
<B C
TokenControllerC R
>R S
loggerT Z
)Z [
{ 	
_tokenService 
= 
tokenService (
;( )
_logger 
= 
logger 
; 
} 	
['' 	
HttpPost''	 
]'' 
public(( 
IActionResult(( 
	AuthToken(( &
(((& '
Login((' ,
Crendentials((- 9
)((9 :
{)) 	
if)) 
()) 
Crendentials)) 
==)) 
null))  $
||))% '
!))( )

Validation))) 3
.))3 4#
ValidateUserCredentials))4 K
())K L
Crendentials))L X
.))X Y
Email))Y ^
!))^ _
,))_ `
Crendentials))a m
.))m n
Password))n v
!))v w
)))w x
)))x y
return	))z Ä

BadRequest
))Å ã
(
))ã å
Message
))å ì
(
))ì î
$str
))î ∂
)
))∂ ∑
)
))∑ ∏
;
))∏ π
try**
 
{++ 
var,, 
Result,, 
=,, 
_tokenService,, *
.,,* +
GenerateToken,,+ 8
(,,8 9
Crendentials,,9 E
),,E F
;,,F G
return-- 
Ok-- 
(-- 
Result--  
)--  !
;--! "
}.. 
catch// 
(// 
ValidationException// &
	exception//' 0
)//0 1
{00 
_logger11 
.11 
LogError11  
(11  !
HelperService11! .
.11. /
LoggerMessage11/ <
(11< =
$str11= N
,11N O
$str11P z
,11z {
	exception	11| Ö
,
11Ö Ü
Crendentials
11á ì
.
11ì î
Email
11î ô
!
11ô ö
)
11ö õ
)
11õ ú
;
11ú ù
return22 

BadRequest22 !
(22! "
Message22" )
(22) *
	exception22* 3
.223 4
Message224 ;
)22; <
)22< =
;22= >
}33 
catch44 
(44 
	Exception44 
	exception44 &
)44& '
{55 
_logger66 
.66 
LogError66  
(66  !
HelperService66! .
.66. /
LoggerMessage66/ <
(66< =
$str66= N
,66N O
$str66P z
,66z {
	exception	66| Ö
,
66Ö Ü
Crendentials
66á ì
.
66ì î
Email
66î ô
!
66ô ö
)
66ö õ
)
66õ ú
;
66ú ù
return77 

BadRequest77 !
(77! "
Message77" )
(77) *
$str77* [
)77[ \
)77\ ]
;77] ^
}88 
}99 	
}:: 
};; “—
MC:\Users\pooja.sakthivel\Desktop\AspireOverflow\Controllers\UserController.cs
	namespace		 	
AspireOverflow		
 
.		 
Controllers		 $
;		$ %
[

 
ApiController

 
]

 
[

 
	Authorize

 
]

 
[ 
Route 
( 
$str 
) 
]  
public 
class 
UserController 
: 
BaseController ,
{ 
private 
readonly 
ILogger 
< 
UserController +
>+ ,
_logger- 4
;4 5
private 
readonly 
IUserService !
_UserService" .
;. /
public 

UserController 
( 
ILogger !
<! "
UserController" 0
>0 1
logger2 8
,8 9
IUserService: F
UserServiceG R
)R S
{ 
_logger 
= 
logger 
; 
_UserService 
= 
UserService "
;" #
} 
[00 
HttpPost00 
]00 
[00 
AllowAnonymous00 
]00 
public11 

async11 
Task11 
<11 
ActionResult11 "
>11" #

CreateUser11$ .
(11. /
User11/ 3
User114 8
)118 9
{22 
if33 

(33 
User33 
==33 
null33 
)33 
return33  

BadRequest33! +
(33+ ,
Message33, 3
(333 4
$str334 Q
)33Q R
)33R S
;33S T
try44 
{55 	
return77 
_UserService77 
.77  

CreateUser77  *
(77* +
User77+ /
)77/ 0
?771 2
await773 8
Task779 =
.77= >

FromResult77> H
(77H I
Ok77I K
(77K L
Message77L S
(77S T
$str77T j
)77j k
)77k l
)77l m
:77n o

BadRequest77p z
(77z {
Message	77{ Ç
(
77Ç É
$"
77É Ö
$str
77Ö ¶
{
77¶ ß
HelperService
77ß ¥
.
77¥ µ
PropertyList
77µ ¡
(
77¡ ¬
User
77¬ ∆
)
77∆ «
}
77« »
"
77» …
)
77…  
)
77  À
;
77À Ã
}88 	
catch99 
(99 
ValidationException99 "
	exception99# ,
)99, -
{:: 	
_logger<< 
.<< 
LogError<< 
(<< 
HelperService<< *
.<<* +
LoggerMessage<<+ 8
(<<8 9
$str<<9 I
,<<I J
$str<<K c
,<<c d
	exception<<e n
,<<n o
User<<p t
)<<t u
)<<u v
;<<v w
return== 

BadRequest== 
(== 
Message== %
(==% &
$"==& (
{==( )
	exception==) 2
.==2 3
Message==3 :
}==: ;
"==; <
,==< =
User=== A
)==A B
)==B C
;==C D
}>> 	
catch?? 
(?? 
	Exception?? 
	exception?? "
)??" #
{@@ 	
_loggerAA 
.AA 
LogErrorAA 
(AA 
HelperServiceAA *
.AA* +
LoggerMessageAA+ 8
(AA8 9
$strAA9 I
,AAI J
$strAAK c
,AAc d
	exceptionAAe n
,AAn o
UserAAp t
)AAt u
)AAu v
;AAv w
returnBB 
ProblemBB 
(BB 
$"BB 
$strBB >
{BB> ?
HelperServiceBB? L
.BBL M
PropertyListBBM Y
(BBY Z
UserBBZ ^
)BB^ _
}BB_ `
"BB` a
)BBa b
;BBb c
}CC 	
}DD 
[\\ 
	HttpPatch\\ 
]\\ 
[\\ 
	Authorize\\ 
(\\ 
Roles\\ 
=\\  !
$str\\! (
)\\( )
]\\) *
public]] 

async]] 
Task]] 
<]] 
ActionResult]] "
>]]" #"
ChangeUserVerifyStatus]]$ :
(]]: ;
int]]; >
UserId]]? E
,]]E F
bool]]G K

IsVerified]]L V
)]]V W
{^^ 
if__ 

(__ 
UserId__ 
<=__ 
$num__ 
)__ 
return__ 

BadRequest__  *
(__* +
Message__+ 2
(__2 3
$str__3 S
)__S T
)__T U
;__U V
try`` 
{aa 	
varbb 
_currentUserbb 
=bb 
GetCurrentUserbb +
(bb+ ,
)bb, -
;bb- .
ifcc 
(cc 

IsVerifiedcc 
)cc 
returncc "
_UserServicecc# /
.cc/ 0(
ChangeUserVerificationStatuscc0 L
(ccL M
UserIdccM S
,ccS T
$numccU V
,ccV W
_currentUserccW c
.ccc d
UserIdccd j
)ccj k
?ccl m
awaitccn s
Taskcct x
.ccx y

FromResult	ccy É
(
ccÉ Ñ
Ok
ccÑ Ü
(
ccÜ á
Message
ccá é
(
ccé è
$"
ccè ë
$str
ccë —
{
cc— “
UserId
cc“ ÿ
}
ccÿ Ÿ
"
ccŸ ⁄
)
cc⁄ €
)
cc€ ‹
)
cc‹ ›
:
ccﬁ ﬂ

BadRequest
cc‡ Í
(
ccÍ Î
Message
ccÎ Ú
(
ccÚ Û
$"
ccÛ ı
$str
ccı ∞
{
cc∞ ±
UserId
cc± ∑
}
cc∑ ∏
"
cc∏ π
)
ccπ ∫
)
cc∫ ª
;
ccª º
elsedd 
returndd 
_UserServicedd $
.dd$ %(
ChangeUserVerificationStatusdd% A
(ddA B
UserIdddB H
,ddH I
$numddJ K
,ddK L
_currentUserddL X
.ddX Y
UserIdddY _
)dd_ `
?dda b
awaitddc h
Taskddi m
.ddm n

FromResultddn x
(ddx y
Okddy {
(dd{ |
Message	dd| É
(
ddÉ Ñ
$"
ddÑ Ü
$str
ddÜ »
{
dd» …
UserId
dd… œ
}
ddœ –
"
dd– —
)
dd— “
)
dd“ ”
)
dd” ‘
:
dd’ ÷

BadRequest
dd◊ ·
(
dd· ‚
Message
dd‚ È
(
ddÈ Í
$"
ddÍ Ï
$str
ddÏ ©
{
dd© ™
UserId
dd™ ∞
}
dd∞ ±
"
dd± ≤
)
dd≤ ≥
)
dd≥ ¥
;
dd¥ µ
}ee 	
catchff 
(ff !
ItemNotFoundExceptionff $
	exceptionff% .
)ff. /
{gg 	
_loggerhh 
.hh 
LogErrorhh 
(hh 
HelperServicehh *
.hh* +
LoggerMessagehh+ 8
(hh8 9
$strhh9 I
,hhI J
$str	hhK Å
,
hhÅ Ç
	exception
hhÉ å
,
hhå ç
UserId
hhé î
)
hhî ï
)
hhï ñ
;
hhñ ó
returnii 

BadRequestii 
(ii 
$"ii  
{ii  !
	exceptionii! *
.ii* +
Messageii+ 2
}ii2 3
"ii3 4
)ii4 5
;ii5 6
}jj 	
catchkk 
(kk 
	Exceptionkk 
	exceptionkk "
)kk" #
{ll 	
_loggermm 
.mm 
LogErrormm 
(mm 
HelperServicemm *
.mm* +
LoggerMessagemm+ 8
(mm8 9
$strmm9 I
,mmI J
$str	mmK Å
,
mmÅ Ç
	exception
mmÉ å
,
mmå ç
UserId
mmé î
)
mmî ï
)
mmï ñ
;
mmñ ó
returnnn 
Problemnn 
(nn 
$"nn 
$strnn `
{nn` a
UserIdnna g
}nng h
"nnh i
)nni j
;nnj k
}oo 	
}pp 
[
àà 
	HttpPatch
àà 
]
àà 
[
àà 
	Authorize
àà 
(
àà 
Roles
àà !
=
àà" #
$str
àà# *
)
àà* +
]
àà+ ,
public
ââ 

async
ââ 
Task
ââ 
<
ââ 
ActionResult
ââ "
>
ââ" #$
UpdateUserByIsReviewer
ââ$ :
(
ââ: ;
int
ââ; >
UserId
ââ? E
,
ââE F
bool
ââG K

IsReviewer
ââL V
)
ââV W
{
ää 
if
ãã 

(
ãã 
UserId
ãã 
<=
ãã 
$num
ãã 
)
ãã 
return
ãã 

BadRequest
ãã  *
(
ãã* +
Message
ãã+ 2
(
ãã2 3
$str
ãã3 S
)
ããS T
)
ããT U
;
ããU V
try
åå 
{
çç 	
return
éé 
_UserService
éé 
.
éé $
UpdateUserByIsReviewer
éé 5
(
éé5 6
UserId
éé6 <
,
éé< =

IsReviewer
éé> H
,
ééH I
GetCurrentUser
ééI W
(
ééW X
)
ééX Y
.
ééY Z
UserId
ééZ `
)
éé` a
?
ééb c
await
ééd i
Task
ééj n
.
één o

FromResult
ééo y
(
ééy z
Ok
éé{ }
(
éé} ~
Messageéé~ Ö
(ééÖ Ü
$"ééÜ à
$strééà æ
{ééæ ø
UserIdééø ≈
}éé≈ ∆
"éé∆ «
)éé« »
)éé» …
)éé…  
:ééÀ Ã

BadRequestééÕ ◊
(éé◊ ÿ
Messageééÿ ﬂ
(ééﬂ ‡
$"éé‡ ‚
$stréé‚ °
{éé° ¢
UserIdéé¢ ®
}éé® ©
"éé© ™
)éé™ ´
)éé´ ¨
;éé¨ ≠
}
èè 	
catch
êê 
(
êê #
ItemNotFoundException
êê $
	exception
êê% .
)
êê. /
{
ëë 	
_logger
íí 
.
íí 
LogError
íí 
(
íí 
HelperService
íí *
.
íí* +
LoggerMessage
íí+ 8
(
íí8 9
$str
íí9 I
,
ííI J
$strííK Ç
,ííÇ É
	exceptionííÑ ç
,ííç é
UserIdííè ï
)ííï ñ
)ííñ ó
;ííó ò
return
ìì 
NotFound
ìì 
(
ìì 
$"
ìì 
{
ìì 
	exception
ìì (
.
ìì( )
Message
ìì) 0
}
ìì0 1
"
ìì1 2
)
ìì2 3
;
ìì3 4
}
îî 	
catch
ïï 
(
ïï 
	Exception
ïï 
	exception
ïï "
)
ïï" #
{
ññ 	
_logger
óó 
.
óó 
LogError
óó 
(
óó 
HelperService
óó *
.
óó* +
LoggerMessage
óó+ 8
(
óó8 9
$str
óó9 I
,
óóI J
$stróóK Ä
,óóÄ Å
	exceptionóóÇ ã
,óóã å
UserIdóóç ì
)óóì î
)óóî ï
;óóï ñ
return
òò 
Problem
òò 
(
òò 
$"
òò 
$str
òò ]
{
òò] ^
UserId
òò^ d
}
òòd e
"
òòe f
)
òòf g
;
òòg h
}
ôô 	
}
öö 
[
≤≤ 

HttpDelete
≤≤ 
]
≤≤ 
[
≤≤ 
	Authorize
≤≤ 
(
≤≤ 
Roles
≤≤ !
=
≤≤" #
$str
≤≤# *
)
≤≤* +
]
≤≤+ ,
public
≥≥ 

async
≥≥ 
Task
≥≥ 
<
≥≥ 
ActionResult
≥≥ "
>
≥≥" #

RemoveUser
≥≥$ .
(
≥≥. /
int
≥≥/ 2
UserId
≥≥3 9
)
≥≥9 :
{
¥¥ 
if
µµ 

(
µµ 
UserId
µµ 
<=
µµ 
$num
µµ 
)
µµ 
return
µµ 

BadRequest
µµ  *
(
µµ* +
Message
µµ+ 2
(
µµ2 3
$str
µµ3 S
)
µµS T
)
µµT U
;
µµU V
try
∂∂ 
{
∑∑ 	
return
∏∏ 
_UserService
∏∏ 
.
∏∏  

RemoveUser
∏∏  *
(
∏∏* +
UserId
∏∏+ 1
)
∏∏1 2
?
∏∏3 4
await
∏∏5 :
Task
∏∏; ?
.
∏∏? @

FromResult
∏∏@ J
(
∏∏J K
Ok
∏∏K M
(
∏∏M N
Message
∏∏N U
(
∏∏U V
$str∏∏V Ö
)∏∏Ö Ü
)∏∏Ü á
)∏∏á à
:∏∏â ä

BadRequest∏∏ã ï
(∏∏ï ñ
Message∏∏ñ ù
(∏∏ù û
$"∏∏û †
$str∏∏† «
{∏∏« »
UserId∏∏» Œ
}∏∏Œ œ
"∏∏œ –
)∏∏– —
)∏∏— “
;∏∏“ ”
}
ππ 	
catch
∫∫ 
(
∫∫ #
ItemNotFoundException
∫∫ $
	exception
∫∫% .
)
∫∫. /
{
ªª 	
_logger
ºº 
.
ºº 
LogError
ºº 
(
ºº 
HelperService
ºº *
.
ºº* +
LoggerMessage
ºº+ 8
(
ºº8 9
$str
ºº9 I
,
ººI J
$str
ººK c
,
ººc d
	exception
ººe n
,
ººn o
UserId
ººp v
)
ººv w
)
ººw x
;
ººx y
return
ΩΩ 

BadRequest
ΩΩ 
(
ΩΩ 
Message
ΩΩ %
(
ΩΩ% &
$"
ΩΩ& (
{
ΩΩ( )
	exception
ΩΩ) 2
.
ΩΩ2 3
Message
ΩΩ3 :
}
ΩΩ: ;
"
ΩΩ; <
)
ΩΩ< =
)
ΩΩ= >
;
ΩΩ> ?
}
ææ 	
catch
øø 
(
øø 
	Exception
øø 
	exception
øø "
)
øø" #
{
¿¿ 	
_logger
¡¡ 
.
¡¡ 
LogError
¡¡ 
(
¡¡ 
HelperService
¡¡ *
.
¡¡* +
LoggerMessage
¡¡+ 8
(
¡¡8 9
$str
¡¡9 I
,
¡¡I J
$str
¡¡K c
,
¡¡c d
	exception
¡¡e n
,
¡¡n o
UserId
¡¡p v
)
¡¡v w
)
¡¡w x
;
¡¡x y
return
¬¬ 
Problem
¬¬ 
(
¬¬ 
$"
¬¬ 
$str
¬¬ M
{
¬¬M N
UserId
¬¬N T
}
¬¬T U
"
¬¬U V
)
¬¬V W
;
¬¬W X
}
√√ 	
}
ƒƒ 
[
”” 
HttpGet
”” 
]
”” 
public
‘‘ 

async
‘‘ 
Task
‘‘ 
<
‘‘ 
ActionResult
‘‘ "
>
‘‘" #
GetUserById
‘‘$ /
(
‘‘/ 0
int
‘‘0 3
UserId
‘‘4 :
)
‘‘: ;
{
’’ 
try
◊◊ 
{
ÿÿ 	
return
ŸŸ 
await
ŸŸ 
Task
ŸŸ 
.
ŸŸ 

FromResult
ŸŸ (
(
ŸŸ( )
Ok
ŸŸ) +
(
ŸŸ+ ,
_UserService
ŸŸ- 9
.
ŸŸ9 :
GetUserByID
ŸŸ: E
(
ŸŸE F
UserId
ŸŸF L
)
ŸŸL M
)
ŸŸM N
)
ŸŸN O
;
ŸŸO P
}
⁄⁄ 	
catch
€€ 
(
€€ 
	Exception
€€ 
	exception
€€ "
)
€€" #
{
‹‹ 	
_logger
›› 
.
›› 
LogError
›› 
(
›› 
HelperService
›› *
.
››* +
LoggerMessage
››+ 8
(
››8 9
$str
››9 I
,
››I J
$str
››K d
,
››d e
	exception
››f o
,
››o p
UserId
››q w
)
››w x
)
››x y
;
››y z
return
ﬁﬁ 
Problem
ﬁﬁ 
(
ﬁﬁ 
$"
ﬁﬁ 
$str
ﬁﬁ L
{
ﬁﬁL M
UserId
ﬁﬁM S
}
ﬁﬁS T
"
ﬁﬁT U
)
ﬁﬁU V
;
ﬁﬁV W
}
ﬂﬂ 	
}
‡‡ 
[
ÓÓ 
HttpGet
ÓÓ 
]
ÓÓ 
public
ÔÔ 

async
ÔÔ 
Task
ÔÔ 
<
ÔÔ 
ActionResult
ÔÔ "
>
ÔÔ" #'
GetCurrentApplicationUser
ÔÔ$ =
(
ÔÔ= >
)
ÔÔ> ?
{
 
int
ÒÒ 	
UserId
ÒÒ
 
=
ÒÒ 
GetCurrentUser
ÒÒ 
(
ÒÒ  
)
ÒÒ  !
.
ÒÒ! "
UserId
ÒÒ" (
;
ÒÒ( )
try
ÚÚ 
{
ÛÛ 	
return
ÙÙ 
await
ÙÙ 
Task
ÙÙ 
.
ÙÙ 

FromResult
ÙÙ (
(
ÙÙ( )
Ok
ÙÙ) +
(
ÙÙ+ ,
_UserService
ÙÙ- 9
.
ÙÙ9 :
GetUserByID
ÙÙ: E
(
ÙÙE F
UserId
ÙÙF L
)
ÙÙL M
)
ÙÙM N
)
ÙÙN O
;
ÙÙO P
}
ıı 	
catch
ˆˆ 
(
ˆˆ 
	Exception
ˆˆ 
	exception
ˆˆ "
)
ˆˆ" #
{
˜˜ 	
_logger
¯¯ 
.
¯¯ 
LogError
¯¯ 
(
¯¯ 
HelperService
¯¯ *
.
¯¯* +
LoggerMessage
¯¯+ 8
(
¯¯8 9
$str
¯¯9 I
,
¯¯I J
$str
¯¯K h
,
¯¯h i
	exception
¯¯j s
)
¯¯s t
)
¯¯t u
;
¯¯u v
return
˘˘ 
Problem
˘˘ 
(
˘˘ 
$"
˘˘ 
$str
˘˘ >
"
˘˘> ?
)
˘˘? @
;
˘˘@ A
}
˙˙ 	
}
˚˚ 
[
ìì 
HttpGet
ìì 
]
ìì 
public
îî 

async
îî 
Task
îî 
<
îî 
ActionResult
îî "
>
îî" #&
GetUsersByVerifyStatusId
îî$ <
(
îî< =
int
îî= @
VerifyStatusID
îîA O
)
îîO P
{
ïï 
if
ññ 

(
ññ 
VerifyStatusID
ññ 
<=
ññ 
$num
ññ 
||
ññ  "
VerifyStatusID
ññ# 1
>
ññ2 3
$num
ññ4 5
)
ññ5 6
return
ññ7 =

BadRequest
ññ> H
(
ññH I
Message
ññI P
(
ññP Q
$"
ññQ S
$strññS ö
{ññö õ
VerifyStatusIDññõ ©
}ññ© ™
"ññ™ ´
)ññ´ ¨
)ññ¨ ≠
;ññ≠ Æ
try
óó 
{
òò 	
var
ôô 
ListOfUsers
ôô 
=
ôô 
_UserService
ôô *
.
ôô* +$
GetUsersByVerifyStatus
ôô+ A
(
ôôA B
VerifyStatusID
ôôB P
)
ôôP Q
;
ôôQ R
return
öö 
await
öö 
Task
öö 
.
öö 

FromResult
öö (
(
öö( )
Ok
öö) +
(
öö+ ,
ListOfUsers
öö, 7
)
öö7 8
)
öö8 9
;
öö9 :
}
õõ 	
catch
úú 
(
úú 
	Exception
úú 
	exception
úú "
)
úú" #
{
ùù 	
_logger
ûû 
.
ûû 
LogError
ûû 
(
ûû 
HelperService
ûû *
.
ûû* +
LoggerMessage
ûû+ 8
(
ûû8 9
$str
ûû9 I
,
ûûI J
$str
ûûK y
,
ûûy z
	exceptionûû{ Ñ
)ûûÑ Ö
)ûûÖ Ü
;ûûÜ á
return
üü 
Problem
üü 
(
üü 
$"
üü 
$str
üü ]
{
üü] ^
VerifyStatusID
üü^ l
}
üül m
"
üüm n
)
üün o
;
üüo p
}
†† 	
}
°° 
[
ππ 
HttpGet
ππ 
]
ππ 
public
∫∫ 

async
∫∫ 
Task
∫∫ 
<
∫∫ 
ActionResult
∫∫ "
>
∫∫" #"
GetUsersByUserRoleId
∫∫$ 8
(
∫∫8 9
int
∫∫9 <
RoleId
∫∫= C
)
∫∫C D
{
ªª 
if
ºº 

(
ºº 
RoleId
ºº 
<=
ºº 
$num
ºº 
||
ºº 
RoleId
ºº !
>
ºº" #
$num
ºº$ %
)
ºº% &
return
ºº' -

BadRequest
ºº. 8
(
ºº8 9
Message
ºº9 @
(
ºº@ A
$"
ººA C
$str
ººC z
{
ººz {
RoleIdºº{ Å
}ººÅ Ç
"ººÇ É
)ººÉ Ñ
)ººÑ Ö
;ººÖ Ü
try
ΩΩ 
{
ææ 	
var
øø 
ListOfUsers
øø 
=
øø 
_UserService
øø *
.
øø* +"
GetUsersByUserRoleID
øø+ ?
(
øø? @
RoleId
øø@ F
)
øøF G
;
øøG H
return
¿¿ 
await
¿¿ 
Task
¿¿ 
.
¿¿ 

FromResult
¿¿ (
(
¿¿( )
Ok
¿¿) +
(
¿¿+ ,
ListOfUsers
¿¿, 7
)
¿¿7 8
)
¿¿8 9
;
¿¿9 :
}
¡¡ 	
catch
¬¬ 
(
¬¬ 
	Exception
¬¬ 
	exception
¬¬ "
)
¬¬" #
{
√√ 	
_logger
ƒƒ 
.
ƒƒ 
LogError
ƒƒ 
(
ƒƒ 
HelperService
ƒƒ *
.
ƒƒ* +
LoggerMessage
ƒƒ+ 8
(
ƒƒ8 9
$str
ƒƒ9 I
,
ƒƒI J
$str
ƒƒK m
,
ƒƒm n
	exception
ƒƒo x
)
ƒƒx y
)
ƒƒy z
;
ƒƒz {
return
≈≈ 
Problem
≈≈ 
(
≈≈ 
$"
≈≈ 
$str
≈≈ U
{
≈≈U V
RoleId
≈≈V \
}
≈≈\ ]
"
≈≈] ^
)
≈≈^ _
;
≈≈_ `
}
∆∆ 	
}
«« 
[
ﬂﬂ 
HttpGet
ﬂﬂ 
]
ﬂﬂ 
public
‡‡ 

async
‡‡ 
Task
‡‡ 
<
‡‡ 
ActionResult
‡‡ "
>
‡‡" #"
GetUsersByIsReviewer
‡‡$ 8
(
‡‡8 9
bool
‡‡9 =

IsReviewer
‡‡> H
)
‡‡H I
{
·· 
try
‚‚ 
{
„„ 	
var
‰‰ 
ListOfUsers
‰‰ 
=
‰‰ 
_UserService
‰‰ *
.
‰‰* +"
GetUsersByIsReviewer
‰‰+ ?
(
‰‰? @

IsReviewer
‰‰@ J
)
‰‰J K
;
‰‰K L
return
ÂÂ 
await
ÂÂ 
Task
ÂÂ 
.
ÂÂ 

FromResult
ÂÂ (
(
ÂÂ( )
Ok
ÂÂ) +
(
ÂÂ+ ,
ListOfUsers
ÂÂ, 7
)
ÂÂ7 8
)
ÂÂ8 9
;
ÂÂ9 :
}
ÊÊ 	
catch
ÁÁ 
(
ÁÁ 
	Exception
ÁÁ 
	exception
ÁÁ "
)
ÁÁ" #
{
ËË 	
_logger
ÈÈ 
.
ÈÈ 
LogError
ÈÈ 
(
ÈÈ 
HelperService
ÈÈ *
.
ÈÈ* +
LoggerMessage
ÈÈ+ 8
(
ÈÈ8 9
$str
ÈÈ9 I
,
ÈÈI J
$str
ÈÈK s
,
ÈÈs t
	exception
ÈÈu ~
)
ÈÈ~ 
)ÈÈ Ä
;ÈÈÄ Å
return
ÍÍ 
Problem
ÍÍ 
(
ÍÍ 
$"
ÍÍ 
$str
ÍÍ Y
{
ÍÍY Z

IsReviewer
ÍÍZ d
}
ÍÍd e
"
ÍÍe f
)
ÍÍf g
;
ÍÍg h
}
ÎÎ 	
}
ÏÏ 
[
ÔÔ 
HttpGet
ÔÔ 
]
ÔÔ 
[
ÔÔ 
AllowAnonymous
ÔÔ 
]
ÔÔ 
public
 

async
 
Task
 
<
 
IActionResult
 #
>
# $

GetGenders
% /
(
/ 0
)
0 1
{
ÒÒ 
try
ÚÚ 
{
ÛÛ 	
return
ÙÙ 
await
ÙÙ 
Task
ÙÙ 
.
ÙÙ 

FromResult
ÙÙ (
(
ÙÙ( )
Ok
ÙÙ) +
(
ÙÙ+ ,
_UserService
ÙÙ, 8
.
ÙÙ8 9

GetGenders
ÙÙ9 C
(
ÙÙC D
)
ÙÙD E
)
ÙÙE F
)
ÙÙF G
;
ÙÙG H
}
ıı 	
catch
ˆˆ 
(
ˆˆ 
	Exception
ˆˆ 
	exception
ˆˆ "
)
ˆˆ" #
{
˜˜ 	
_logger
¯¯ 
.
¯¯ 
LogError
¯¯ 
(
¯¯ 
HelperService
¯¯ *
.
¯¯* +
LoggerMessage
¯¯+ 8
(
¯¯8 9
$str
¯¯9 I
,
¯¯I J
$str
¯¯K Z
,
¯¯Z [
	exception
¯¯\ e
)
¯¯e f
)
¯¯f g
;
¯¯g h
return
˘˘ 
Problem
˘˘ 
(
˘˘ 
$str
˘˘ @
)
˘˘@ A
;
˘˘A B
}
˙˙ 	
}
˚˚ 
[
˛˛ 
HttpGet
˛˛ 
]
˛˛ 
[
˛˛ 
AllowAnonymous
˛˛ 
]
˛˛ 
public
ˇˇ 

async
ˇˇ 
Task
ˇˇ 
<
ˇˇ 
IActionResult
ˇˇ #
>
ˇˇ# $
GetDesignations
ˇˇ% 4
(
ˇˇ4 5
)
ˇˇ5 6
{
ÄÄ 
try
ÅÅ 
{
ÇÇ 	
return
ÉÉ 
await
ÉÉ 
Task
ÉÉ 
.
ÉÉ 

FromResult
ÉÉ (
(
ÉÉ( )
Ok
ÉÉ) +
(
ÉÉ+ ,
_UserService
ÉÉ, 8
.
ÉÉ8 9
GetDesignations
ÉÉ9 H
(
ÉÉH I
)
ÉÉI J
)
ÉÉJ K
)
ÉÉK L
;
ÉÉL M
}
ÑÑ 	
catch
ÖÖ 
(
ÖÖ 
	Exception
ÖÖ 
	exception
ÖÖ "
)
ÖÖ" #
{
ÜÜ 	
_logger
áá 
.
áá 
LogError
áá 
(
áá 
HelperService
áá *
.
áá* +
LoggerMessage
áá+ 8
(
áá8 9
$str
áá9 I
,
ááI J
$str
ááK _
,
áá_ `
	exception
ááa j
)
ááj k
)
áák l
;
áál m
return
àà 
Problem
àà 
(
àà 
$str
àà >
)
àà> ?
;
àà? @
}
ââ 	
}
ää 
[
ôô 
HttpGet
ôô 
]
ôô 
[
ôô 
AllowAnonymous
ôô 
]
ôô 
public
öö 

async
öö 
Task
öö 
<
öö 
IActionResult
öö #
>
öö# $
GetDepartments
öö% 3
(
öö3 4
)
öö4 5
{
õõ 
try
úú 
{
ùù 	
return
ûû 
await
ûû 
Task
ûû 
.
ûû 

FromResult
ûû (
(
ûû( )
Ok
ûû) +
(
ûû+ ,
_UserService
ûû, 8
.
ûû8 9
GetDepartments
ûû9 G
(
ûûG H
)
ûûH I
)
ûûI J
)
ûûJ K
;
ûûK L
}
üü 	
catch
†† 
(
†† 
	Exception
†† 
	exception
†† "
)
††" #
{
°° 	
_logger
¢¢
 
.
¢¢ 
LogError
¢¢ 
(
¢¢ 
HelperService
¢¢ (
.
¢¢( )
LoggerMessage
¢¢) 6
(
¢¢6 7
$str
¢¢7 G
,
¢¢G H
$str
¢¢I \
,
¢¢\ ]
	exception
¢¢^ g
)
¢¢g h
)
¢¢h i
;
¢¢i j
return
££
 
Problem
££ 
(
££ 
$str
££ >
)
££> ?
;
££? @
}
§§ 	
}
•• 
}¶¶ Ú
YC:\Users\pooja.sakthivel\Desktop\AspireOverflow\CustomExceptions\ItemNotFoundException.cs
	namespace 	
AspireOverflow
 
. 
CustomExceptions )
{ 
public 

class !
ItemNotFoundException &
:' (
	Exception) 2
{ 
public !
ItemNotFoundException $
($ %
)% &
:' (
base) -
(- .
$str. >
)> ?
{@ A
}B C
public !
ItemNotFoundException $
($ %
string% +
message, 3
)3 4
:5 6
base7 ;
(; <
message< C
)C D
{E F
}G H
public

 !
ItemNotFoundException

 $
(

$ %
string

% +
message

, 3
,

3 4
	Exception

5 >
innerException

? M
)

M N
:

O P
base

Q U
(

U V
message

V ]
,

] ^
innerException

_ m
)

m n
{

o p
}

q r
} 
} ŒB
`C:\Users\pooja.sakthivel\Desktop\AspireOverflow\DataAccessLayer\Context\AspireOverflowContext.cs
	namespace 	
AspireOverflow
 
. 
DataAccessLayer (
{ 
public 

class !
AspireOverflowContext &
:' (
	DbContext) 2
{ 
public !
AspireOverflowContext $
($ %
DbContextOptions% 5
<5 6!
AspireOverflowContext6 K
>K L
optionsM T
)T U
:V W
baseX \
(\ ]
options] d
)d e
{		 	
}

 	
public 
virtual 
DbSet 
< 
User !
>! "
Users# (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
=7 8
null9 =
!= >
;> ?
public 
virtual 
DbSet 
< 
UserRole %
>% &
	UserRoles' 0
{1 2
get3 6
;6 7
set8 ;
;; <
}= >
=? @
nullA E
!E F
;F G
public 
DbSet 
< 
Query 
> 
Queries #
{$ %
get& )
;) *
set+ .
;. /
}0 1
=2 3
null4 8
!8 9
;9 :
public 
DbSet 
< 
QueryComment !
>! "
QueryComments# 0
{1 2
get3 6
;6 7
set8 ;
;; <
}= >
=? @
nullA E
!E F
;F G
public 
virtual 
DbSet 
< 

Department '
>' (
Departments) 4
{5 6
get7 :
;: ;
set< ?
;? @
}A B
=C D
nullE I
!I J
;J K
public 
virtual 
DbSet 
< 
Designation (
>( )
Designations* 6
{7 8
get9 <
;< =
set> A
;A B
}C D
=E F
nullG K
!K L
;L M
public 
virtual 
DbSet 
< 
Gender #
># $
Genders% ,
{- .
get/ 2
;2 3
set4 7
;7 8
}9 :
=; <
null= A
!A B
;B C
public 
virtual 
DbSet 
< 
Spam !
>! "
Spams# (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
=7 8
null9 =
!= >
;> ?
public 
virtual 
DbSet 
< 
PrivateArticleUsers 0
>0 1
PrivateArticleUsers2 E
{F G
getH K
;K L
setM P
;P Q
}R S
=T U
nullV Z
!Z [
;[ \
public 
virtual 
DbSet 
< 
ArticleLike (
>( )
ArticleLikes* 6
{7 8
get9 <
;< =
set> A
;A B
}C D
=E F
nullG K
!K L
;L M
public 
DbSet 
< 
Article 
> 
Articles &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
=5 6
null7 ;
!; <
;< =
public 
DbSet 
< 
ArticleComment #
># $
ArticleComments% 4
{5 6
get7 :
;: ;
set< ?
;? @
}A B
=C D
nullE I
!I J
;J K
	protected 
override 
void 
OnModelCreating  /
(/ 0
ModelBuilder0 <
modelBuilder= I
)I J
{ 	
modelBuilder 
. 
Entity 
<  
Gender  &
>& '
(' (
entity( .
=>/ 1
{ 
entity $
.$ %
HasData% ,
(, -
new- 0
Gender1 7
{8 9
GenderId: B
=C D
$numE F
,F G
NameH L
=M N
$strO U
}V W
)W X
;X Y
entity $
.$ %
HasData% ,
(, -
new- 0
Gender1 7
{8 9
GenderId: B
=C D
$numE F
,F G
NameH L
=M N
$strO W
}X Y
)Y Z
;Z [
} 
) 
; 
modelBuilder 
. 
Entity 
<  
VerifyStatus  ,
>, -
(- .
entity. 4
=>5 7
{   
entity!! 
.!! 
HasData!! 
(!! 
new!! "
VerifyStatus!!# /
{!!0 1
VerifyStatusID!!2 @
=!!A B
$num!!C D
,!!D E
Name!!F J
=!!K L
$str!!M W
}!!X Y
)!!Y Z
;!!Z [
entity"" 
."" 
HasData"" 
("" 
new"" "
VerifyStatus""# /
{""0 1
VerifyStatusID""2 @
=""A B
$num""C D
,""D E
Name""F J
=""K L
$str""M W
}""X Y
)""Y Z
;""Z [
entity## 
.## 
HasData## 
(## 
new## "
VerifyStatus### /
{##0 1
VerifyStatusID##2 @
=##A B
$num##C D
,##D E
Name##F J
=##K L
$str##M Z
}##[ \
)##\ ]
;##] ^
}$$ 
)$$ 
;$$ 
modelBuilder%% 
.%% 
Entity%% 
<%%  
UserRole%%  (
>%%( )
(%%) *
entity%%* 0
=>%%1 3
{&& 
entity'' 
.'' 
HasData'' 
('' 
new'' !
UserRole''" *
{''+ ,

UserRoleId''- 7
=''8 9
$num'': ;
,''; <
RoleName''= E
=''F G
$str''H O
}''P Q
)''Q R
;''R S
entity(( 
.(( 
HasData(( 
((( 
new(( !
UserRole((" *
{((+ ,

UserRoleId((- 7
=((8 9
$num((: ;
,((; <
RoleName((= E
=((F G
$str((H N
}((O P
)((P Q
;((Q R
})) 
))) 
;)) 
modelBuilder** 
.** 
Entity** 
<**  
ArticleStatus**  -
>**- .
(**. /
entity**/ 5
=>**6 8
{++ 
entity,, 
.,, 
HasData,, 
(,, 
new,, !
ArticleStatus,," /
{,,0 1
ArticleStatusID,,2 A
=,,B C
$num,,D E
,,,E F
Status,,G M
=,,N O
$str,,P Y
},,Z [
),,[ \
;,,\ ]
entity-- 
.-- 
HasData-- 
(-- 
new-- !
ArticleStatus--" /
{--0 1
ArticleStatusID--2 A
=--B C
$num--D E
,--E F
Status--G M
=--N O
$str--P `
}--a b
)--b c
;--c d
entity.. 
... 
HasData.. 
(.. 
new.. !
ArticleStatus.." /
{..0 1
ArticleStatusID..2 A
=..B C
$num..D E
,..E F
Status..G M
=..N O
$str..P ^
}.._ `
)..` a
;..a b
entity// 
.// 
HasData// 
(// 
new// !
ArticleStatus//" /
{//0 1
ArticleStatusID//2 A
=//B C
$num//D E
,//E F
Status//G M
=//N O
$str//P [
}//\ ]
)//] ^
;//^ _
}00 
)00 
;00 
}11 	
}22 
}33 ¥
gC:\Users\pooja.sakthivel\Desktop\AspireOverflow\DataAccessLayer\Factory\AspireOverflowContextFactory.cs
	namespace 	
AspireOverflow
 
. 
DataAccessLayer (
{ 
public 

class (
AspireOverflowContextFactory -
{ 
private !
AspireOverflowContext &
?& '"
_aspireOverflowContext( >
;> ?
public !
AspireOverflowContext %*
GetAspireOverflowContextObject& D
(D E
)E F
{ 	
var		 
optionsBuilder		 
=		  
new		! $#
DbContextOptionsBuilder		% <
<		< =!
AspireOverflowContext		= R
>		R S
(		S T
)		T U
;		U V
try

 
{ 
IConfigurationRoot "
configuration# 0
=1 2
new3 6 
ConfigurationBuilder7 K
(K L
)L M
. 
SetBasePath 
( 
	AppDomain &
.& '
CurrentDomain' 4
.4 5
BaseDirectory5 B
)B C
. 
AddJsonFile 
( 
$str /
)/ 0
. 
Build 
( 
) 
; 
var 
connectionString $
=% &
configuration' 4
.4 5
GetConnectionString5 H
(H I
$strI R
)R S
;S T
optionsBuilder 
. 
UseSqlServer +
(+ ,
connectionString, <
??) +
throw, 1
new2 5"
NullReferenceException6 L
(L M
$"- /
$str/ S
{S T
nameofT Z
(Z [
connectionString[ k
)k l
}l m
"m n
)n o
)o p
;p q"
_aspireOverflowContext (
=) *
new, /!
AspireOverflowContext0 E
(E F
optionsBuilderF T
.T U
OptionsU \
)\ ]
;] ^
return "
_aspireOverflowContext /
;/ 0
} 
catch 
( 
	Exception 
	exception &
)& '
{ 
Console 
. 
	WriteLine !
(! "
	exception" +
.+ ,
Message, 3
)3 4
;4 5
throw 
; 
} 
} 	
} 
} Å'
`C:\Users\pooja.sakthivel\Desktop\AspireOverflow\DataAccessLayer\Interfaces\IArticleRepository.cs
	namespace 	
AspireOverflow
 
. 
DataAccessLayer (
.( )

Interfaces) 3
{ 
public 

	interface 
IArticleRepository '
:( )
IArticleComment* 9
,9 :
IArticleLike; G
,G H
IPrivateArticleI X
{ 
bool 

AddArticle 
( 
Article 
article  '
)' (
;( )
bool 
UpdateArticle 
( 
int 
	ArticleId (
,( )
int* -
ArticleStatusID. =
,= >
int? B
UpdatedByUserIdC R
)R S
;S T
bool		 
UpdateArticle		 
(		 
Article		 "
article		# *
)		* +
;		+ ,
Article 
GetArticleByID 
( 
int "
	ArticleId# ,
), -
;- .
bool $
DeleteArticleByArticleId %
(% &
int& )
	ArticleId* 3
)3 4
;4 5
IEnumerable 
< 
Article 
> 
GetArticles (
(( )
)) *
;* +
public 
IEnumerable 
< 
Article "
>" #
GetArticlesByTitle$ 6
(6 7
string7 =
Title> C
)C D
;D E
public 
IEnumerable 
< 
Article "
>" ##
GetArticlesByReviewerId$ ;
(; <
int< ?

ReviewerId@ J
)J K
;K L
public 
IEnumerable 
< 
Article "
>" #
GetArticlesByAuthor$ 7
(7 8
string8 >

AuthorName? I
)I J
;J K
public 
IEnumerable 
< 
Article "
>" #
GetArticlesByUserId$ 7
(7 8
int8 ;
UserId< B
)B C
;C D
public 
IEnumerable 
< 
Article "
>" #(
GetArticlesByArticleStatusId$ @
(@ A
intA D
ArticleStatusIDE T
,T U
boolV Z

IsReviewer[ e
=f g
falseh m
)m n
;n o
public 
object 
GetCountOfArticles (
(( )
)) *
;* +
public	 
bool .
"GetIsTraceEnabledFromConfiguration 7
(7 8
)8 9
;9 :
} 
public 

	interface 
IArticleComment $
{ 
IEnumerable 
< 
ArticleComment "
>" #"
GetCommentsByArticleId$ :
(: ;
int; >
	ArticleId? H
)H I
;I J
bool 

AddComment 
( 
ArticleComment &
comment' .
). /
;/ 0
} 
public 

	interface 
IArticleLike !
{ 
public   
bool   
AddLike   
(   
ArticleLike   '
like  ( ,
)  , -
;  - .
public!! 
IEnumerable!! 
<!! 
ArticleLike!! &
>!!& '
GetLikes!!( 0
(!!0 1
)!!1 2
;!!2 3
public"" 
int"" 
GetCountOfLikes"" "
(""" #
int""# &
	ArticleId""' 0
)""0 1
;""1 2
}## 
public$$ 

	interface$$ 
IPrivateArticle$$ $
{%% 
public&& 
IEnumerable&& 
<&& 
PrivateArticleUsers&& .
>&&. /*
GetPrivateArticleUsersByUserId&&0 N
(&&N O
int&&O R
UserId&&S Y
)&&Y Z
;&&Z [
public'' 
IEnumerable'' 
<'' 
PrivateArticleUsers'' .
>''. /-
!GetPrivateArticleUsersByArticleId''0 Q
(''Q R
int''R U
	ArticleId''V _
)''_ `
;''` a
public(( 
bool(( ,
 AddPrivateArticleWithSharedUsers(( 4
(((4 5
Article((5 <
article((= D
,((D E
List((F J
<((J K
int((K N
>((N O
SharedUsersId((P ]
)((] ^
;((^ _
public)) 
bool)) /
#UpdatePrivateArticleWithSharedUsers)) 7
())7 8
Article))8 ?
article))@ G
,))G H
List))I M
<))M N
int))N Q
>))Q R
SharedUsersId))S `
)))` a
;))a b
}** 
},, ¬$
]C:\Users\pooja.sakthivel\Desktop\AspireOverflow\DataAccessLayer\Interfaces\IArticleService.cs
	namespace 	
AspireOverflow
 
. 
DataAccessLayer (
.( )

Interfaces) 3
{ 
public 

	interface 
IArticleService $
:% &"
IArticleCommentService' =
,= >
IArticleLikeService? R
{ 
bool 
CreateArticle 
( 
Article "
article# *
,* +
List, 0
<0 1
int1 4
>4 5
SharedUsersId6 C
)C D
;D E
bool 
CreateArticle 
( 
Article "
article# *
)* +
;+ ,
bool		 $
DeleteArticleByArticleId		 %
(		% &
int		& )
	ArticleId		* 3
)		3 4
;		4 5
bool

 
ChangeArticleStatus

  
(

  !
int

! $
	ArticleID

% .
,

. /
int

0 3
ArticleStatusID

4 C
,

C D
int

E H
UserId

I O
)

O P
;

P Q
bool 
UpdateArticle 
( 
Article "
article# *
,* +
int, /
_currentUserId0 >
,> ?
bool@ D

IsReviewerE O
=P Q
falseR W
,W X
ListY ]
<] ^
int^ a
>a b
SharedUsersIdc p
=q r
defaults z
!z {
){ |
;| }
Object 
GetArticleById 
( 
int !
	ArticleId" +
)+ ,
;, -
IEnumerable 
< 
Object 
> 
GetTrendingArticles /
(/ 0
int0 3
Range4 9
=: ;
$num< =
)= >
;> ?
IEnumerable 
< 
Object 
> 
GetLatestArticles -
(- .
int. 1
Range2 7
=8 9
$num: ;
); <
;< =
IEnumerable 
< 
Object 
> 
GetListOfArticles -
(- .
). /
;/ 0
IEnumerable 
< 
Object 
> 
GetPrivateArticles .
(. /
int/ 2
UserId3 9
)9 :
;: ;
IEnumerable 
< 
Object 
> 
GetArticlesByTitle .
(. /
string/ 5
Title6 ;
); <
;< =
IEnumerable 
< 
Object 
> 
GetArticlesByAuthor /
(/ 0
string0 6

AuthorName7 A
)A B
;B C
public 
object 
GetCountOfArticles (
(( )
)) *
;* +
IEnumerable 
< 
Object 
> 
GetArticlesByUserId /
(/ 0
int0 3
UserId4 :
): ;
;; <
IEnumerable 
< 
Article 
> 
GetAll #
(# $
)$ %
;% &
IEnumerable 
< 
Object 
> #
GetArticlesByReviewerId 3
(3 4
int4 7

ReviewerId8 B
)B C
;C D
IEnumerable 
< 
object 
> (
GetArticlesByArticleStatusId 8
(8 9
int9 <
ArticleStatusID= L
,L M
boolN R

IsReviewerS ]
)] ^
;^ _
} 
public 

	interface "
IArticleCommentService +
{ 
bool 
CreateComment 
( 
ArticleComment )
comment* 1
)1 2
;2 3
IEnumerable 
< 
object 
> 
GetComments '
(' (
int( +
	ArticleID, 5
)5 6
;6 7
} 
public   

	interface   
IArticleLikeService   (
{!! 
bool"" 
AddLikeToArticle"" 
("" 
ArticleLike"" )
Like""* .
)"". /
;""/ 0
int## 
GetLikesCount## 
(## 
int## 
	ArticleID## '
)##' (
;##( )
}$$ 
}%% Ï
[C:\Users\pooja.sakthivel\Desktop\AspireOverflow\DataAccessLayer\Interfaces\IEmailService.cs
	namespace 	
AspireOverflow
 
. 
DataAccessLayer (
.( )

Interfaces) 3
{ 
public 

	interface 
IEmailService "
{ 
Task 
SendEmailAsync 
( 
MailRequest '
mailRequest( 3
)3 4
;4 5
} 
}		 „
^C:\Users\pooja.sakthivel\Desktop\AspireOverflow\DataAccessLayer\Interfaces\IQueryRepository.cs
	namespace 	
AspireOverflow
 
. 
DataAccessLayer (
.( )

Interfaces) 3
{ 
public 

	interface 
IQueryRepository %
:& '#
IQueryCommentRepository( ?
,? @!
ISpamReportRepositoryA V
{ 
bool 
AddQuery 
( 
Query 
query !
)! "
;" #
bool 
UpdateQuery 
( 
int 
QueryId $
,$ %
bool& *
IsSolved+ 3
=4 5
false6 ;
,; <
bool= A
IsDeleteB J
=K L
falseM R
)R S
;S T
Query 
GetQueryByID 
( 
int 
QueryId &
)& '
;' (
IEnumerable		 
<		 
Query		 
>		 

GetQueries		 %
(		% &
)		& '
;		' (
public

 
object

 
GetCountOfQueries

 '
(

' (
)

( )
;

) *
public 
IEnumerable 
< 
Query  
>  !
GetQueriesByUserId" 4
(4 5
int5 8
UserId9 ?
)? @
;@ A
public 
IEnumerable 
< 
Query  
>  !
GetQueriesByTitle" 3
(3 4
String4 :
Title; @
)@ A
;A B
public 
IEnumerable 
< 
Query  
>  ! 
GetQueriesByIsSolved" 6
(6 7
bool7 ;
IsSolved< D
)D E
;E F
public	 
bool .
"GetIsTraceEnabledFromConfiguration 7
(7 8
)8 9
;9 :
} 
public 

	interface #
IQueryCommentRepository ,
{ 
IEnumerable 
< 
QueryComment  
>  !
GetComments" -
(- .
). /
;/ 0
bool 

AddComment 
( 
QueryComment $
comment% ,
), -
;- .
} 
public 

	interface !
ISpamReportRepository *
{ 
IEnumerable 
< 
Spam 
> 
GetSpams "
(" #
)# $
;$ %
bool 
AddSpam 
( 
Spam 
spam 
) 
;  
bool 

UpdateSpam 
( 
int 
QueryId #
,# $
int% (
VerifyStatusID) 7
,7 8
int8 ;
UpdatedByUserId< K
)K L
;L M
} 
} Ö
[C:\Users\pooja.sakthivel\Desktop\AspireOverflow\DataAccessLayer\Interfaces\IQueryService.cs
	namespace 	
AspireOverflow
 
. 
DataAccessLayer (
.( )

Interfaces) 3
{ 
public 

	interface 
IQueryService "
:# $ 
IQueryCommentService% 9
,9 :
IQuerySpamService; L
{ 
bool 
CreateQuery 
( 
Query 
query $
)$ %
;% &
bool  
RemoveQueryByQueryId !
(! "
int" %
QueryId& -
)- .
;. /
bool		 
MarkQueryAsSolved		 
(		 
int		 "
QueryId		# *
)		* +
;		+ ,
Object

 
GetQuery

 
(

 
int

 
QueryID

 #
)

# $
;

$ %
IEnumerable 
< 
Object 
> 
GetListOfQueries ,
(, -
)- .
;. /
IEnumerable 
< 
Object 
> 
GetTrendingQueries .
(. /
int/ 2
Range3 8
=9 :
$num; <
)< =
;= >
IEnumerable 
< 
Object 
> 
GetLatestQueries ,
(, -
int- 0
Range1 6
=7 8
$num9 :
): ;
;; <
IEnumerable 
< 
Object 
> 
GetQueriesByUserId .
(. /
int/ 2
UserId3 9
)9 :
;: ;
IEnumerable 
< 
Object 
> 
GetQueriesByTitle -
(- .
String. 4
Title5 :
): ;
;; <
IEnumerable 
< 
Object 
>  
GetQueriesByIsSolved 0
(0 1
bool1 5
IsSolved6 >
)> ?
;? @
public 
object 
GetCountOfQueries '
(' (
)( )
;) *
} 
public 

	interface  
IQueryCommentService )
{ 
bool 
CreateComment 
( 
QueryComment '
comment( /
)/ 0
;0 1
IEnumerable 
< 
Object 
> 
GetComments '
(' (
int( +
QueryId, 3
)3 4
;4 5
} 
public 

	interface 
IQuerySpamService &
{ 
bool 
AddSpam 
( 
Spam 
spam 
) 
;  
IEnumerable 
< 
object 
> 
GetSpams $
($ %
int% (
VerifyStatusID) 7
)7 8
;8 9
bool 
ChangeSpamStatus 
( 
int !
QueryId" )
,) *
int+ .
VerifyStatusID/ =
,= >
int> A
UpdatedByUserIdB Q
)Q R
;R S
} 
}   ˚
[C:\Users\pooja.sakthivel\Desktop\AspireOverflow\DataAccessLayer\Interfaces\ITokenService.cs
	namespace 	
AspireOverflow
 
. 
DataAccessLayer (
.( )

Interfaces) 3
{ 
public 

	interface 
ITokenService "
{ 
public 
object 
GenerateToken #
(# $
Login$ )
Credentials* 5
)5 6
;6 7
} 
} Î
]C:\Users\pooja.sakthivel\Desktop\AspireOverflow\DataAccessLayer\Interfaces\IUserRepository.cs
	namespace 	
AspireOverflow
 
. 
DataAccessLayer (
.( )

Interfaces) 3
{ 
public 

	interface 
IUserRepository $
{ 
public 
bool 

CreateUser 
( 
User #
User$ (
)( )
;) *
public 
User 
GetUserByID 
(  
int  #
UserId$ *
)* +
;+ ,
public 
User 
GetUserByEmail "
(" #
string# )
Email* /
)/ 0
;0 1
public		 
IEnumerable		 
<		 
User		 
>		  
GetUsers		! )
(		) *
)		* +
;		+ ,
public

 
IEnumerable

 
<

 
User

 
>

  $
GetUsersByVerifyStatusId

! 9
(

9 :
int

: =
VerifyStatusID

> L
)

L M
;

M N
public 
IEnumerable 
< 
User 
>   
GetUsersByUserRoleID! 5
(5 6
int6 9

UserRoleID: D
)D E
;E F
public 
IEnumerable 
< 
User 
>   
GetUsersByIsReviewer! 5
(5 6
bool6 :

IsReviewer; E
)E F
;F G
public 
bool $
UpdateUserByVerifyStatus ,
(, -
int- 0
UserId1 7
,7 8
int9 <
VerifyStatusID= K
,K L
intM P
UpdatedByUserIdQ `
)` a
;a b
public 
bool  
UpdateUserByReviewer (
(( )
int) ,
UserId- 3
,3 4
bool5 9

IsReviewer: D
,D E
intF I
UpdatedByUserIdJ Y
)Y Z
;Z [
public 
bool 

RemoveUser 
( 
int "
UserId# )
)) *
;* +
public 
IEnumerable 
< 

Department %
>% &
GetDepartments' 5
(5 6
)6 7
;7 8
public 
IEnumerable 
< 
Gender !
>! "

GetGenders# -
(- .
). /
;/ 0
public 
IEnumerable 
< 
Designation &
>& '
GetDesignations( 7
(7 8
)8 9
;9 :
public 
object 
GetCountOfUsers %
(% &
)& '
;' (
public 
bool .
"GetIsTraceEnabledFromConfiguration 6
(6 7
)7 8
;8 9
} 
} ©
ZC:\Users\pooja.sakthivel\Desktop\AspireOverflow\DataAccessLayer\Interfaces\IUserService.cs
	namespace 	
AspireOverflow
 
. 
DataAccessLayer (
.( )

Interfaces) 3
{ 
public 

	interface 
IUserService !
:" #
IDesignations$ 1
,1 2
IGenders3 ;
{ 
public 
bool 

CreateUser 
( 
User #
user$ (
)( )
;) *
public 
bool 

RemoveUser 
( 
int "
UserId# )
)) *
;* +
public		 
bool		 "
UpdateUserByIsReviewer		 *
(		* +
int		+ .
UserId		/ 5
,		5 6
bool		7 ;

IsReviewer		< F
,		F G
int		G J
UpdatedByUserId		K Z
)		Z [
;		[ \
public

 
User

 
GetUser

 
(

 
string

 "
Email

# (
,

( )
string

* 0
Password

1 9
)

9 :
;

: ;
public 
IEnumerable 
< 
User 
>  
GetUsers! )
() *
)* +
;+ ,
public 
IEnumerable 
< 
Object !
>! ""
GetUsersByVerifyStatus# 9
(9 :
int: =
VerifyStatusID> L
)L M
;M N
public 
object 
GetUserByID !
(! "
int" %
UserID& ,
), -
;- .
public 
IEnumerable 
< 
Object !
>! " 
GetUsersByUserRoleID# 7
(7 8
int8 ;

UserRoleID< F
)F G
;G H
public 
bool (
ChangeUserVerificationStatus 0
(0 1
int1 4
UserID5 ;
,; <
int= @
VerifyStatusIDA O
,O P
intP S
UpdatedByUserIdT c
)c d
;d e
public 
IEnumerable 
< 
Object !
>! " 
GetUsersByIsReviewer# 7
(7 8
bool8 <

IsReviewer= G
)G H
;H I
public 
object 
GetCountOfUsers %
(% &
)& '
;' (
} 
public 

	interface 
IDesignations "
{ 
public 
IEnumerable 
< 
Object !
>! "
GetDesignations# 2
(2 3
)3 4
;4 5
public 
IEnumerable 
< 
Object !
>! "
GetDepartments# 1
(1 2
)2 3
;3 4
} 
public 

	interface 
IGenders 
{ 
public 
IEnumerable 
< 
Object !
>! "

GetGenders# -
(- .
). /
;/ 0
} 
} ûë
_C:\Users\pooja.sakthivel\Desktop\AspireOverflow\DataAccessLayer\Repository\ArticleRepository.cs
	namespace

 	
AspireOverflow


 
.

 
DataAccessLayer

 (
{ 
public 

class 
ArticleRepository "
:# $
IArticleRepository% 7
{ 
private 
readonly !
AspireOverflowContext .
_context/ 7
;7 8
private 
readonly 
ILogger  
<  !
ArticleRepository! 2
>2 3
_logger4 ;
;; <
private 
readonly 
IConfiguration '
_configuration( 6
;6 7
private 
readonly 
	Stopwatch "

_stopWatch# -
=. /
new0 3
	Stopwatch4 =
(= >
)> ?
;? @
private 
readonly 
bool 
IsTracingEnabled .
;. /
public 
ArticleRepository  
(  !!
AspireOverflowContext! 6
context7 >
,> ?
ILogger@ G
<G H
ArticleRepositoryH Y
>Y Z
logger[ a
,a b
IConfigurationc q
configurationr 
)	 Ä
{ 	
_context 
= 
context 
; 
_logger 
= 
logger 
; 
_configuration 
= 
configuration *
;* +
IsTracingEnabled 
= .
"GetIsTraceEnabledFromConfiguration A
(A B
)B C
;C D
} 	
public 
bool 

AddArticle 
( 
Article &
article' .
). /
{ 	
if 
( 
IsTracingEnabled  
)  !

_stopWatch" ,
., -
Start- 2
(2 3
)3 4
;4 5

Validation   
.   
ValidateArticle   &
(  & '
article  ' .
)  . /
;  / 0
try!! 
{"" 
_context## 
.## 
Articles## !
.##! "
Add##" %
(##% &
article##& -
)##- .
;##. /
_context$$ 
.$$ 
SaveChanges$$ $
($$$ %
)$$% &
;$$& '
return%% 
true%% 
;%% 
}&& 
catch'' 
('' 
	Exception'' 
	exception'' &
)''& '
{(( 
_logger)) 
.)) 
LogError))  
())  !
HelperService))! .
.)). /
LoggerMessage))/ <
())< =
$str))= P
,))P Q
$str))R o
,))o p
	exception))q z
,))z {
article	))| É
)
))É Ñ
)
))Ñ Ö
;
))Ö Ü
return** 
false** 
;** 
}++ 
finally,, 
{-- 
if.. 
(.. 
IsTracingEnabled.. $
)..$ %
{// 

_stopWatch00 
.00 
Stop00 #
(00# $
)00$ %
;00% &
_logger11 
.11 
LogInformation11 *
(11* +
$"11+ -
$str11- w
{11w x

_stopWatch	11x Ç
.
11Ç É!
ElapsedMilliseconds
11É ñ
}
11ñ ó
$str
11ó ô
"
11ô ö
)
11ö õ
;
11õ ú
}22 
}33 
}44 	
public77 
bool77 ,
 AddPrivateArticleWithSharedUsers77 4
(774 5
Article775 <
article77= D
,77D E
List77F J
<77J K
int77K N
>77N O
SharedUsersId77P ]
)77] ^
{88 	
if99 
(99 
IsTracingEnabled99  
)99  !

_stopWatch99" ,
.99, -
Start99- 2
(992 3
)993 4
;994 5

Validation:: 
.:: 
ValidateArticle:: &
(::& '
article::' .
)::. /
;::/ 0
try;; 
{<< 
var== 
entry== 
=== 
_context== $
.==$ %
Articles==% -
.==- .
Add==. 1
(==1 2
article==2 9
)==9 :
;==: ;
_context>> 
.>> 
SaveChanges>> $
(>>$ %
)>>% &
;>>& '
if?? 
(?? 
article?? 
.?? 
	IsPrivate?? %
&&??& (
SharedUsersId??) 6
.??6 7
Count??7 <
>??= >
$num??? @
)??@ A
{@@ 
SharedUsersIdAA !
.AA! "
ForEachAA" )
(AA) *
UserIdAA* 0
=>AA1 3
_contextAA4 <
.AA< =
PrivateArticleUsersAA= P
.AAP Q
AddAsyncAAQ Y
(AAY Z
newAAZ ]
PrivateArticleUsersAA^ q
(AAq r
entryAAr w
.AAw x
EntityAAx ~
.AA~ 
	ArticleId	AA à
,
AAà â
UserId
AAä ê
)
AAê ë
)
AAë í
)
AAí ì
;
AAì î
_contextBB 
.BB 
SaveChangesBB (
(BB( )
)BB) *
;BB* +
}CC 
returnDD 
trueDD 
;DD 
}EE 
catchFF 
(FF 
	ExceptionFF 
	exceptionFF &
)FF& '
{GG 
_loggerHH 
.HH 
LogErrorHH  
(HH  !
HelperServiceHH! .
.HH. /
LoggerMessageHH/ <
(HH< =
$strHH= P
,HHP Q
$str	HHR è
,
HHè ê
	exception
HHë ö
,
HHö õ
article
HHú £
)
HH£ §
)
HH§ •
;
HH• ¶
returnII 
falseII 
;II 
}JJ 
finallyKK 
{LL 
ifMM 
(MM 
IsTracingEnabledMM $
)MM$ %
{NN 

_stopWatchOO 
.OO 
StopOO #
(OO# $
)OO$ %
;OO% &
_loggerPP 
.PP 
LogInformationPP *
(PP* +
$"PP+ -
$str	PP- ó
{
PPó ò

_stopWatch
PPò ¢
.
PP¢ £!
ElapsedMilliseconds
PP£ ∂
}
PP∂ ∑
$str
PP∑ π
"
PPπ ∫
)
PP∫ ª
;
PPª º
}QQ 
}RR 
}SS 	
publicVV 
boolVV 
UpdateArticleVV !
(VV! "
ArticleVV" )
articleVV* 1
)VV1 2
{WW 	
ifXX 
(XX 
IsTracingEnabledXX  
)XX  !

_stopWatchXX" ,
.XX, -
StartXX- 2
(XX2 3
)XX3 4
;XX4 5

ValidationYY 
.YY 
ValidateArticleYY &
(YY& '
articleYY' .
)YY. /
;YY/ 0
tryZZ 
{[[ 
if\\ 
(\\ 
article\\ 
.\\ 
ArticleStatusID\\ +
>\\, -
$num\\. /
)\\/ 0
throw\\1 6
new\\7 :
ValidationException\\; N
(\\N O
$str\\O w
)\\w x
;\\x y
_context]] 
.]] 
Articles]] !
.]]! "
Update]]" (
(]]( )
article]]) 0
)]]0 1
;]]1 2
_context^^ 
.^^ 
SaveChanges^^ $
(^^$ %
)^^% &
;^^& '
return__ 
true__ 
;__ 
}`` 
catchaa 
(aa 
ValidationExceptionaa &
	exceptionaa' 0
)aa0 1
{bb 
_loggercc 
.cc 
LogErrorcc  
(cc  !
HelperServicecc! .
.cc. /
LoggerMessagecc/ <
(cc< =
$strcc= P
,ccP Q
$strccR r
,ccr s
	exceptioncct }
,cc} ~
article	cc Ü
)
ccÜ á
)
ccá à
;
ccà â
throwdd 
;dd 
}ee 
catchff 
(ff 
	Exceptionff 
	exceptionff &
)ff& '
{gg 
_loggerhh 
.hh 
LogErrorhh  
(hh  !
HelperServicehh! .
.hh. /
LoggerMessagehh/ <
(hh< =
$strhh= P
,hhP Q
$strhhR r
,hhr s
	exceptionhht }
,hh} ~
article	hh Ü
)
hhÜ á
)
hhá à
;
hhà â
returnii 
falseii 
;ii 
}jj 
finallykk 
{ll 
ifmm 
(mm 
IsTracingEnabledmm $
)mm$ %
{nn 

_stopWatchoo 
.oo 
Stopoo #
(oo# $
)oo$ %
;oo% &
_loggerpp 
.pp 
LogInformationpp *
(pp* +
$"pp+ -
$strpp- z
{ppz {

_stopWatch	pp{ Ö
.
ppÖ Ü!
ElapsedMilliseconds
ppÜ ô
}
ppô ö
$str
ppö ú
"
ppú ù
)
ppù û
;
ppû ü
}qq 
}rr 
}ss 	
publicvv 
boolvv 
UpdateArticlevv !
(vv! "
intvv" %
	ArticleIdvv& /
,vv/ 0
intvv1 4
ArticleStatusIDvv5 D
,vvD E
intvvF I
UpdatedByUserIdvvJ Y
)vvY Z
{ww 	
ifxx 
(xx 
IsTracingEnabledxx  
)xx  !

_stopWatchxx" ,
.xx, -
Startxx- 2
(xx2 3
)xx3 4
;xx4 5
ifyy 
(yy 
	ArticleIdyy 
<=yy 
$numyy 
)yy 
throwyy  %
newyy& )
ArgumentExceptionyy* ;
(yy; <
$"yy< >
$stryy> p
{yyp q
	ArticleIdyyq z
}yyz {
"yy{ |
)yy| }
;yy} ~
ifzz 
(zz 
ArticleStatusIDzz 
<=zz  "
$numzz# $
||zz% '
ArticleStatusIDzz( 7
>zz8 9
$numzz: ;
)zz; <
throwzz= B
newzzC F
ArgumentExceptionzzG X
(zzX Y
$"zzY [
$str	zz[ ï
{
zzï ñ
ArticleStatusID
zzñ •
}
zz• ¶
"
zz¶ ß
)
zzß ®
;
zz® ©
try{{ 
{|| 
var}} 
ExistingArticle}} #
=}}$ %
GetArticleByID}}& 4
(}}4 5
	ArticleId}}5 >
)}}> ?
;}}? @
if~~ 
(~~ 
ExistingArticle~~ #
.~~# $
	CreatedBy~~$ -
==~~. 0
UpdatedByUserId~~1 @
&&~~A C
ArticleStatusID~~D S
>~~T U
$num~~V W
)~~W X
throw~~Y ^
new~~_ b
ValidationException~~c v
(~~v w
$str	~~w ¨
)
~~¨ ≠
;
~~≠ Æ
if 
( 
ArticleStatusID #
>$ %
$num& '
)' (
ExistingArticle) 8
.8 9

ReviewerId9 C
=D E
UpdatedByUserIdF U
;U V
ExistingArticle
ÄÄ 
.
ÄÄ  
ArticleStatusID
ÄÄ  /
=
ÄÄ0 1
ArticleStatusID
ÄÄ2 A
;
ÄÄA B
ExistingArticle
ÅÅ 
.
ÅÅ  
	UpdatedOn
ÅÅ  )
=
ÅÅ* +
DateTime
ÅÅ, 4
.
ÅÅ4 5
Now
ÅÅ5 8
;
ÅÅ8 9
ExistingArticle
ÇÇ 
.
ÇÇ  
	UpdatedBy
ÇÇ  )
=
ÇÇ* +
UpdatedByUserId
ÇÇ, ;
;
ÇÇ; <
_context
ÑÑ 
.
ÑÑ 
Articles
ÑÑ !
.
ÑÑ! "
Update
ÑÑ" (
(
ÑÑ( )
ExistingArticle
ÑÑ) 8
)
ÑÑ8 9
;
ÑÑ9 :
_context
ÖÖ 
.
ÖÖ 
SaveChanges
ÖÖ $
(
ÖÖ$ %
)
ÖÖ% &
;
ÖÖ& '
return
ÜÜ 
true
ÜÜ 
;
ÜÜ 
}
áá 
catch
àà 
(
àà !
ValidationException
àà &
	exception
àà' 0
)
àà0 1
{
ââ 
_logger
ää 
.
ää 
LogError
ää  
(
ää  !
HelperService
ää! .
.
ää. /
LoggerMessage
ää/ <
(
ää< =
$str
ää= P
,
ääP Q
$strääR ö
,ääö õ
	exceptionääú •
)ää• ¶
)ää¶ ß
;ääß ®
throw
ãã 
;
ãã 
}
åå 
catch
çç 
(
çç 
	Exception
çç 
	exception
çç &
)
çç& '
{
éé 
_logger
èè 
.
èè 
LogError
èè  
(
èè  !
HelperService
èè! .
.
èè. /
LoggerMessage
èè/ <
(
èè< =
$str
èè= P
,
èèP Q
$strèèR ö
,èèö õ
	exceptionèèú •
)èè• ¶
)èè¶ ß
;èèß ®
return
êê 
false
êê 
;
êê 
}
ëë 
finally
íí 
{
ìì 
if
îî 
(
îî 
IsTracingEnabled
îî $
)
îî$ %
{
ïï 

_stopWatch
ññ 
.
ññ 
Stop
ññ #
(
ññ# $
)
ññ$ %
;
ññ% &
_logger
óó 
.
óó 
LogInformation
óó *
(
óó* +
$"
óó+ -
$stróó- ¢
{óó¢ £

_stopWatchóó£ ≠
.óó≠ Æ#
ElapsedMillisecondsóóÆ ¡
}óó¡ ¬
$stróó¬ ƒ
"óóƒ ≈
)óó≈ ∆
;óó∆ «
}
òò 
}
ôô 
}
öö 	
public
ùù 
bool
ùù 1
#UpdatePrivateArticleWithSharedUsers
ùù 7
(
ùù7 8
Article
ùù8 ?
article
ùù@ G
,
ùùG H
List
ùùI M
<
ùùM N
int
ùùN Q
>
ùùQ R
SharedUsersId
ùùS `
)
ùù` a
{
ûû 	
if
üü 
(
üü 
IsTracingEnabled
üü  
)
üü  !

_stopWatch
üü" ,
.
üü, -
Start
üü- 2
(
üü2 3
)
üü3 4
;
üü4 5

Validation
†† 
.
†† 
ValidateArticle
†† &
(
††& '
article
††' .
)
††. /
;
††/ 0
try
°° 
{
¢¢ 
UpdateArticle
££ 
(
££ 
article
££ %
)
££% &
;
££& '
var
•• !
ExistingSharedUsers
•• '
=
••( )
_context
••* 2
.
••2 3!
PrivateArticleUsers
••3 F
.
••F G
Where
••G L
(
••L M
item
••M Q
=>
••R T
item
••U Y
.
••Y Z
	ArticleId
••Z c
==
••d f
article
••g n
.
••n o
	ArticleId
••o x
)
••x y
;
••y z
_context
¶¶ 
.
¶¶ !
PrivateArticleUsers
¶¶ ,
.
¶¶, -
RemoveRange
¶¶- 8
(
¶¶8 9!
ExistingSharedUsers
¶¶9 L
)
¶¶L M
;
¶¶M N
if
®® 
(
®® 
SharedUsersId
®® !
.
®®! "
Count
®®" '
>
®®( )
$num
®®* +
)
®®+ ,
SharedUsersId
®®- :
.
®®: ;
ForEach
®®; B
(
®®B C
UserId
®®C I
=>
®®J L
_context
®®M U
.
®®U V!
PrivateArticleUsers
®®V i
.
®®i j
Update
®®j p
(
®®p q
new
®®q t"
PrivateArticleUsers®®u à
(®®à â
article®®â ê
.®®ê ë
	ArticleId®®ë ö
,®®ö õ
UserId®®ú ¢
)®®¢ £
)®®£ §
)®®§ •
;®®• ¶
_context
©© 
.
©© 
SaveChanges
©© $
(
©©$ %
)
©©% &
;
©©& '
return
™™ 
true
™™ 
;
™™ 
}
´´ 
catch
¨¨ 
(
¨¨ 
	Exception
¨¨ 
	exception
¨¨ &
)
¨¨& '
{
≠≠ 
_logger
ÆÆ 
.
ÆÆ 
LogError
ÆÆ  
(
ÆÆ  !
HelperService
ÆÆ! .
.
ÆÆ. /
LoggerMessage
ÆÆ/ <
(
ÆÆ< =
$str
ÆÆ= P
,
ÆÆP Q
$strÆÆR í
,ÆÆí ì
	exceptionÆÆî ù
,ÆÆù û
articleÆÆü ¶
)ÆÆ¶ ß
)ÆÆß ®
;ÆÆ® ©
return
ØØ 
false
ØØ 
;
ØØ 
}
∞∞ 
finally
±± 
{
≤≤ 
if
≥≥ 
(
≥≥ 
IsTracingEnabled
≥≥ $
)
≥≥$ %
{
¥¥ 

_stopWatch
µµ 
.
µµ 
Stop
µµ #
(
µµ# $
)
µµ$ %
;
µµ% &
_logger
∂∂ 
.
∂∂ 
LogInformation
∂∂ *
(
∂∂* +
$"
∂∂+ -
$str∂∂- ö
{∂∂ö õ

_stopWatch∂∂õ •
.∂∂• ¶#
ElapsedMilliseconds∂∂¶ π
}∂∂π ∫
$str∂∂∫ º
"∂∂º Ω
)∂∂Ω æ
;∂∂æ ø
}
∑∑ 
}
∏∏ 
}
ππ 	
public
ºº 
bool
ºº &
DeleteArticleByArticleId
ºº ,
(
ºº, -
int
ºº- 0
	ArticleId
ºº1 :
)
ºº: ;
{
ΩΩ 	
if
ææ 
(
ææ 
IsTracingEnabled
ææ  
)
ææ  !

_stopWatch
ææ" ,
.
ææ, -
Start
ææ- 2
(
ææ2 3
)
ææ3 4
;
ææ4 5
if
øø 
(
øø 
	ArticleId
øø 
<=
øø 
$num
øø 
)
øø 
throw
øø  %
new
øø& )
ArgumentException
øø* ;
(
øø; <
$"
øø< >
$str
øø> p
{
øøp q
	ArticleId
øøq z
}
øøz {
"
øø{ |
)
øø| }
;
øø} ~
try
¿¿ 
{
¡¡ 
var
¬¬ "
ExistingDraftArticle
¬¬ (
=
¬¬) *
_context
¬¬+ 3
.
¬¬3 4
Articles
¬¬4 <
.
¬¬< =
FirstOrDefault
¬¬= K
(
¬¬K L
item
¬¬L P
=>
¬¬Q S
item
¬¬T X
.
¬¬X Y
	ArticleId
¬¬Y b
==
¬¬c e
	ArticleId
¬¬f o
&&
¬¬p r
item
¬¬s w
.
¬¬w x
ArticleStatusID¬¬x á
==¬¬à ä
$num¬¬ã å
)¬¬å ç
;¬¬ç é
if
√√ 
(
√√ "
ExistingDraftArticle
√√ (
==
√√) +
null
√√, 0
)
√√0 1
throw
√√2 7
new
√√8 ;#
ItemNotFoundException
√√< Q
(
√√Q R
$"
√√R T
$str
√√T z
{
√√z {
	ArticleId√√{ Ñ
}√√Ñ Ö
"√√Ö Ü
)√√Ü á
;√√á à
_context
ƒƒ 
.
ƒƒ 
Articles
ƒƒ !
.
ƒƒ! "
Remove
ƒƒ" (
(
ƒƒ( )"
ExistingDraftArticle
ƒƒ) =
)
ƒƒ= >
;
ƒƒ> ?
_context
≈≈ 
.
≈≈ 
SaveChanges
≈≈ $
(
≈≈$ %
)
≈≈% &
;
≈≈& '
return
∆∆ 
true
∆∆ 
;
∆∆ 
}
«« 
catch
»» 
(
»» 
	Exception
»» 
	exception
»» &
)
»»& '
{
…… 
_logger
   
.
   
LogError
    
(
    !
HelperService
  ! .
.
  . /
LoggerMessage
  / <
(
  < =
$str
  = P
,
  P Q
$str
  R {
,
  { |
	exception  } Ü
,  Ü á
	ArticleId  à ë
)  ë í
)  í ì
;  ì î
return
ÀÀ 
false
ÀÀ 
;
ÀÀ 
}
ÃÃ 
finally
ÕÕ 
{
ŒŒ 
if
œœ 
(
œœ 
IsTracingEnabled
œœ $
)
œœ$ %
{
–– 

_stopWatch
—— 
.
—— 
Stop
—— #
(
——# $
)
——$ %
;
——% &
_logger
““ 
.
““ 
LogInformation
““ *
(
““* +
$"
““+ -
$str““- É
{““É Ñ

_stopWatch““Ñ é
.““é è#
ElapsedMilliseconds““è ¢
}““¢ £
$str““£ •
"““• ¶
)““¶ ß
;““ß ®
}
”” 
}
‘‘ 
}
’’ 	
public
ÿÿ 
Article
ÿÿ 
GetArticleByID
ÿÿ %
(
ÿÿ% &
int
ÿÿ& )
	ArticleId
ÿÿ* 3
)
ÿÿ3 4
{
ŸŸ 	
if
⁄⁄ 
(
⁄⁄ 
IsTracingEnabled
⁄⁄  
)
⁄⁄  !

_stopWatch
⁄⁄" ,
.
⁄⁄, -
Start
⁄⁄- 2
(
⁄⁄2 3
)
⁄⁄3 4
;
⁄⁄4 5
if
€€ 
(
€€ 
	ArticleId
€€ 
<=
€€ 
$num
€€ 
)
€€ 
throw
€€  %
new
€€& )
ArgumentException
€€* ;
(
€€; <
$"
€€< >
$str
€€> p
{
€€p q
	ArticleId
€€q z
}
€€z {
"
€€{ |
)
€€| }
;
€€} ~
Article
‹‹ 
?
‹‹ 
ExistingArticle
‹‹ $
;
‹‹$ %
try
›› 
{
ﬁﬁ 
ExistingArticle
ﬂﬂ 
=
ﬂﬂ  !
_context
ﬂﬂ" *
.
ﬂﬂ* +
Articles
ﬂﬂ+ 3
.
ﬂﬂ3 4
Include
ﬂﬂ4 ;
(
ﬂﬂ; <
e
ﬂﬂ< =
=>
ﬂﬂ> @
e
ﬂﬂA B
.
ﬂﬂB C
ArticleStatus
ﬂﬂC P
)
ﬂﬂP Q
.
ﬂﬂQ R
Include
ﬂﬂR Y
(
ﬂﬂY Z
e
ﬂﬂZ [
=>
ﬂﬂ\ ^
e
ﬂﬂ_ `
.
ﬂﬂ` a
User
ﬂﬂa e
)
ﬂﬂe f
.
ﬂﬂf g
FirstOrDefault
ﬂﬂg u
(
ﬂﬂu v
item
ﬂﬂv z
=>
ﬂﬂ{ }
itemﬂﬂ~ Ç
.ﬂﬂÇ É
	ArticleIdﬂﬂÉ å
==ﬂﬂç è
	ArticleIdﬂﬂê ô
)ﬂﬂô ö
;ﬂﬂö õ
return
‡‡ 
ExistingArticle
‡‡ &
!=
‡‡' )
null
‡‡* .
?
‡‡/ 0
ExistingArticle
‡‡1 @
:
‡‡A B
throw
‡‡C H
new
‡‡I L#
ItemNotFoundException
‡‡M b
(
‡‡b c
$"
‡‡c e
$str‡‡e ó
{‡‡ó ò
	ArticleId‡‡ò °
}‡‡° ¢
"‡‡¢ £
)‡‡£ §
;‡‡§ •
}
·· 
catch
‚‚ 
(
‚‚ 
	Exception
‚‚ 
	exception
‚‚ &
)
‚‚& '
{
„„ 
_logger
‰‰ 
.
‰‰ 
LogError
‰‰  
(
‰‰  !
HelperService
‰‰! .
.
‰‰. /
LoggerMessage
‰‰/ <
(
‰‰< =
$str
‰‰= P
,
‰‰P Q
$str
‰‰R q
,
‰‰q r
	exception
‰‰s |
,
‰‰| }
	ArticleId‰‰~ á
)‰‰á à
)‰‰à â
;‰‰â ä
throw
ÂÂ 
;
ÂÂ 
}
ÊÊ 
finally
ÁÁ 
{
ËË 
if
ÈÈ 
(
ÈÈ 
IsTracingEnabled
ÈÈ $
)
ÈÈ$ %
{
ÍÍ 

_stopWatch
ÎÎ 
.
ÎÎ 
Stop
ÎÎ #
(
ÎÎ# $
)
ÎÎ$ %
;
ÎÎ% &
_logger
ÏÏ 
.
ÏÏ 
LogInformation
ÏÏ *
(
ÏÏ* +
$"
ÏÏ+ -
$str
ÏÏ- y
{
ÏÏy z

_stopWatchÏÏz Ñ
.ÏÏÑ Ö#
ElapsedMillisecondsÏÏÖ ò
}ÏÏò ô
$strÏÏô õ
"ÏÏõ ú
)ÏÏú ù
;ÏÏù û
}
ÌÌ 
}
ÓÓ 
}
ÔÔ 	
public
ÚÚ 
IEnumerable
ÚÚ 
<
ÚÚ 
Article
ÚÚ "
>
ÚÚ" #
GetArticles
ÚÚ$ /
(
ÚÚ/ 0
)
ÚÚ0 1
{
ÛÛ 	
if
ÙÙ 
(
ÙÙ 
IsTracingEnabled
ÙÙ  
)
ÙÙ  !

_stopWatch
ÙÙ" ,
.
ÙÙ, -
Start
ÙÙ- 2
(
ÙÙ2 3
)
ÙÙ3 4
;
ÙÙ4 5
try
ıı 
{
ˆˆ 
var
˜˜ 
ListOfArticle
˜˜ !
=
˜˜" #
_context
˜˜$ ,
.
˜˜, -
Articles
˜˜- 5
.
˜˜5 6
Where
˜˜6 ;
(
˜˜; <
item
˜˜< @
=>
˜˜A C
item
˜˜D H
.
˜˜H I
	CreatedOn
˜˜I R
>
˜˜S T
DateTime
˜˜U ]
.
˜˜] ^
Now
˜˜^ a
.
˜˜a b
	AddMonths
˜˜b k
(
˜˜k l
-
˜˜l m
GetRange
˜˜m u
(
˜˜u v
)
˜˜v w
)
˜˜w x
)
˜˜x y
.
˜˜y z
Include˜˜z Å
(˜˜Å Ç
e˜˜Ç É
=>˜˜Ñ Ü
e˜˜á à
.˜˜à â
ArticleStatus˜˜â ñ
)˜˜ñ ó
.˜˜ó ò
Include˜˜ò ü
(˜˜ü †
e˜˜† °
=>˜˜¢ §
e˜˜• ¶
.˜˜¶ ß
User˜˜ß ´
)˜˜´ ¨
.˜˜¨ ≠
ToList˜˜≠ ≥
(˜˜≥ ¥
)˜˜¥ µ
;˜˜µ ∂
return
¯¯ 
ListOfArticle
¯¯ $
;
¯¯$ %
}
˘˘ 
catch
˙˙ 
(
˙˙ 
	Exception
˙˙ 
	exception
˙˙ &
)
˙˙& '
{
˚˚ 
_logger
¸¸ 
.
¸¸ 
LogError
¸¸  
(
¸¸  !
HelperService
¸¸! .
.
¸¸. /
LoggerMessage
¸¸/ <
(
¸¸< =
$str
¸¸= P
,
¸¸P Q
$str
¸¸R a
,
¸¸a b
	exception
¸¸c l
)
¸¸l m
)
¸¸m n
;
¸¸n o
throw
˝˝ 
;
˝˝ 
}
˛˛ 
finally
ˇˇ 
{
ÄÄ 
if
ÅÅ 
(
ÅÅ 
IsTracingEnabled
ÅÅ $
)
ÅÅ$ %
{
ÇÇ 

_stopWatch
ÉÉ 
.
ÉÉ 
Stop
ÉÉ #
(
ÉÉ# $
)
ÉÉ$ %
;
ÉÉ% &
_logger
ÑÑ 
.
ÑÑ 
LogInformation
ÑÑ *
(
ÑÑ* +
$"
ÑÑ+ -
$str
ÑÑ- i
{
ÑÑi j

_stopWatch
ÑÑj t
.
ÑÑt u"
ElapsedMillisecondsÑÑu à
}ÑÑà â
$strÑÑâ ã
"ÑÑã å
)ÑÑå ç
;ÑÑç é
}
ÖÖ 
}
ÜÜ 
}
áá 	
public
ää 
IEnumerable
ää 
<
ää 
Article
ää "
>
ää" #*
GetArticlesByArticleStatusId
ää$ @
(
ää@ A
int
ääA D
ArticleStatusID
ääE T
,
ääT U
bool
ääV Z

IsReviewer
ää[ e
=
ääf g
false
ääh m
)
ääm n
{
åå 	
if
çç 
(
çç 
IsTracingEnabled
çç  
)
çç  !

_stopWatch
çç" ,
.
çç, -
Start
çç- 2
(
çç2 3
)
çç3 4
;
çç4 5
if
éé 
(
éé 
ArticleStatusID
éé 
<=
éé  "
$num
éé# $
||
éé% '
ArticleStatusID
éé( 7
>
éé8 9
$num
éé: ;
)
éé; <
throw
éé= B
new
ééC F
ArgumentException
ééG X
(
ééX Y
$"
ééY [
$stréé[ ï
{ééï ñ
ArticleStatusIDééñ •
}éé• ¶
"éé¶ ß
)ééß ®
;éé® ©
try
èè 
{
êê 
var
íí 
ListOfArticle
íí !
=
íí" #
(
íí$ %
ArticleStatusID
íí% 4
>
íí5 6
$num
íí7 8
)
íí8 9
&&
íí: <

IsReviewer
íí= G
?
ííH I
_context
ííJ R
.
ííR S
Articles
ííS [
.
íí[ \
Where
íí\ a
(
íía b
item
ííb f
=>
ííg i
item
ííj n
.
íín o
	CreatedOn
íío x
>
ííy z
DateTimeíí{ É
.ííÉ Ñ
NowííÑ á
.ííá à
	AddMonthsííà ë
(ííë í
-ííí ì
GetRangeííì õ
(ííõ ú
)ííú ù
)ííù û
&&ííü °
itemíí¢ ¶
.íí¶ ß
ArticleStatusIDííß ∂
==íí∑ π
ArticleStatusIDíí∫ …
)íí…  
.íí  À
IncludeííÀ “
(íí“ ”
eíí” ‘
=>íí’ ◊
eííÿ Ÿ
.ííŸ ⁄
ArticleStatusíí⁄ Á
)ííÁ Ë
.ííË È
IncludeííÈ 
(íí Ò
eííÒ Ú
=>ííÛ ı
eííˆ ˜
.íí˜ ¯
Useríí¯ ¸
)íí¸ ˝
.íí˝ ˛
ToListíí˛ Ñ
(ííÑ Ö
)ííÖ Ü
:ííá à
_context
ìì 
.
ìì 
Articles
ìì !
.
ìì! "
Where
ìì" '
(
ìì' (
item
ìì( ,
=>
ìì- /
item
ìì0 4
.
ìì4 5
	CreatedOn
ìì5 >
>
ìì? @
DateTime
ììA I
.
ììI J
Now
ììJ M
.
ììM N
	AddMonths
ììN W
(
ììW X
-
ììX Y
GetRange
ììY a
(
ììa b
)
ììb c
)
ììc d
&&
ììe g
!
ììh i
item
ììi m
.
ììm n
	IsPrivate
ììn w
&&
ììx z
item
ìì{ 
.ìì Ä
ArticleStatusIDììÄ è
==ììê í
ArticleStatusIDììì ¢
)ìì¢ £
.ìì£ §
Includeìì§ ´
(ìì´ ¨
eìì¨ ≠
=>ììÆ ∞
eìì± ≤
.ìì≤ ≥
ArticleStatusìì≥ ¿
)ìì¿ ¡
.ìì¡ ¬
Includeìì¬ …
(ìì…  
eìì  À
=>ììÃ Œ
eììœ –
.ìì– —
Userìì— ’
)ìì’ ÷
.ìì÷ ◊
ToListìì◊ ›
(ìì› ﬁ
)ììﬁ ﬂ
;ììﬂ ‡
return
îî 
ListOfArticle
îî $
;
îî$ %
}
ïï 
catch
ññ 
(
ññ 
	Exception
ññ 
	exception
ññ &
)
ññ& '
{
óó 
_logger
òò 
.
òò 
LogError
òò  
(
òò  !
HelperService
òò! .
.
òò. /
LoggerMessage
òò/ <
(
òò< =
$str
òò= P
,
òòP Q
$stròòR ñ
,òòñ ó
	exceptionòòò °
)òò° ¢
)òò¢ £
;òò£ §
throw
ôô 
;
ôô 
}
öö 
finally
õõ 
{
úú 
if
ùù 
(
ùù 
IsTracingEnabled
ùù $
)
ùù$ %
{
ûû 

_stopWatch
üü 
.
üü 
Stop
üü #
(
üü# $
)
üü$ %
;
üü% &
_logger
†† 
.
†† 
LogInformation
†† *
(
††* +
$"
††+ -
$str††- û
{††û ü

_stopWatch††ü ©
.††© ™#
ElapsedMilliseconds††™ Ω
}††Ω æ
$str††æ ¿
"††¿ ¡
)††¡ ¬
;††¬ √
}
°° 
}
¢¢ 
}
££ 	
public
¶¶ 
IEnumerable
¶¶ 
<
¶¶ 
Article
¶¶ "
>
¶¶" # 
GetArticlesByTitle
¶¶$ 6
(
¶¶6 7
string
¶¶7 =
Title
¶¶> C
)
¶¶C D
{
ßß 	
if
®® 
(
®® 
IsTracingEnabled
®®  
)
®®  !

_stopWatch
®®" ,
.
®®, -
Start
®®- 2
(
®®2 3
)
®®3 4
;
®®4 5
if
©© 
(
©© 
String
©© 
.
©© 
IsNullOrEmpty
©© $
(
©©$ %
Title
©©% *
)
©©* +
)
©©+ ,
throw
©©- 2
new
©©3 6!
ValidationException
©©7 J
(
©©J K
$str
©©K r
)
©©r s
;
©©s t
try
™™ 
{
´´ 
return
≠≠ 
_context
≠≠ 
.
≠≠  
Articles
≠≠  (
.
≠≠( )
Where
≠≠) .
(
≠≠. /
article
≠≠/ 6
=>
≠≠7 9
article
≠≠: A
.
≠≠A B
Title
≠≠B G
!
≠≠G H
.
≠≠H I
Contains
≠≠I Q
(
≠≠Q R
Title
≠≠R W
)
≠≠W X
&&
≠≠Y [
article
≠≠\ c
.
≠≠c d
ArticleStatusID
≠≠d s
==
≠≠t v
$num
≠≠w x
)
≠≠x y
.
≠≠y z
Include≠≠z Å
(≠≠Å Ç
e≠≠Ç É
=>≠≠Ñ Ü
e≠≠á à
.≠≠à â
ArticleStatus≠≠â ñ
)≠≠ñ ó
.≠≠ó ò
Include≠≠ò ü
(≠≠ü †
e≠≠† °
=>≠≠¢ §
e≠≠• ¶
.≠≠¶ ß
User≠≠ß ´
)≠≠´ ¨
;≠≠¨ ≠
}
ÆÆ 
catch
ØØ 
(
ØØ 
	Exception
ØØ 
	exception
ØØ &
)
ØØ& '
{
∞∞ 
_logger
±± 
.
±± 
LogError
±±  
(
±±  !
HelperService
±±! .
.
±±. /
LoggerMessage
±±/ <
(
±±< =
$str
±±= P
,
±±P Q
$str
±±R t
,
±±t u
	exception
±±v 
,±± Ä
Title±±Å Ü
)±±Ü á
)±±á à
;±±à â
throw
≤≤ 
;
≤≤ 
}
≥≥ 
finally
¥¥ 
{
µµ 
if
∂∂ 
(
∂∂ 
IsTracingEnabled
∂∂ $
)
∂∂$ %
{
∑∑ 

_stopWatch
∏∏ 
.
∏∏ 
Stop
∏∏ #
(
∏∏# $
)
∏∏$ %
;
∏∏% &
_logger
ππ 
.
ππ 
LogInformation
ππ *
(
ππ* +
$"
ππ+ -
$str
ππ- |
{
ππ| }

_stopWatchππ} á
.ππá à#
ElapsedMillisecondsππà õ
}ππõ ú
$strππú û
"ππû ü
)ππü †
;ππ† °
}
∫∫ 
}
ªª 
}
ºº 	
public
øø 
IEnumerable
øø 
<
øø 
Article
øø "
>
øø" #!
GetArticlesByAuthor
øø$ 7
(
øø7 8
string
øø8 >

AuthorName
øø? I
)
øøI J
{
¿¿ 	
if
¡¡ 
(
¡¡ 
IsTracingEnabled
¡¡  
)
¡¡  !

_stopWatch
¡¡" ,
.
¡¡, -
Start
¡¡- 2
(
¡¡2 3
)
¡¡3 4
;
¡¡4 5
if
¬¬ 
(
¬¬ 
String
¬¬ 
.
¬¬ 
IsNullOrEmpty
¬¬ $
(
¬¬$ %

AuthorName
¬¬% /
)
¬¬/ 0
)
¬¬0 1
throw
¬¬2 7
new
¬¬8 ;
ArgumentException
¬¬< M
(
¬¬M N
$str
¬¬N n
)
¬¬n o
;
¬¬o p
try
√√ 
{
ƒƒ 
return
∆∆ 
_context
∆∆ 
.
∆∆  
Articles
∆∆  (
.
∆∆( )
Where
∆∆) .
(
∆∆. /
article
∆∆/ 6
=>
∆∆7 9
article
∆∆: A
.
∆∆A B
User
∆∆B F
!
∆∆F G
.
∆∆G H
FullName
∆∆H P
.
∆∆P Q
Contains
∆∆Q Y
(
∆∆Y Z

AuthorName
∆∆Z d
)
∆∆d e
&&
∆∆f h
article
∆∆i p
.
∆∆p q
ArticleStatusID∆∆q Ä
==∆∆Å É
$num∆∆Ñ Ö
)∆∆Ö Ü
.∆∆Ü á
Include∆∆á é
(∆∆é è
e∆∆è ê
=>∆∆ë ì
e∆∆î ï
.∆∆ï ñ
ArticleStatus∆∆ñ £
)∆∆£ §
.∆∆§ •
Include∆∆• ¨
(∆∆¨ ≠
e∆∆≠ Æ
=>∆∆Ø ±
e∆∆≤ ≥
.∆∆≥ ¥
User∆∆¥ ∏
)∆∆∏ π
;∆∆π ∫
}
«« 
catch
»» 
(
»» 
	Exception
»» 
	exception
»» &
)
»»& '
{
…… 
_logger
   
.
   
LogError
    
(
    !
HelperService
  ! .
.
  . /
LoggerMessage
  / <
(
  < =
$str
  = M
,
  M N
$str
  O w
,
  w x
	exception  y Ç
,  Ç É

AuthorName  Ñ é
)  é è
)  è ê
;  ê ë
throw
ÀÀ 
;
ÀÀ 
}
ÃÃ 
finally
ÕÕ 
{
ŒŒ 
if
œœ 
(
œœ 
IsTracingEnabled
œœ $
)
œœ$ %
{
–– 

_stopWatch
—— 
.
—— 
Stop
—— #
(
——# $
)
——$ %
;
——% &
_logger
““ 
.
““ 
LogInformation
““ *
(
““* +
$"
““+ -
$str““- Ç
{““Ç É

_stopWatch““É ç
.““ç é#
ElapsedMilliseconds““é °
}““° ¢
$str““¢ §
"““§ •
)““• ¶
;““¶ ß
}
”” 
}
‘‘ 
}
’’ 	
public
ŸŸ 
IEnumerable
ŸŸ 
<
ŸŸ 
Article
ŸŸ "
>
ŸŸ" #%
GetArticlesByReviewerId
ŸŸ$ ;
(
ŸŸ; <
int
ŸŸ< ?

ReviewerId
ŸŸ@ J
)
ŸŸJ K
{
⁄⁄ 	
if
€€ 
(
€€ 
IsTracingEnabled
€€  
)
€€  !

_stopWatch
€€" ,
.
€€, -
Start
€€- 2
(
€€2 3
)
€€3 4
;
€€4 5
if
‹‹ 
(
‹‹ 

ReviewerId
‹‹ 
<=
‹‹ 
$num
‹‹ 
)
‹‹  
throw
‹‹! &
new
‹‹' *
ArgumentException
‹‹+ <
(
‹‹< =
$"
‹‹= ?
$str
‹‹? r
{
‹‹r s

ReviewerId
‹‹s }
}
‹‹} ~
"
‹‹~ 
)‹‹ Ä
;‹‹Ä Å
try
›› 
{
ﬁﬁ 
return
ﬂﬂ 
_context
ﬂﬂ 
.
ﬂﬂ  
Articles
ﬂﬂ  (
.
ﬂﬂ( )
Where
ﬂﬂ) .
(
ﬂﬂ. /
article
ﬂﬂ/ 6
=>
ﬂﬂ7 9
article
ﬂﬂ: A
.
ﬂﬂA B

ReviewerId
ﬂﬂB L
==
ﬂﬂM O

ReviewerId
ﬂﬂP Z
)
ﬂﬂZ [
.
ﬂﬂ[ \
Include
ﬂﬂ\ c
(
ﬂﬂc d
e
ﬂﬂd e
=>
ﬂﬂf h
e
ﬂﬂi j
.
ﬂﬂj k
ArticleStatus
ﬂﬂk x
)
ﬂﬂx y
.
ﬂﬂy z
Includeﬂﬂz Å
(ﬂﬂÅ Ç
eﬂﬂÇ É
=>ﬂﬂÑ Ü
eﬂﬂá à
.ﬂﬂà â
Userﬂﬂâ ç
)ﬂﬂç é
;ﬂﬂé è
}
‡‡ 
catch
·· 
(
·· 
	Exception
·· 
	exception
·· &
)
··& '
{
‚‚ 
_logger
„„ 
.
„„ 
LogError
„„  
(
„„  !
HelperService
„„! .
.
„„. /
LoggerMessage
„„/ <
(
„„< =
$str
„„= O
,
„„O P
$str
„„Q {
,
„„{ |
	exception„„} Ü
,„„Ü á

ReviewerId„„à í
)„„í ì
)„„ì î
;„„î ï
throw
‰‰ 
;
‰‰ 
}
ÂÂ 
finally
ÊÊ 
{
ÁÁ 
if
ËË 
(
ËË 
IsTracingEnabled
ËË $
)
ËË$ %
{
ÈÈ 

_stopWatch
ÍÍ 
.
ÍÍ 
Stop
ÍÍ #
(
ÍÍ# $
)
ÍÍ$ %
;
ÍÍ% &
_logger
ÎÎ 
.
ÎÎ 
LogInformation
ÎÎ *
(
ÎÎ* +
$"
ÎÎ+ -
$strÎÎ- É
{ÎÎÉ Ñ

_stopWatchÎÎÑ é
.ÎÎé è#
ElapsedMillisecondsÎÎè ¢
}ÎÎ¢ £
$strÎÎ£ •
"ÎÎ• ¶
)ÎÎ¶ ß
;ÎÎß ®
}
ÏÏ 
}
ÌÌ 
}
ÓÓ 	
public
ÒÒ 
IEnumerable
ÒÒ 
<
ÒÒ 
Article
ÒÒ "
>
ÒÒ" #!
GetArticlesByUserId
ÒÒ$ 7
(
ÒÒ7 8
int
ÒÒ8 ;
UserId
ÒÒ< B
)
ÒÒB C
{
ÚÚ 	
if
ÛÛ 
(
ÛÛ 
IsTracingEnabled
ÛÛ  
)
ÛÛ  !

_stopWatch
ÛÛ" ,
.
ÛÛ, -
Start
ÛÛ- 2
(
ÛÛ2 3
)
ÛÛ3 4
;
ÛÛ4 5
if
ÙÙ 
(
ÙÙ 
UserId
ÙÙ 
<=
ÙÙ 
$num
ÙÙ 
)
ÙÙ 
throw
ÙÙ "
new
ÙÙ# &
ArgumentException
ÙÙ' 8
(
ÙÙ8 9
$"
ÙÙ9 ;
$str
ÙÙ; g
{
ÙÙg h
UserId
ÙÙh n
}
ÙÙn o
"
ÙÙo p
)
ÙÙp q
;
ÙÙq r
try
ıı 
{
ˆˆ 
return
˜˜ 
_context
˜˜ 
.
˜˜  
Articles
˜˜  (
.
˜˜( )
Where
˜˜) .
(
˜˜. /
item
˜˜/ 3
=>
˜˜4 6
item
˜˜7 ;
.
˜˜; <
	CreatedBy
˜˜< E
==
˜˜F H
UserId
˜˜I O
)
˜˜O P
.
˜˜P Q
Include
˜˜Q X
(
˜˜X Y
e
˜˜Y Z
=>
˜˜[ ]
e
˜˜^ _
.
˜˜_ `
ArticleStatus
˜˜` m
)
˜˜m n
.
˜˜n o
Include
˜˜o v
(
˜˜v w
e
˜˜w x
=>
˜˜y {
e
˜˜| }
.
˜˜} ~
User˜˜~ Ç
)˜˜Ç É
;˜˜É Ñ
}
¯¯ 
catch
˘˘ 
(
˘˘ 
	Exception
˘˘ 
	exception
˘˘ &
)
˘˘& '
{
˙˙ 
_logger
˚˚ 
.
˚˚ 
LogError
˚˚  
(
˚˚  !
HelperService
˚˚! .
.
˚˚. /
LoggerMessage
˚˚/ <
(
˚˚< =
$str
˚˚= P
,
˚˚P Q
$str
˚˚R s
,
˚˚s t
	exception
˚˚u ~
,
˚˚~ 
UserId˚˚Ä Ü
)˚˚Ü á
)˚˚á à
;˚˚à â
throw
¸¸ 
;
¸¸ 
}
˝˝ 
finally
˛˛ 
{
ˇˇ 
if
ÄÄ 
(
ÄÄ 
IsTracingEnabled
ÄÄ $
)
ÄÄ$ %
{
ÅÅ 

_stopWatch
ÇÇ 
.
ÇÇ 
Stop
ÇÇ #
(
ÇÇ# $
)
ÇÇ$ %
;
ÇÇ% &
_logger
ÉÉ 
.
ÉÉ 
LogInformation
ÉÉ *
(
ÉÉ* +
$"
ÉÉ+ -
$str
ÉÉ- {
{
ÉÉ{ |

_stopWatchÉÉ| Ü
.ÉÉÜ á#
ElapsedMillisecondsÉÉá ö
}ÉÉö õ
$strÉÉõ ù
"ÉÉù û
)ÉÉû ü
;ÉÉü †
}
ÑÑ 
}
ÖÖ 
}
ÜÜ 	
public
ââ 
IEnumerable
ââ 
<
ââ !
PrivateArticleUsers
ââ .
>
ââ. /,
GetPrivateArticleUsersByUserId
ââ0 N
(
ââN O
int
ââO R
UserId
ââS Y
)
ââY Z
{
ää 	
if
ãã 
(
ãã 
IsTracingEnabled
ãã  
)
ãã  !

_stopWatch
ãã" ,
.
ãã, -
Start
ãã- 2
(
ãã2 3
)
ãã3 4
;
ãã4 5
if
åå 
(
åå 
UserId
åå 
<=
åå 
$num
åå 
)
åå 
throw
åå "
new
åå# &
ArgumentException
åå' 8
(
åå8 9
$"
åå9 ;
$str
åå; g
{
ååg h
UserId
ååh n
}
åån o
"
ååo p
)
ååp q
;
ååq r
try
çç 
{
éé 
var
èè #
ListofPrivateArticles
èè )
=
èè* +
_context
èè, 4
.
èè4 5!
PrivateArticleUsers
èè5 H
.
èèH I
Include
èèI P
(
èèP Q
e
èèQ R
=>
èèS U
e
èèV W
.
èèW X
article
èèX _
)
èè_ `
.
èè` a
Where
èèa f
(
èèf g
item
èèg k
=>
èèl n
item
èèo s
.
èès t
UserId
èèt z
==
èè{ }
UserIdèè~ Ñ
&&èèÜ à
itemèèâ ç
.èèç é
articleèèé ï
!èèï ñ
.èèñ ó
ArticleStatusIDèèó ¶
==èè¶ ®
$numèè® ©
)èè© ™
;èè™ ´
return
êê #
ListofPrivateArticles
êê ,
;
êê, -
}
ëë 
catch
íí 
(
íí 
	Exception
íí 
	exception
íí &
)
íí& '
{
ìì 
_logger
îî 
.
îî 
LogError
îî  
(
îî  !
HelperService
îî! .
.
îî. /
LoggerMessage
îî/ <
(
îî< =
$str
îî= P
,
îîP Q
$str
îîR z
,
îîz {
	exceptionîî| Ö
)îîÖ Ü
)îîÜ á
;îîá à
throw
ïï 
;
ïï 
}
ññ 
finally
óó 
{
òò 
if
ôô 
(
ôô 
IsTracingEnabled
ôô $
)
ôô$ %
{
öö 

_stopWatch
õõ 
.
õõ 
Stop
õõ #
(
õõ# $
)
õõ$ %
;
õõ% &
_logger
úú 
.
úú 
LogInformation
úú *
(
úú* +
$"
úú+ -
$strúú- Ç
{úúÇ É

_stopWatchúúÉ ç
.úúç é#
ElapsedMillisecondsúúé °
}úú° ¢
$strúú¢ §
"úú§ •
)úú• ¶
;úú¶ ß
}
ùù 
}
ûû 
}
üü 	
public
¢¢ 
IEnumerable
¢¢ 
<
¢¢ !
PrivateArticleUsers
¢¢ .
>
¢¢. //
!GetPrivateArticleUsersByArticleId
¢¢0 Q
(
¢¢Q R
int
¢¢R U
	ArticleId
¢¢V _
)
¢¢_ `
{
££ 	
if
§§ 
(
§§ 
IsTracingEnabled
§§  
)
§§  !

_stopWatch
§§" ,
.
§§, -
Start
§§- 2
(
§§2 3
)
§§3 4
;
§§4 5
if
•• 
(
•• 
	ArticleId
•• 
<=
•• 
$num
•• 
)
•• 
throw
••  %
new
••& )
ArgumentException
••* ;
(
••; <
$"
••< >
$str
••> p
{
••p q
	ArticleId
••q z
}
••z {
"
••{ |
)
••| }
;
••} ~
try
¶¶ 
{
ßß 
var
®® #
ListofPrivateArticles
®® )
=
®®* +
_context
®®, 4
.
®®4 5!
PrivateArticleUsers
®®5 H
.
®®H I
Where
®®I N
(
®®N O
item
®®O S
=>
®®T V
item
®®W [
.
®®[ \
	ArticleId
®®\ e
==
®®f h
	ArticleId
®®i r
)
®®r s
.
®®s t
Include
®®t {
(
®®{ |
e
®®| }
=>®®~ Ä
e®®Å Ç
.®®Ç É
user®®É á
)®®á à
;®®à â
return
©© #
ListofPrivateArticles
©© ,
;
©©, -
}
™™ 
catch
´´ 
(
´´ 
	Exception
´´ 
	exception
´´ &
)
´´& '
{
¨¨ 
_logger
≠≠ 
.
≠≠ 
LogError
≠≠  
(
≠≠  !
HelperService
≠≠! .
.
≠≠. /
LoggerMessage
≠≠/ <
(
≠≠< =
$str
≠≠= P
,
≠≠P Q
$str
≠≠R q
,
≠≠q r
	exception
≠≠s |
)
≠≠| }
)
≠≠} ~
;
≠≠~ 
throw
ÆÆ 
;
ÆÆ 
}
ØØ 
finally
∞∞ 
{
±± 
if
≤≤ 
(
≤≤ 
IsTracingEnabled
≤≤ $
)
≤≤$ %
{
≥≥ 

_stopWatch
¥¥ 
.
¥¥ 
Stop
¥¥ #
(
¥¥# $
)
¥¥$ %
;
¥¥% &
_logger
µµ 
.
µµ 
LogInformation
µµ *
(
µµ* +
$"
µµ+ -
$strµµ- à
{µµà â

_stopWatchµµâ ì
.µµì î#
ElapsedMillisecondsµµî ß
}µµß ®
$strµµ® ™
"µµ™ ´
)µµ´ ¨
;µµ¨ ≠
}
∂∂ 
}
∑∑ 
}
∏∏ 	
public
ªª 
object
ªª  
GetCountOfArticles
ªª (
(
ªª( )
)
ªª) *
{
ºº 	
if
ΩΩ 
(
ΩΩ 
IsTracingEnabled
ΩΩ  
)
ΩΩ  !

_stopWatch
ΩΩ" ,
.
ΩΩ, -
Start
ΩΩ- 2
(
ΩΩ2 3
)
ΩΩ3 4
;
ΩΩ4 5
try
ææ 
{
øø 
var
¿¿ 
ListOfCounts
¿¿  
=
¿¿! "
new
¿¿# &
{
¡¡ #
TotalNumberOfArticles
¬¬ )
=
¬¬* +
_context
¬¬, 4
.
¬¬4 5
Articles
¬¬5 =
.
¬¬= >
Count
¬¬> C
(
¬¬C D
)
¬¬D E
,
¬¬E F
DraftArticles
√√ !
=
√√" #
_context
√√$ ,
.
√√, -
Articles
√√- 5
.
√√5 6
Count
√√6 ;
(
√√; <
item
√√< @
=>
√√A C
item
√√D H
.
√√H I
ArticleStatusID
√√I X
==
√√Y [
$num
√√\ ]
)
√√] ^
,
√√^ _"
ToBeReviewedArticles
ƒƒ (
=
ƒƒ) *
_context
ƒƒ+ 3
.
ƒƒ3 4
Articles
ƒƒ4 <
.
ƒƒ< =
Count
ƒƒ= B
(
ƒƒB C
item
ƒƒC G
=>
ƒƒH J
item
ƒƒK O
.
ƒƒO P
ArticleStatusID
ƒƒP _
==
ƒƒ` b
$num
ƒƒc d
)
ƒƒd e
,
ƒƒe f!
UnderReviewArticles
≈≈ '
=
≈≈( )
_context
≈≈* 2
.
≈≈2 3
Articles
≈≈3 ;
.
≈≈; <
Count
≈≈< A
(
≈≈A B
item
≈≈B F
=>
≈≈G I
item
≈≈J N
.
≈≈N O
ArticleStatusID
≈≈O ^
==
≈≈_ a
$num
≈≈b c
)
≈≈c d
,
≈≈d e
ArticlesPublished
∆∆ %
=
∆∆& '
_context
∆∆( 0
.
∆∆0 1
Articles
∆∆1 9
.
∆∆9 :
Count
∆∆: ?
(
∆∆? @
item
∆∆@ D
=>
∆∆E G
item
∆∆H L
.
∆∆L M
ArticleStatusID
∆∆M \
==
∆∆] _
$num
∆∆` a
)
∆∆a b
}
«« 
;
«« 
return
»» 
ListOfCounts
»» #
;
»»# $
}
…… 
catch
   
(
   
	Exception
   
	exception
   &
)
  & '
{
ÀÀ 
_logger
ÃÃ 
.
ÃÃ 
LogError
ÃÃ  
(
ÃÃ  !
HelperService
ÃÃ! .
.
ÃÃ. /
LoggerMessage
ÃÃ/ <
(
ÃÃ< =
$str
ÃÃ= P
,
ÃÃP Q
$str
ÃÃR h
,
ÃÃh i
	exception
ÃÃj s
)
ÃÃs t
)
ÃÃt u
;
ÃÃu v
throw
ÕÕ 
;
ÕÕ 
}
ŒŒ 
finally
œœ 
{
–– 
if
—— 
(
—— 
IsTracingEnabled
—— $
)
——$ %
{
““ 

_stopWatch
”” 
.
”” 
Stop
”” #
(
””# $
)
””$ %
;
””% &
_logger
‘‘ 
.
‘‘ 
LogInformation
‘‘ *
(
‘‘* +
$"
‘‘+ -
$str
‘‘- p
{
‘‘p q

_stopWatch
‘‘q {
.
‘‘{ |"
ElapsedMilliseconds‘‘| è
}‘‘è ê
$str‘‘ê í
"‘‘í ì
)‘‘ì î
;‘‘î ï
}
’’ 
}
÷÷ 
}
◊◊ 	
public
⁄⁄ 
bool
⁄⁄ 

AddComment
⁄⁄ 
(
⁄⁄ 
ArticleComment
⁄⁄ -
comment
⁄⁄. 5
)
⁄⁄5 6
{
€€ 	
if
‹‹ 
(
‹‹ 
IsTracingEnabled
‹‹  
)
‹‹  !

_stopWatch
‹‹" ,
.
‹‹, -
Start
‹‹- 2
(
‹‹2 3
)
‹‹3 4
;
‹‹4 5

Validation
›› 
.
›› $
ValidateArticleComment
›› -
(
››- .
comment
››. 5
)
››5 6
;
››6 7
try
ﬁﬁ 
{
ﬂﬂ 
_context
‡‡ 
.
‡‡ 
ArticleComments
‡‡ (
.
‡‡( )
Add
‡‡) ,
(
‡‡, -
comment
‡‡- 4
)
‡‡4 5
;
‡‡5 6
_context
·· 
.
·· 
SaveChanges
·· $
(
··$ %
)
··% &
;
··& '
return
‚‚ 
true
‚‚ 
;
‚‚ 
}
„„ 
catch
‰‰ 
(
‰‰ 
	Exception
‰‰ 
	exception
‰‰ &
)
‰‰& '
{
ÂÂ 
_logger
ÊÊ 
.
ÊÊ 
LogError
ÊÊ  
(
ÊÊ  !
HelperService
ÊÊ! .
.
ÊÊ. /
LoggerMessage
ÊÊ/ <
(
ÊÊ< =
$str
ÊÊ= P
,
ÊÊP Q
$str
ÊÊR v
,
ÊÊv w
	exceptionÊÊx Å
,ÊÊÅ Ç
commentÊÊÉ ä
)ÊÊä ã
)ÊÊã å
;ÊÊå ç
return
ÁÁ 
false
ÁÁ 
;
ÁÁ 
}
ËË 
finally
ÈÈ 
{
ÍÍ 
if
ÎÎ 
(
ÎÎ 
IsTracingEnabled
ÎÎ $
)
ÎÎ$ %
{
ÏÏ 

_stopWatch
ÌÌ 
.
ÌÌ 
Stop
ÌÌ #
(
ÌÌ# $
)
ÌÌ$ %
;
ÌÌ% &
_logger
ÓÓ 
.
ÓÓ 
LogInformation
ÓÓ *
(
ÓÓ* +
$"
ÓÓ+ -
$str
ÓÓ- ~
{
ÓÓ~ 

_stopWatchÓÓ â
.ÓÓâ ä#
ElapsedMillisecondsÓÓä ù
}ÓÓù û
$strÓÓû †
"ÓÓ† °
)ÓÓ° ¢
;ÓÓ¢ £
}
ÔÔ 
}
 
}
ÒÒ 	
public
ÙÙ 
IEnumerable
ÙÙ 
<
ÙÙ 
ArticleComment
ÙÙ )
>
ÙÙ) *$
GetCommentsByArticleId
ÙÙ+ A
(
ÙÙA B
int
ÙÙB E
	ArticleId
ÙÙF O
)
ÙÙO P
{
ıı 	
if
ˆˆ 
(
ˆˆ 
IsTracingEnabled
ˆˆ  
)
ˆˆ  !

_stopWatch
ˆˆ" ,
.
ˆˆ, -
Start
ˆˆ- 2
(
ˆˆ2 3
)
ˆˆ3 4
;
ˆˆ4 5
if
˜˜ 
(
˜˜ 
	ArticleId
˜˜ 
<=
˜˜ 
$num
˜˜ 
)
˜˜ 
throw
˜˜  %
new
˜˜& )
ArgumentException
˜˜* ;
(
˜˜; <
$"
˜˜< >
$str
˜˜> p
{
˜˜p q
	ArticleId
˜˜q z
}
˜˜z {
"
˜˜{ |
)
˜˜| }
;
˜˜} ~
try
¯¯ 
{
˘˘ 
var
˙˙ 
ListOfComments
˙˙ "
=
˙˙# $
_context
˙˙% -
.
˙˙- .
ArticleComments
˙˙. =
.
˙˙= >
Where
˙˙> C
(
˙˙C D
item
˙˙D H
=>
˙˙I K
item
˙˙L P
.
˙˙P Q
	ArticleId
˙˙Q Z
==
˙˙[ ]
	ArticleId
˙˙^ g
&&
˙˙h j
item
˙˙k o
.
˙˙o p
	CreatedOn
˙˙p y
>
˙˙z {
DateTime˙˙| Ñ
.˙˙Ñ Ö
Now˙˙Ö à
.˙˙à â
	AddMonths˙˙â í
(˙˙í ì
-˙˙ì î
GetRange˙˙î ú
(˙˙ú ù
)˙˙ù û
)˙˙û ü
)˙˙ü †
.˙˙† °
Include˙˙° ®
(˙˙® ©
e˙˙© ™
=>˙˙´ ≠
e˙˙Æ Ø
.˙˙Ø ∞
User˙˙∞ ¥
)˙˙¥ µ
.˙˙µ ∂
ToList˙˙∂ º
(˙˙º Ω
)˙˙Ω æ
;˙˙æ ø
return
˚˚ 
ListOfComments
˚˚ %
;
˚˚% &
}
¸¸ 
catch
˝˝ 
(
˝˝ 
	Exception
˝˝ 
	exception
˝˝ &
)
˝˝& '
{
˛˛ 
_logger
ˇˇ 
.
ˇˇ 
LogError
ˇˇ  
(
ˇˇ  !
HelperService
ˇˇ! .
.
ˇˇ. /
LoggerMessage
ˇˇ/ <
(
ˇˇ< =
$str
ˇˇ= P
,
ˇˇP Q
$str
ˇˇR y
,
ˇˇy z
	exceptionˇˇ{ Ñ
)ˇˇÑ Ö
)ˇˇÖ Ü
;ˇˇÜ á
throw
ÄÄ 
;
ÄÄ 
}
ÅÅ 
finally
ÇÇ 
{
ÉÉ 
if
ÑÑ 
(
ÑÑ 
IsTracingEnabled
ÑÑ $
)
ÑÑ$ %
{
ÖÖ 

_stopWatch
ÜÜ 
.
ÜÜ 
Stop
ÜÜ #
(
ÜÜ# $
)
ÜÜ$ %
;
ÜÜ% &
_logger
áá 
.
áá 
LogInformation
áá *
(
áá* +
$"
áá+ -
$stráá- Å
{ááÅ Ç

_stopWatchááÇ å
.ááå ç#
ElapsedMillisecondsááç †
}áá† °
$stráá° £
"áá£ §
)áá§ •
;áá• ¶
}
àà 
}
ââ 
}
ää 	
public
çç 
bool
çç 
AddLike
çç 
(
çç 
ArticleLike
çç '
like
çç( ,
)
çç, -
{
éé 	
if
èè 
(
èè 
IsTracingEnabled
èè  
)
èè  !

_stopWatch
èè" ,
.
èè, -
Start
èè- 2
(
èè2 3
)
èè3 4
;
èè4 5

Validation
êê 
.
êê !
ValidateArticleLike
êê *
(
êê* +
like
êê+ /
)
êê/ 0
;
êê0 1
try
ëë 
{
íí 
if
ìì 
(
ìì 
_context
ìì 
.
ìì 
ArticleLikes
ìì )
.
ìì) *
Any
ìì* -
(
ìì- .
item
ìì. 2
=>
ìì3 5
item
ìì6 :
.
ìì: ;
	ArticleId
ìì; D
==
ììE G
like
ììH L
.
ììL M
	ArticleId
ììM V
&&
ììW Y
item
ììZ ^
.
ìì^ _
UserId
ìì_ e
==
ììf h
like
ììi m
.
ììm n
UserId
ììn t
)
ììt u
)
ììu v
throw
ììw |
newìì} Ä#
ValidationExceptionììÅ î
(ììî ï
$strììï  
)ìì  À
;ììÀ Ã
_context
îî 
.
îî 
ArticleLikes
îî %
.
îî% &
Add
îî& )
(
îî) *
like
îî* .
)
îî. /
;
îî/ 0
_context
ïï 
.
ïï 
SaveChanges
ïï $
(
ïï$ %
)
ïï% &
;
ïï& '
return
ññ 
true
ññ 
;
ññ 
}
óó 
catch
òò 
(
òò !
ValidationException
òò &
	exception
òò' 0
)
òò0 1
{
ôô 
_logger
öö 
.
öö 
LogError
öö  
(
öö  !
HelperService
öö! .
.
öö. /
LoggerMessage
öö/ <
(
öö< =
$str
öö= P
,
ööP Q
$str
ööR m
,
ööm n
	exception
ööo x
,
ööx y
like
ööz ~
)
öö~ 
)öö Ä
;ööÄ Å
throw
õõ 
;
õõ 
}
úú 
catch
ùù 
(
ùù 
	Exception
ùù 
	exception
ùù &
)
ùù& '
{
ûû 
_logger
üü 
.
üü 
LogError
üü  
(
üü  !
HelperService
üü! .
.
üü. /
LoggerMessage
üü/ <
(
üü< =
$str
üü= P
,
üüP Q
$str
üüR m
,
üüm n
	exception
üüo x
,
üüx y
like
üüz ~
)
üü~ 
)üü Ä
;üüÄ Å
return
†† 
false
†† 
;
†† 
}
°° 
finally
¢¢ 
{
££ 
if
§§ 
(
§§ 
IsTracingEnabled
§§ $
)
§§$ %
{
•• 

_stopWatch
¶¶ 
.
¶¶ 
Stop
¶¶ #
(
¶¶# $
)
¶¶$ %
;
¶¶% &
_logger
ßß 
.
ßß 
LogInformation
ßß *
(
ßß* +
$"
ßß+ -
$str
ßß- u
{
ßßu v

_stopWatchßßv Ä
.ßßÄ Å#
ElapsedMillisecondsßßÅ î
}ßßî ï
$strßßï ó
"ßßó ò
)ßßò ô
;ßßô ö
}
®® 
}
©© 
}
™™ 	
public
≠≠ 
IEnumerable
≠≠ 
<
≠≠ 
ArticleLike
≠≠ &
>
≠≠& '
GetLikes
≠≠( 0
(
≠≠0 1
)
≠≠1 2
{
ÆÆ 	
if
ØØ 
(
ØØ 
IsTracingEnabled
ØØ  
)
ØØ  !

_stopWatch
ØØ" ,
.
ØØ, -
Start
ØØ- 2
(
ØØ2 3
)
ØØ3 4
;
ØØ4 5
try
∞∞ 
{
±± 
var
≤≤  
ListOfArticleLikes
≤≤ &
=
≤≤' (
_context
≤≤) 1
.
≤≤1 2
ArticleLikes
≤≤2 >
.
≤≤> ?
Include
≤≤? F
(
≤≤F G
e
≤≤G H
=>
≤≤I K
e
≤≤L M
.
≤≤M N
Article
≤≤N U
)
≤≤U V
.
≤≤V W
Where
≤≤W \
(
≤≤\ ]
item
≤≤] a
=>
≤≤b d
item
≤≤e i
.
≤≤i j
Article
≤≤j q
!
≤≤q r
.
≤≤r s
	CreatedOn
≤≤s |
>
≤≤} ~
DateTime≤≤ á
.≤≤á à
Now≤≤à ã
.≤≤ã å
	AddMonths≤≤å ï
(≤≤ï ñ
-≤≤ñ ó
GetRange≤≤ó ü
(≤≤ü †
)≤≤† °
)≤≤° ¢
)≤≤¢ £
.≤≤£ §
ToList≤≤§ ™
(≤≤™ ´
)≤≤´ ¨
;≤≤¨ ≠
return
≥≥  
ListOfArticleLikes
≥≥ )
;
≥≥) *
}
¥¥ 
catch
µµ 
(
µµ 
	Exception
µµ 
	exception
µµ &
)
µµ& '
{
∂∂ 
_logger
∑∑ 
.
∑∑ 
LogError
∑∑  
(
∑∑  !
HelperService
∑∑! .
.
∑∑. /
LoggerMessage
∑∑/ <
(
∑∑< =
$str
∑∑= P
,
∑∑P Q
$str
∑∑R ^
,
∑∑^ _
	exception
∑∑` i
)
∑∑i j
)
∑∑j k
;
∑∑k l
throw
∏∏ 
;
∏∏ 
}
ππ 
finally
∫∫ 
{
ªª 
if
ºº 
(
ºº 
IsTracingEnabled
ºº $
)
ºº$ %
{
ΩΩ 

_stopWatch
ææ 
.
ææ 
Stop
ææ #
(
ææ# $
)
ææ$ %
;
ææ% &
_logger
øø 
.
øø 
LogInformation
øø *
(
øø* +
$"
øø+ -
$str
øø- f
{
øøf g

_stopWatch
øøg q
.
øøq r"
ElapsedMillisecondsøør Ö
}øøÖ Ü
$strøøÜ à
"øøà â
)øøâ ä
;øøä ã
}
¿¿ 
}
¡¡ 
}
¬¬ 	
public
≈≈ 
int
≈≈ 
GetCountOfLikes
≈≈ "
(
≈≈" #
int
≈≈# &
	ArticleId
≈≈' 0
)
≈≈0 1
{
∆∆ 	
if
«« 
(
«« 
IsTracingEnabled
««  
)
««  !

_stopWatch
««" ,
.
««, -
Start
««- 2
(
««2 3
)
««3 4
;
««4 5
if
»» 
(
»» 
	ArticleId
»» 
<=
»» 
$num
»» 
)
»» 
throw
»»  %
new
»»& )
ArgumentException
»»* ;
(
»»; <
$"
»»< >
$str
»»> p
{
»»p q
	ArticleId
»»q z
}
»»z {
"
»»{ |
)
»»| }
;
»»} ~
try
…… 
{
   
var
ÀÀ !
CountOfArticleLikes
ÀÀ '
=
ÀÀ( )
_context
ÀÀ* 2
.
ÀÀ2 3
ArticleLikes
ÀÀ3 ?
.
ÀÀ? @
Count
ÀÀ@ E
(
ÀÀE F
item
ÀÀF J
=>
ÀÀK M
item
ÀÀN R
.
ÀÀR S
	ArticleId
ÀÀS \
==
ÀÀ] _
	ArticleId
ÀÀ` i
)
ÀÀi j
;
ÀÀj k
return
ÃÃ !
CountOfArticleLikes
ÃÃ *
;
ÃÃ* +
}
ÕÕ 
catch
ŒŒ 
(
ŒŒ 
	Exception
ŒŒ 
	exception
ŒŒ &
)
ŒŒ& '
{
œœ 
_logger
–– 
.
–– 
LogError
––  
(
––  !
HelperService
––! .
.
––. /
LoggerMessage
––/ <
(
––< =
$str
––= P
,
––P Q
$str
––R r
,
––r s
	exception
––t }
)
––} ~
)
––~ 
;–– Ä
throw
—— 
;
—— 
}
““ 
finally
”” 
{
‘‘ 
if
’’ 
(
’’ 
IsTracingEnabled
’’ $
)
’’$ %
{
÷÷ 

_stopWatch
◊◊ 
.
◊◊ 
Stop
◊◊ #
(
◊◊# $
)
◊◊$ %
;
◊◊% &
_logger
ÿÿ 
.
ÿÿ 
LogInformation
ÿÿ *
(
ÿÿ* +
$"
ÿÿ+ -
$str
ÿÿ- z
{
ÿÿz {

_stopWatchÿÿ{ Ö
.ÿÿÖ Ü#
ElapsedMillisecondsÿÿÜ ô
}ÿÿô ö
$strÿÿö ú
"ÿÿú ù
)ÿÿù û
;ÿÿû ü
}
ŸŸ 
}
⁄⁄ 
}
€€ 	
private
ﬁﬁ 
int
ﬁﬁ 
GetRange
ﬁﬁ 
(
ﬁﬁ 
)
ﬁﬁ 
{
ﬂﬂ 	
if
‡‡ 
(
‡‡ 
IsTracingEnabled
‡‡  
)
‡‡  !

_stopWatch
‡‡" ,
.
‡‡, -
Start
‡‡- 2
(
‡‡2 3
)
‡‡3 4
;
‡‡4 5
try
·· 
{
‚‚ 
var
„„ 
Range
„„ 
=
„„ 
_configuration
„„ *
[
„„* +
$str
„„+ M
]
„„M N
;
„„N O
return
‰‰ 
Range
‰‰ 
!=
‰‰ 
null
‰‰  $
?
‰‰% &
Convert
‰‰' .
.
‰‰. /
ToInt32
‰‰/ 6
(
‰‰6 7
Range
‰‰7 <
)
‰‰< =
:
‰‰> ?
throw
‰‰@ E
new
‰‰F I
	Exception
‰‰J S
(
‰‰S T
$str‰‰T ü
)‰‰ü †
;‰‰† °
}
ÂÂ 
catch
ÊÊ 
(
ÊÊ 
	Exception
ÊÊ 
	exception
ÊÊ &
)
ÊÊ& '
{
ÁÁ 
_logger
ËË 
.
ËË 
LogError
ËË  
(
ËË  !
HelperService
ËË! .
.
ËË. /
LoggerMessage
ËË/ <
(
ËË< =
$str
ËË= M
,
ËËM N
$str
ËËO [
,
ËË[ \
	exception
ËË] f
)
ËËf g
)
ËËg h
;
ËËh i
throw
ÈÈ 
;
ÈÈ 
}
ÍÍ 
finally
ÎÎ 
{
ÏÏ 
if
ÌÌ 
(
ÌÌ 
IsTracingEnabled
ÌÌ $
)
ÌÌ$ %
{
ÓÓ 

_stopWatch
ÔÔ 
.
ÔÔ 
Stop
ÔÔ #
(
ÔÔ# $
)
ÔÔ$ %
;
ÔÔ% &
_logger
 
.
 
LogInformation
 *
(
* +
$"
+ -
$str
- f
{
f g

_stopWatch
g q
.
q r"
ElapsedMillisecondsr Ö
}Ö Ü
$strÜ à
"à â
)â ä
;ä ã
}
ÒÒ 
}
ÚÚ 
}
ÛÛ 	
public
ˆˆ 
bool
ˆˆ 0
"GetIsTraceEnabledFromConfiguration
ˆˆ 6
(
ˆˆ6 7
)
ˆˆ7 8
{
˜˜ 	
try
¯¯ 
{
˘˘ 
var
˙˙ /
!IsTracingEnabledFromConfiguration
˙˙ 5
=
˙˙6 7
_configuration
˙˙8 F
[
˙˙F G
$str
˙˙G Z
]
˙˙Z [
;
˙˙[ \
return
˚˚ /
!IsTracingEnabledFromConfiguration
˚˚ 8
!=
˚˚9 ;
null
˚˚< @
?
˚˚A B
Convert
˚˚C J
.
˚˚J K
	ToBoolean
˚˚K T
(
˚˚T U/
!IsTracingEnabledFromConfiguration
˚˚U v
)
˚˚v w
:
˚˚x y
false
˚˚z 
;˚˚ Ä
}
¸¸ 
catch
˝˝ 
(
˝˝ 
	Exception
˝˝ 
	exception
˝˝ &
)
˝˝& '
{
˛˛ 
_logger
ˇˇ 
.
ˇˇ 
LogError
ˇˇ  
(
ˇˇ  !
HelperService
ˇˇ! .
.
ˇˇ. /
LoggerMessage
ˇˇ/ <
(
ˇˇ< =
$str
ˇˇ= M
,
ˇˇM N
$str
ˇˇO u
,
ˇˇu v
	exceptionˇˇw Ä
)ˇˇÄ Å
)ˇˇÅ Ç
;ˇˇÇ É
return
ÄÄ 
false
ÄÄ 
;
ÄÄ 
}
ÅÅ 
}
ÇÇ 	
}
ÉÉ 
}ÑÑ …≠
]C:\Users\pooja.sakthivel\Desktop\AspireOverflow\DataAccessLayer\Repository\QueryRepository.cs
	namespace 	
AspireOverflow
 
. 
DataAccessLayer (
{ 
public		 

class		 
QueryRepository		  
:		! "
IQueryRepository		# 3
{

 
private 
readonly !
AspireOverflowContext .
_context/ 7
;7 8
private 
readonly 
ILogger  
<  !
QueryRepository! 0
>0 1
_logger2 9
;9 :
private 
readonly 
IConfiguration '
_configuration( 6
;6 7
private 
readonly 
	Stopwatch "

_stopWatch# -
=. /
new0 3
	Stopwatch4 =
(= >
)> ?
;? @
private 
readonly 
bool 
IsTracingEnabled .
;. /
public 
QueryRepository 
( !
AspireOverflowContext 4
context5 <
,< =
ILogger> E
<E F
QueryRepositoryF U
>U V
loggerW ]
,] ^
IConfiguration_ m
configurationn {
){ |
{ 	
_context 
= 
context 
; 
_logger 
= 
logger 
; 
_configuration 
= 
configuration *
;* +
IsTracingEnabled 
= .
"GetIsTraceEnabledFromConfiguration A
(A B
)B C
;C D
} 	
public 
bool 
AddQuery 
( 
Query "
query# (
)( )
{ 	
if 
( 
IsTracingEnabled  
)  !

_stopWatch" ,
., -
Start- 2
(2 3
)3 4
;4 5

Validation 
. 
ValidateQuery $
($ %
query% *
)* +
;+ ,
try 
{ 
_context 
. 
Queries  
.  !
Add! $
($ %
query% *
)* +
;+ ,
_context 
. 
SaveChanges $
($ %
)% &
;& '
return   
true   
;   
}!! 
catch"" 
("" 
	Exception"" 
	exception"" &
)""& '
{## 
_logger$$ 
.$$ 
LogError$$  
($$  !
HelperService$$! .
.$$. /
LoggerMessage$$/ <
($$< =
$str$$= N
,$$N O
$str$$P g
,$$g h
	exception$$i r
,$$r s
query$$t y
)$$y z
)$$z {
;$${ |
return%% 
false%% 
;%% 
}&& 
finally'' 
{(( 
if)) 
()) 
IsTracingEnabled)) $
)))$ %
{** 

_stopWatch++ 
.++ 
Stop++ #
(++# $
)++$ %
;++% &
_logger,, 
.,, 
LogInformation,, *
(,,* +
$",,+ -
$str,,- o
{,,o p

_stopWatch,,p z
.,,z { 
ElapsedMilliseconds	,,{ é
}
,,é è
$str
,,è ë
"
,,ë í
)
,,í ì
;
,,ì î
}-- 
}.. 
}// 	
public33 
bool33 

AddComment33 
(33 
QueryComment33 +
comment33, 3
)333 4
{44 	
if55 
(55 
IsTracingEnabled55  
)55  !

_stopWatch55" ,
.55, -
Start55- 2
(552 3
)553 4
;554 5

Validation66 
.66 
ValidateComment66 &
(66& '
comment66' .
)66. /
;66/ 0
try77 
{88 
_context99 
.99 
QueryComments99 &
.99& '
Add99' *
(99* +
comment99+ 2
)992 3
;993 4
_context:: 
.:: 
SaveChanges:: $
(::$ %
)::% &
;::& '
return;; 
true;; 
;;; 
}<< 
catch== 
(== 
	Exception== 
	exception== &
)==& '
{>> 
_logger?? 
.?? 
LogError??  
(??  !
HelperService??! .
.??. /
LoggerMessage??/ <
(??< =
$str??= N
,??N O
$str??P r
,??r s
	exception??t }
,??} ~
comment	?? Ü
)
??Ü á
)
??á à
;
??à â
return@@ 
false@@ 
;@@ 
}AA 
finallyBB 
{CC 
ifDD 
(DD 
IsTracingEnabledDD $
)DD$ %
{EE 

_stopWatchFF 
.FF 
StopFF #
(FF# $
)FF$ %
;FF% &
_loggerGG 
.GG 
LogInformationGG *
(GG* +
$"GG+ -
$strGG- z
{GGz {

_stopWatch	GG{ Ö
.
GGÖ Ü!
ElapsedMilliseconds
GGÜ ô
}
GGô ö
$str
GGö ú
"
GGú ù
)
GGù û
;
GGû ü
}HH 
}II 
}JJ 	
publicOO 
boolOO 
UpdateQueryOO 
(OO  
intOO  #
QueryIdOO$ +
,OO+ ,
boolOO- 1
IsSolvedOO2 :
=OO; <
falseOO= B
,OOB C
boolOOD H
IsDeleteOOI Q
=OOR S
falseOOT Y
)OOY Z
{PP 	
ifQQ 
(QQ 
IsTracingEnabledQQ  
)QQ  !

_stopWatchQQ" ,
.QQ, -
StartQQ- 2
(QQ2 3
)QQ3 4
;QQ4 5
ifRR 
(RR 
QueryIdRR 
<=RR 
$numRR 
)RR 
throwRR #
newRR$ '
ArgumentExceptionRR( 9
(RR9 :
$"RR: <
$strRR< j
{RRj k
QueryIdRRk r
}RRr s
"RRs t
)RRt u
;RRu v
ifSS 
(SS 
IsSolvedSS 
==SS 
IsDeleteSS $
)SS$ %
throwSS& +
newSS, /
ArgumentExceptionSS0 A
(SSA B
$strSSB x
)SSx y
;SSy z
tryTT 
{UU 
varVV 
ExistingQueryVV !
=VV" #
GetQueryByIDVV$ 0
(VV0 1
QueryIdVV1 8
)VV8 9
;VV9 :
ifWW 
(WW 
IsSolvedWW 
)WW 
ExistingQueryWW +
.WW+ ,
IsSolvedWW, 4
=WW5 6
IsSolvedWW7 ?
;WW? @
ifXX 
(XX 
IsDeleteXX 
)XX 
ExistingQueryXX +
.XX+ ,
IsActiveXX, 4
=XX5 6
falseXX7 <
;XX< =
_contextYY 
.YY 
QueriesYY  
.YY  !
UpdateYY! '
(YY' (
ExistingQueryYY( 5
)YY5 6
;YY6 7
_contextZZ 
.ZZ 
SaveChangesZZ $
(ZZ$ %
)ZZ% &
;ZZ& '
return[[ 
true[[ 
;[[ 
}\\ 
catch]] 
(]] 
	Exception]] 
	exception]] &
)]]& '
{^^ 
_logger__ 
.__ 
LogError__  
(__  !
HelperService__! .
.__. /
LoggerMessage__/ <
(__< =
$str__= N
,__N O
$str	__P à
,
__à â
	exception
__ä ì
,
__ì î
IsSolved
__ï ù
?
__û ü
IsSolved
__† ®
:
__© ™
IsDelete
__´ ≥
)
__≥ ¥
)
__¥ µ
;
__µ ∂
return`` 
false`` 
;`` 
}aa 
finallybb 
{cc 
ifdd 
(dd 
IsTracingEnableddd $
)dd$ %
{ee 

_stopWatchff 
.ff 
Stopff #
(ff# $
)ff$ %
;ff% &
_loggergg 
.gg 
LogInformationgg *
(gg* +
$"gg+ -
$str	gg- ê
{
ggê ë

_stopWatch
ggë õ
.
ggõ ú!
ElapsedMilliseconds
ggú Ø
}
ggØ ∞
$str
gg∞ ≤
"
gg≤ ≥
)
gg≥ ¥
;
gg¥ µ
}hh 
}ii 
}jj 	
publicnn 
Querynn 
GetQueryByIDnn !
(nn! "
intnn" %
QueryIdnn& -
)nn- .
{oo 	
ifpp 
(pp 
IsTracingEnabledpp  
)pp  !

_stopWatchpp" ,
.pp, -
Startpp- 2
(pp2 3
)pp3 4
;pp4 5
ifqq 
(qq 
QueryIdqq 
<=qq 
$numqq 
)qq 
throwqq #
newqq$ '
ArgumentExceptionqq( 9
(qq9 :
$"qq: <
$strqq< j
{qqj k
QueryIdqqk r
}qqr s
"qqs t
)qqt u
;qqu v
Queryrr 
?rr 
ExistingQueryrr  
;rr  !
tryss 
{tt 
ExistingQueryuu 
=uu 
_contextuu  (
.uu( )
Queriesuu) 0
.uu0 1
FirstOrDefaultuu1 ?
(uu? @
queryuu@ E
=>uuF H
queryuuI N
.uuN O
QueryIduuO V
==uuW Y
QueryIduuZ a
&&uub d
queryuue j
.uuj k
	CreatedOnuuk t
>uuu v
DateTimeuuw 
.	uu Ä
Now
uuÄ É
.
uuÉ Ñ
	AddMonths
uuÑ ç
(
uuç é
-
uué è
GetRange
uuè ó
(
uuó ò
)
uuò ô
)
uuô ö
&&
uuõ ù
query
uuû £
.
uu£ §
IsActive
uu§ ¨
)
uu¨ ≠
;
uu≠ Æ
returnvv 
ExistingQueryvv $
!=vv% '
nullvv( ,
?vv- .
ExistingQueryvv/ <
:vv= >
throwvv? D
newvvE H!
ItemNotFoundExceptionvvI ^
(vv^ _
$"vv_ a
$str	vva è
{
vvè ê
QueryId
vvê ó
}
vvó ò
"
vvò ô
)
vvô ö
;
vvö õ
}ww 
catchxx 
(xx 
	Exceptionxx 
	exceptionxx &
)xx& '
{yy 
_loggerzz 
.zz 
LogErrorzz  
(zz  !
HelperServicezz! .
.zz. /
LoggerMessagezz/ <
(zz< =
$strzz= N
,zzN O
$strzzP k
,zzk l
	exceptionzzm v
,zzv w
QueryIdzzx 
)	zz Ä
)
zzÄ Å
;
zzÅ Ç
throw{{ 
;{{ 
}|| 
finally}} 
{~~ 
if 
( 
IsTracingEnabled $
)$ %
{
ÄÄ 

_stopWatch
ÅÅ 
.
ÅÅ 
Stop
ÅÅ #
(
ÅÅ# $
)
ÅÅ$ %
;
ÅÅ% &
_logger
ÇÇ 
.
ÇÇ 
LogInformation
ÇÇ *
(
ÇÇ* +
$"
ÇÇ+ -
$str
ÇÇ- s
{
ÇÇs t

_stopWatch
ÇÇt ~
.
ÇÇ~ "
ElapsedMillisecondsÇÇ í
}ÇÇí ì
$strÇÇì ï
"ÇÇï ñ
)ÇÇñ ó
;ÇÇó ò
}
ÉÉ 
}
ÑÑ 
}
ÖÖ 	
public
ââ 
IEnumerable
ââ 
<
ââ 
Query
ââ  
>
ââ  !

GetQueries
ââ" ,
(
ââ, -
)
ââ- .
{
ää 	
if
ãã 
(
ãã 
IsTracingEnabled
ãã  
)
ãã  !

_stopWatch
ãã" ,
.
ãã, -
Start
ãã- 2
(
ãã2 3
)
ãã3 4
;
ãã4 5
try
åå 
{
çç 
var
éé 
ListOfQueries
éé !
=
éé" #
_context
éé$ ,
.
éé, -
Queries
éé- 4
.
éé4 5
Where
éé5 :
(
éé: ;
item
éé; ?
=>
éé@ B
item
ééC G
.
ééG H
IsActive
ééH P
&&
ééQ S
item
ééT X
.
ééX Y
	CreatedOn
ééY b
>
ééc d
DateTime
éée m
.
éém n
Now
één q
.
ééq r
	AddMonths
éér {
(
éé{ |
-
éé| }
GetRangeéé} Ö
(ééÖ Ü
)ééÜ á
)ééá à
)ééà â
.ééâ ä
Includeééä ë
(ééë í
eééí ì
=>ééî ñ
eééó ò
.ééò ô
Userééô ù
)ééù û
.ééû ü
ToListééü •
(éé• ¶
)éé¶ ß
;ééß ®
return
èè 
ListOfQueries
èè $
;
èè$ %
}
êê 
catch
ëë 
(
ëë 
	Exception
ëë 
	exception
ëë &
)
ëë& '
{
íí 
_logger
ìì 
.
ìì 
LogError
ìì  
(
ìì  !
HelperService
ìì! .
.
ìì. /
LoggerMessage
ìì/ <
(
ìì< =
$str
ìì= N
,
ììN O
$str
ììP ^
,
ìì^ _
	exception
ìì` i
)
ììi j
)
ììj k
;
ììk l
throw
îî 
;
îî 
}
ïï 
finally
ññ 
{
óó 
if
òò 
(
òò 
IsTracingEnabled
òò $
)
òò$ %
{
ôô 

_stopWatch
öö 
.
öö 
Stop
öö #
(
öö# $
)
öö$ %
;
öö% &
_logger
õõ 
.
õõ 
LogInformation
õõ *
(
õõ* +
$"
õõ+ -
$str
õõ- f
{
õõf g

_stopWatch
õõg q
.
õõq r"
ElapsedMillisecondsõõr Ö
}õõÖ Ü
$strõõÜ à
"õõà â
)õõâ ä
;õõä ã
}
úú 
}
ùù 
}
ûû 	
public
°° 
IEnumerable
°° 
<
°° 
Query
°°  
>
°°  ! 
GetQueriesByUserId
°°" 4
(
°°4 5
int
°°5 8
UserId
°°9 ?
)
°°? @
{
¢¢ 	
if
££ 
(
££ 
IsTracingEnabled
££  
)
££  !

_stopWatch
££" ,
.
££, -
Start
££- 2
(
££2 3
)
££3 4
;
££4 5
if
§§ 
(
§§ 
UserId
§§ 
<=
§§ 
$num
§§ 
)
§§ 
throw
§§ "
new
§§# &
ArgumentException
§§' 8
(
§§8 9
$"
§§9 ;
$str
§§; g
{
§§g h
UserId
§§h n
}
§§n o
"
§§o p
)
§§p q
;
§§q r
try
•• 
{
¶¶ 
return
ßß 
_context
ßß 
.
ßß  
Queries
ßß  '
.
ßß' (
Where
ßß( -
(
ßß- .
query
ßß. 3
=>
ßß4 6
query
ßß7 <
.
ßß< =
	CreatedBy
ßß= F
==
ßßG I
UserId
ßßJ P
&&
ßßQ S
query
ßßT Y
.
ßßY Z
IsActive
ßßZ b
)
ßßb c
.
ßßc d
Include
ßßd k
(
ßßk l
e
ßßl m
=>
ßßn p
e
ßßq r
.
ßßr s
User
ßßs w
)
ßßw x
;
ßßx y
}
®® 
catch
©© 
(
©© 
	Exception
©© 
	exception
©© &
)
©©& '
{
™™ 
_logger
´´ 
.
´´ 
LogError
´´  
(
´´  !
HelperService
´´! .
.
´´. /
LoggerMessage
´´/ <
(
´´< =
$str
´´= N
,
´´N O
$str
´´P p
,
´´p q
	exception
´´r {
,
´´{ |
UserId´´} É
)´´É Ñ
)´´Ñ Ö
;´´Ö Ü
throw
¨¨ 
;
¨¨ 
}
≠≠ 
finally
ÆÆ 
{
ØØ 
if
∞∞ 
(
∞∞ 
IsTracingEnabled
∞∞ $
)
∞∞$ %
{
±± 

_stopWatch
≤≤ 
.
≤≤ 
Stop
≤≤ #
(
≤≤# $
)
≤≤$ %
;
≤≤% &
_logger
≥≥ 
.
≥≥ 
LogInformation
≥≥ *
(
≥≥* +
$"
≥≥+ -
$str
≥≥- x
{
≥≥x y

_stopWatch≥≥y É
.≥≥É Ñ#
ElapsedMilliseconds≥≥Ñ ó
}≥≥ó ò
$str≥≥ò ö
"≥≥ö õ
)≥≥õ ú
;≥≥ú ù
}
¥¥ 
}
µµ 
}
∂∂ 	
public
ππ 
IEnumerable
ππ 
<
ππ 
Query
ππ  
>
ππ  !
GetQueriesByTitle
ππ" 3
(
ππ3 4
String
ππ4 :
Title
ππ; @
)
ππ@ A
{
∫∫ 	
if
ªª 
(
ªª 
String
ªª 
.
ªª 
IsNullOrEmpty
ªª $
(
ªª$ %
Title
ªª% *
)
ªª* +
)
ªª+ ,
throw
ªª- 2
new
ªª3 6
ArgumentException
ªª7 H
(
ªªH I
$str
ªªI e
)
ªªe f
;
ªªf g
try
ºº 
{
ΩΩ 
return
ææ 
_context
ææ 
.
ææ  
Queries
ææ  '
.
ææ' (
Where
ææ( -
(
ææ- .
query
ææ. 3
=>
ææ4 6
query
ææ7 <
.
ææ< =
Title
ææ= B
!
ææB C
.
ææC D
Contains
ææD L
(
ææL M
Title
ææM R
)
ææR S
&&
ææT V
query
ææV [
.
ææ[ \
IsActive
ææ\ d
)
ææd e
.
ææe f
Include
ææf m
(
ææm n
e
ææn o
=>
ææp r
e
ææs t
.
ææt u
User
ææu y
)
ææy z
;
ææz {
}
øø 
catch
¿¿ 
(
¿¿ 
	Exception
¿¿ 
	exception
¿¿ &
)
¿¿& '
{
¡¡ 
_logger
¬¬ 
.
¬¬ 
LogError
¬¬  
(
¬¬  !
HelperService
¬¬! .
.
¬¬. /
LoggerMessage
¬¬/ <
(
¬¬< =
$str
¬¬= K
,
¬¬K L
$str
¬¬M n
,
¬¬n o
	exception
¬¬p y
,
¬¬y z
Title¬¬{ Ä
)¬¬Ä Å
)¬¬Å Ç
;¬¬Ç É
throw
√√ 
;
√√ 
}
ƒƒ 
finally
≈≈ 
{
∆∆ 
if
«« 
(
«« 
IsTracingEnabled
«« $
)
««$ %
{
»» 

_stopWatch
…… 
.
…… 
Stop
…… #
(
……# $
)
……$ %
;
……% &
_logger
   
.
   
LogInformation
   *
(
  * +
$"
  + -
$str
  - y
{
  y z

_stopWatch  z Ñ
.  Ñ Ö#
ElapsedMilliseconds  Ö ò
}  ò ô
$str  ô õ
"  õ ú
)  ú ù
;  ù û
}
ÀÀ 
}
ÃÃ 
}
ÕÕ 	
public
–– 
IEnumerable
–– 
<
–– 
Query
––  
>
––  !"
GetQueriesByIsSolved
––" 6
(
––6 7
bool
––7 ;
IsSolved
––< D
)
––D E
{
—— 	
if
““ 
(
““ 
IsTracingEnabled
““  
)
““  !

_stopWatch
““" ,
.
““, -
Start
““- 2
(
““2 3
)
““3 4
;
““4 5
try
”” 
{
‘‘ 
return
’’ 
_context
’’ 
.
’’  
Queries
’’  '
.
’’' (
Where
’’( -
(
’’- .
item
’’. 2
=>
’’3 5
item
’’6 :
.
’’: ;
IsSolved
’’; C
==
’’D F
IsSolved
’’G O
&&
’’P R
item
’’S W
.
’’W X
IsActive
’’X `
)
’’` a
.
’’a b
Include
’’b i
(
’’i j
e
’’j k
=>
’’l n
e
’’o p
.
’’p q
User
’’q u
)
’’u v
;
’’v w
}
÷÷ 
catch
◊◊ 
(
◊◊ 
	Exception
◊◊ 
	exception
◊◊ &
)
◊◊& '
{
ÿÿ 
_logger
ŸŸ 
.
ŸŸ 
LogError
ŸŸ  
(
ŸŸ  !
HelperService
ŸŸ! .
.
ŸŸ. /
LoggerMessage
ŸŸ/ <
(
ŸŸ< =
$str
ŸŸ= K
,
ŸŸK L
$str
ŸŸM h
,
ŸŸh i
	exception
ŸŸj s
,
ŸŸs t
IsSolved
ŸŸu }
)
ŸŸ} ~
)
ŸŸ~ 
;ŸŸ Ä
throw
⁄⁄ 
;
⁄⁄ 
}
€€ 
finally
‹‹ 
{
›› 
if
ﬁﬁ 
(
ﬁﬁ 
IsTracingEnabled
ﬁﬁ $
)
ﬁﬁ$ %
{
ﬂﬂ 

_stopWatch
‡‡ 
.
‡‡ 
Stop
‡‡ #
(
‡‡# $
)
‡‡$ %
;
‡‡% &
_logger
·· 
.
·· 
LogInformation
·· *
(
··* +
$"
··+ -
$str
··- s
{
··s t

_stopWatch
··t ~
.
··~ "
ElapsedMilliseconds·· í
}··í ì
$str··ì ï
"··ï ñ
)··ñ ó
;··ó ò
}
‚‚ 
}
„„ 
}
‰‰ 	
public
ÁÁ 
IEnumerable
ÁÁ 
<
ÁÁ 
QueryComment
ÁÁ '
>
ÁÁ' (
GetComments
ÁÁ) 4
(
ÁÁ4 5
)
ÁÁ5 6
{
ËË 	
if
ÈÈ 
(
ÈÈ 
IsTracingEnabled
ÈÈ  
)
ÈÈ  !

_stopWatch
ÈÈ" ,
.
ÈÈ, -
Start
ÈÈ- 2
(
ÈÈ2 3
)
ÈÈ3 4
;
ÈÈ4 5
try
ÍÍ 
{
ÎÎ 
var
ÏÏ 
ListOfComments
ÏÏ "
=
ÏÏ# $
_context
ÏÏ% -
.
ÏÏ- .
QueryComments
ÏÏ. ;
.
ÏÏ; <
Include
ÏÏ< C
(
ÏÏC D
e
ÏÏD E
=>
ÏÏF H
e
ÏÏI J
.
ÏÏJ K
Query
ÏÏK P
)
ÏÏP Q
.
ÏÏQ R
Include
ÏÏR Y
(
ÏÏY Z
e
ÏÏZ [
=>
ÏÏ\ ^
e
ÏÏ_ `
.
ÏÏ` a
User
ÏÏa e
)
ÏÏe f
.
ÏÏf g
ToList
ÏÏg m
(
ÏÏm n
)
ÏÏn o
;
ÏÏo p
return
ÌÌ 
ListOfComments
ÌÌ %
;
ÌÌ% &
}
ÓÓ 
catch
ÔÔ 
(
ÔÔ 
	Exception
ÔÔ 
	exception
ÔÔ &
)
ÔÔ& '
{
 
_logger
ÒÒ 
.
ÒÒ 
LogError
ÒÒ  
(
ÒÒ  !
HelperService
ÒÒ! .
.
ÒÒ. /
LoggerMessage
ÒÒ/ <
(
ÒÒ< =
$str
ÒÒ= N
,
ÒÒN O
$str
ÒÒP _
,
ÒÒ_ `
	exception
ÒÒa j
)
ÒÒj k
)
ÒÒk l
;
ÒÒl m
throw
ÚÚ 
;
ÚÚ 
}
ÛÛ 
finally
ÙÙ 
{
ıı 
if
ˆˆ 
(
ˆˆ 
IsTracingEnabled
ˆˆ $
)
ˆˆ$ %
{
˜˜ 

_stopWatch
¯¯ 
.
¯¯ 
Stop
¯¯ #
(
¯¯# $
)
¯¯$ %
;
¯¯% &
_logger
˘˘ 
.
˘˘ 
LogInformation
˘˘ *
(
˘˘* +
$"
˘˘+ -
$str
˘˘- g
{
˘˘g h

_stopWatch
˘˘h r
.
˘˘r s"
ElapsedMilliseconds˘˘s Ü
}˘˘Ü á
$str˘˘á â
"˘˘â ä
)˘˘ä ã
;˘˘ã å
}
˙˙ 
}
˚˚ 
}
¸¸ 	
public
ÄÄ 
bool
ÄÄ 
AddSpam
ÄÄ 
(
ÄÄ 
Spam
ÄÄ  
spam
ÄÄ! %
)
ÄÄ% &
{
ÅÅ 	
if
ÇÇ 
(
ÇÇ 
IsTracingEnabled
ÇÇ  
)
ÇÇ  !

_stopWatch
ÇÇ" ,
.
ÇÇ, -
Start
ÇÇ- 2
(
ÇÇ2 3
)
ÇÇ3 4
;
ÇÇ4 5

Validation
ÉÉ 
.
ÉÉ 
ValidateSpam
ÉÉ #
(
ÉÉ# $
spam
ÉÉ$ (
)
ÉÉ( )
;
ÉÉ) *
try
ÑÑ 
{
ÖÖ 
if
ÜÜ 
(
ÜÜ 
_context
ÜÜ 
.
ÜÜ 
Spams
ÜÜ "
.
ÜÜ" #
Any
ÜÜ# &
(
ÜÜ& '
item
ÜÜ' +
=>
ÜÜ, .
item
ÜÜ/ 3
.
ÜÜ3 4
UserId
ÜÜ4 :
==
ÜÜ; =
spam
ÜÜ> B
.
ÜÜB C
UserId
ÜÜC I
&&
ÜÜJ L
item
ÜÜM Q
.
ÜÜQ R
QueryId
ÜÜR Y
==
ÜÜZ \
spam
ÜÜ] a
.
ÜÜa b
QueryId
ÜÜb i
)
ÜÜi j
)
ÜÜj k
throw
ÜÜl q
new
ÜÜr u 
ArgumentExceptionÜÜv á
(ÜÜá à
$strÜÜà ∫
)ÜÜ∫ ª
;ÜÜª º
_context
áá 
.
áá 
Spams
áá 
.
áá 
AddRange
áá '
(
áá' (
spam
áá( ,
)
áá, -
;
áá- .
_context
àà 
.
àà 
SaveChanges
àà $
(
àà$ %
)
àà% &
;
àà& '
return
ââ 
true
ââ 
;
ââ 
}
ää 
catch
ãã 
(
ãã 
	Exception
ãã 
	exception
ãã &
)
ãã& '
{
åå 
_logger
çç 
.
çç 
LogError
çç  
(
çç  !
HelperService
çç! .
.
çç. /
LoggerMessage
çç/ <
(
çç< =
$str
çç= N
,
ççN O
$str
ççP d
,
ççd e
	exception
ççf o
,
çço p
spam
ççq u
)
ççu v
)
ççv w
;
ççw x
return
éé 
false
éé 
;
éé 
}
èè 
finally
êê 
{
ëë 
if
íí 
(
íí 
IsTracingEnabled
íí $
)
íí$ %
{
ìì 

_stopWatch
îî 
.
îî 
Stop
îî #
(
îî# $
)
îî$ %
;
îî% &
_logger
ïï 
.
ïï 
LogInformation
ïï *
(
ïï* +
$"
ïï+ -
$str
ïï- l
{
ïïl m

_stopWatch
ïïm w
.
ïïw x"
ElapsedMillisecondsïïx ã
}ïïã å
$strïïå é
"ïïé è
)ïïè ê
;ïïê ë
}
ññ 
}
óó 
}
òò 	
public
úú 
IEnumerable
úú 
<
úú 
Spam
úú 
>
úú  
GetSpams
úú! )
(
úú) *
)
úú* +
{
ùù 	
if
ûû 
(
ûû 
IsTracingEnabled
ûû  
)
ûû  !

_stopWatch
ûû" ,
.
ûû, -
Start
ûû- 2
(
ûû2 3
)
ûû3 4
;
ûû4 5
try
üü 
{
†† 
var
°° 
ListOfSpams
°° 
=
°°  !
_context
°°" *
.
°°* +
Spams
°°+ 0
.
°°0 1
Include
°°1 8
(
°°8 9
e
°°9 :
=>
°°; =
e
°°> ?
.
°°? @
Query
°°@ E
)
°°E F
.
°°F G
Include
°°G N
(
°°N O
e
°°O P
=>
°°Q S
e
°°T U
.
°°U V
User
°°V Z
)
°°Z [
.
°°[ \
ToList
°°\ b
(
°°b c
)
°°c d
;
°°d e
return
¢¢ 
ListOfSpams
¢¢ "
;
¢¢" #
}
££ 
catch
§§ 
(
§§ 
	Exception
§§ 
	exception
§§ &
)
§§& '
{
•• 
_logger
¶¶ 
.
¶¶ 
LogError
¶¶  
(
¶¶  !
HelperService
¶¶! .
.
¶¶. /
LoggerMessage
¶¶/ <
(
¶¶< =
$str
¶¶= N
,
¶¶N O
$str
¶¶P \
,
¶¶\ ]
	exception
¶¶^ g
)
¶¶g h
)
¶¶h i
;
¶¶i j
throw
ßß 
;
ßß 
}
®® 
finally
©© 
{
™™ 
if
´´ 
(
´´ 
IsTracingEnabled
´´ $
)
´´$ %
{
¨¨ 

_stopWatch
≠≠ 
.
≠≠ 
Stop
≠≠ #
(
≠≠# $
)
≠≠$ %
;
≠≠% &
_logger
ÆÆ 
.
ÆÆ 
LogInformation
ÆÆ *
(
ÆÆ* +
$"
ÆÆ+ -
$str
ÆÆ- d
{
ÆÆd e

_stopWatch
ÆÆe o
.
ÆÆo p"
ElapsedMillisecondsÆÆp É
}ÆÆÉ Ñ
$strÆÆÑ Ü
"ÆÆÜ á
)ÆÆá à
;ÆÆà â
}
ØØ 
}
∞∞ 
}
±± 	
public
µµ 
bool
µµ 

UpdateSpam
µµ 
(
µµ 
int
µµ "
QueryId
µµ# *
,
µµ* +
int
µµ, /
VerifyStatusID
µµ0 >
,
µµ> ?
int
µµ@ C
UpdatedByUserId
µµD S
)
µµS T
{
∂∂ 	
if
∑∑ 
(
∑∑ 
IsTracingEnabled
∑∑  
)
∑∑  !

_stopWatch
∑∑" ,
.
∑∑, -
Start
∑∑- 2
(
∑∑2 3
)
∑∑3 4
;
∑∑4 5
if
∏∏ 
(
∏∏ 
QueryId
∏∏ 
<=
∏∏ 
$num
∏∏ 
)
∏∏ 
throw
∏∏ #
new
∏∏$ '
ArgumentException
∏∏( 9
(
∏∏9 :
$"
∏∏: <
$str
∏∏< j
{
∏∏j k
QueryId
∏∏k r
}
∏∏r s
"
∏∏s t
)
∏∏t u
;
∏∏u v
if
ππ 
(
ππ 
VerifyStatusID
ππ 
<=
ππ !
$num
ππ" #
||
ππ$ &
VerifyStatusID
ππ' 5
>
ππ6 7
$num
ππ8 9
)
ππ9 :
throw
ππ; @
new
ππA D
ArgumentException
ππE V
(
ππV W
$"
ππW Y
$strππY ñ
{ππñ ó
VerifyStatusIDππó •
}ππ• ¶
"ππ¶ ß
)ππß ®
;ππ® ©
try
∫∫ 
{
ªª 
var
ºº 
ExistingSpams
ºº !
=
ºº" #
_context
ºº$ ,
.
ºº, -
Spams
ºº- 2
.
ºº2 3
Where
ºº3 8
(
ºº8 9
item
ºº9 =
=>
ºº> @
item
ººA E
.
ººE F
QueryId
ººF M
==
ººN P
QueryId
ººQ X
)
ººX Y
.
ººY Z
ToList
ººZ `
(
ºº` a
)
ººa b
;
ººb c
if
ΩΩ 
(
ΩΩ 
ExistingSpams
ΩΩ !
==
ΩΩ" $
null
ΩΩ% )
)
ΩΩ) *
throw
ΩΩ+ 0
new
ΩΩ1 4#
ItemNotFoundException
ΩΩ5 J
(
ΩΩJ K
$"
ΩΩK M
$str
ΩΩM z
{
ΩΩz {
QueryIdΩΩ{ Ç
}ΩΩÇ É
"ΩΩÉ Ñ
)ΩΩÑ Ö
;ΩΩÖ Ü
foreach
ææ 
(
ææ 
var
ææ 
spam
ææ !
in
ææ" $
ExistingSpams
ææ% 2
)
ææ2 3
{
øø 
spam
¿¿ 
.
¿¿ 
VerifyStatusID
¿¿ '
=
¿¿( )
VerifyStatusID
¿¿* 8
;
¿¿8 9
spam
¡¡ 
.
¡¡ 
	UpdatedBy
¡¡ "
=
¡¡# $
UpdatedByUserId
¡¡% 4
;
¡¡4 5
spam
¬¬ 
.
¬¬ 
	UpdatedOn
¬¬ "
=
¬¬# $
DateTime
¬¬% -
.
¬¬- .
Now
¬¬. 1
;
¬¬1 2
}
√√ 
_context
ƒƒ 
.
ƒƒ 
Spams
ƒƒ 
.
ƒƒ 
UpdateRange
ƒƒ *
(
ƒƒ* +
ExistingSpams
ƒƒ+ 8
)
ƒƒ8 9
;
ƒƒ9 :
_context
≈≈ 
.
≈≈ 
SaveChanges
≈≈ $
(
≈≈$ %
)
≈≈% &
;
≈≈& '
return
∆∆ 
true
∆∆ 
;
∆∆ 
}
«« 
catch
»» 
(
»» 
	Exception
»» 
	exception
»» &
)
»»& '
{
…… 
_logger
   
.
   
LogError
    
(
    !
HelperService
  ! .
.
  . /
LoggerMessage
  / <
(
  < =
$str
  = N
,
  N O
$str
  P }
,
  } ~
	exception   à
,  à â
VerifyStatusID  ä ò
)  ò ô
)  ô ö
;  ö õ
return
ÀÀ 
false
ÀÀ 
;
ÀÀ 
}
ÃÃ 
finally
ÕÕ 
{
ŒŒ 
if
œœ 
(
œœ 
IsTracingEnabled
œœ $
)
œœ$ %
{
–– 

_stopWatch
—— 
.
—— 
Stop
—— #
(
——# $
)
——$ %
;
——% &
_logger
““ 
.
““ 
LogInformation
““ *
(
““* +
$"
““+ -
$str““- Ö
{““Ö Ü

_stopWatch““Ü ê
.““ê ë#
ElapsedMilliseconds““ë §
}““§ •
$str““• ß
"““ß ®
)““® ©
;““© ™
}
”” 
}
‘‘ 
}
’’ 	
public
ÿÿ 
object
ÿÿ 
GetCountOfQueries
ÿÿ '
(
ÿÿ' (
)
ÿÿ( )
{
ŸŸ 	
if
⁄⁄ 
(
⁄⁄ 
IsTracingEnabled
⁄⁄  
)
⁄⁄  !

_stopWatch
⁄⁄" ,
.
⁄⁄, -
Start
⁄⁄- 2
(
⁄⁄2 3
)
⁄⁄3 4
;
⁄⁄4 5
try
€€ 
{
‹‹ 
return
›› 
new
›› 
{
ﬁﬁ "
TotalNumberOfQueries
ﬂﬂ (
=
ﬂﬂ) *
_context
ﬂﬂ+ 3
.
ﬂﬂ3 4
Queries
ﬂﬂ4 ;
.
ﬂﬂ; <
Count
ﬂﬂ< A
(
ﬂﬂA B
)
ﬂﬂB C
,
ﬂﬂC D
SolvedQueries
‡‡ !
=
‡‡" #
_context
‡‡$ ,
.
‡‡, -
Queries
‡‡- 4
.
‡‡4 5
Count
‡‡5 :
(
‡‡: ;
item
‡‡; ?
=>
‡‡@ B
item
‡‡C G
.
‡‡G H
IsSolved
‡‡H P
&&
‡‡Q S
item
‡‡T X
.
‡‡X Y
IsActive
‡‡Y a
)
‡‡a b
,
‡‡b c
UnSolvedQueries
·· #
=
··$ %
_context
··& .
.
··. /
Queries
··/ 6
.
··6 7
Count
··7 <
(
··< =
item
··= A
=>
··B D
!
··E F
item
··F J
.
··J K
IsSolved
··K S
&&
··T V
item
··W [
.
··[ \
IsActive
··\ d
)
··d e
,
··e f
}
‚‚ 
;
‚‚ 
}
„„ 
catch
‰‰ 
(
‰‰ 
	Exception
‰‰ 
	exception
‰‰ &
)
‰‰& '
{
ÂÂ 
_logger
ÊÊ 
.
ÊÊ 
LogError
ÊÊ  
(
ÊÊ  !
HelperService
ÊÊ! .
.
ÊÊ. /
LoggerMessage
ÊÊ/ <
(
ÊÊ< =
$str
ÊÊ= N
,
ÊÊN O
$str
ÊÊP e
,
ÊÊe f
	exception
ÊÊg p
)
ÊÊp q
)
ÊÊq r
;
ÊÊr s
throw
ÁÁ 
;
ÁÁ 
}
ËË 
finally
ÈÈ 
{
ÍÍ 
if
ÎÎ 
(
ÎÎ 
IsTracingEnabled
ÎÎ $
)
ÎÎ$ %
{
ÏÏ 

_stopWatch
ÌÌ 
.
ÌÌ 
Stop
ÌÌ #
(
ÌÌ# $
)
ÌÌ$ %
;
ÌÌ% &
_logger
ÓÓ 
.
ÓÓ 
LogInformation
ÓÓ *
(
ÓÓ* +
$"
ÓÓ+ -
$str
ÓÓ- m
{
ÓÓm n

_stopWatch
ÓÓn x
.
ÓÓx y"
ElapsedMillisecondsÓÓy å
}ÓÓå ç
$strÓÓç è
"ÓÓè ê
)ÓÓê ë
;ÓÓë í
}
ÔÔ 
}
 
}
ÒÒ 	
private
ÙÙ 
int
ÙÙ 
GetRange
ÙÙ 
(
ÙÙ 
)
ÙÙ 
{
ıı 	
if
ˆˆ 
(
ˆˆ 
IsTracingEnabled
ˆˆ  
)
ˆˆ  !

_stopWatch
ˆˆ" ,
.
ˆˆ, -
Start
ˆˆ- 2
(
ˆˆ2 3
)
ˆˆ3 4
;
ˆˆ4 5
try
˜˜ 
{
¯¯ 
var
˘˘ 
Duration
˘˘ 
=
˘˘ 
_configuration
˘˘ -
[
˘˘- .
$str
˘˘. P
]
˘˘P Q
;
˘˘Q R
return
˙˙ 
Duration
˙˙ 
!=
˙˙  "
null
˙˙# '
?
˙˙( )
Convert
˙˙* 1
.
˙˙1 2
ToInt32
˙˙2 9
(
˙˙9 :
Duration
˙˙: B
)
˙˙B C
:
˙˙D E
throw
˙˙F K
new
˙˙L O
	Exception
˙˙P Y
(
˙˙Y Z
$str˙˙Z •
)˙˙• ¶
;˙˙¶ ß
}
˚˚ 
catch
¸¸ 
(
¸¸ 
	Exception
¸¸ 
	exception
¸¸ &
)
¸¸& '
{
˝˝ 
_logger
˛˛ 
.
˛˛ 
LogError
˛˛  
(
˛˛  !
HelperService
˛˛! .
.
˛˛. /
LoggerMessage
˛˛/ <
(
˛˛< =
$str
˛˛= M
,
˛˛M N
$str
˛˛O _
,
˛˛_ `
	exception
˛˛a j
)
˛˛j k
)
˛˛k l
;
˛˛l m
throw
ˇˇ 
;
ˇˇ 
}
ÄÄ 
finally
ÅÅ 
{
ÇÇ 
if
ÉÉ 
(
ÉÉ 
IsTracingEnabled
ÉÉ $
)
ÉÉ$ %
{
ÑÑ 

_stopWatch
ÖÖ 
.
ÖÖ 
Stop
ÖÖ #
(
ÖÖ# $
)
ÖÖ$ %
;
ÖÖ% &
_logger
ÜÜ 
.
ÜÜ 
LogInformation
ÜÜ *
(
ÜÜ* +
$"
ÜÜ+ -
$str
ÜÜ- g
{
ÜÜg h

_stopWatch
ÜÜh r
.
ÜÜr s"
ElapsedMillisecondsÜÜs Ü
}ÜÜÜ á
$strÜÜá â
"ÜÜâ ä
)ÜÜä ã
;ÜÜã å
}
áá 
}
àà 
}
ââ 	
public
åå 
bool
åå 0
"GetIsTraceEnabledFromConfiguration
åå 6
(
åå6 7
)
åå7 8
{
çç 	
try
éé 
{
èè 
var
êê /
!IsTracingEnabledFromConfiguration
êê 5
=
êê6 7
_configuration
êê8 F
[
êêF G
$str
êêG Z
]
êêZ [
;
êê[ \
return
ëë /
!IsTracingEnabledFromConfiguration
ëë 8
!=
ëë9 ;
null
ëë< @
?
ëëA B
Convert
ëëC J
.
ëëJ K
	ToBoolean
ëëK T
(
ëëT U/
!IsTracingEnabledFromConfiguration
ëëU v
)
ëëv w
:
ëëx y
false
ëëz 
;ëë Ä
}
íí 
catch
ìì 
(
ìì 
	Exception
ìì 
	exception
ìì &
)
ìì& '
{
îî 
_logger
ïï 
.
ïï 
LogError
ïï  
(
ïï  !
HelperService
ïï! .
.
ïï. /
LoggerMessage
ïï/ <
(
ïï< =
$str
ïï= M
,
ïïM N
$str
ïïO u
,
ïïu v
	exceptionïïw Ä
)ïïÄ Å
)ïïÅ Ç
;ïïÇ É
return
ññ 
false
ññ 
;
ññ 
}
óó 
}
òò 	
}
ôô 
}öö ∂’
\C:\Users\pooja.sakthivel\Desktop\AspireOverflow\DataAccessLayer\Repository\UserRepository.cs
	namespace 	
AspireOverflow
 
. 
DataAccessLayer (
{		 
public

 

class

 
UserRepository

 
:

  !
IUserRepository

" 1
{ 
private 
readonly !
AspireOverflowContext .
_context/ 7
;7 8
private 
readonly 
ILogger  
<  !
UserRepository! /
>/ 0
_logger1 8
;8 9
private 
readonly 
IConfiguration '
_configuration( 6
;6 7
private 
readonly 
	Stopwatch "

_stopWatch# -
=. /
new/ 2
	Stopwatch3 <
(< =
)= >
;> ?
private 
readonly 
bool 
IsTracingEnabled .
;. /
public 
UserRepository 
( !
AspireOverflowContext 3
context4 ;
,; <
ILogger= D
<D E
UserRepositoryE S
>S T
loggerU [
,[ \
IConfiguration] k
configurationl y
)y z
{ 	
_context 
= 
context 
; 
_logger 
= 
logger 
; 
_configuration 
= 
configuration *
;* +
IsTracingEnabled 
= .
"GetIsTraceEnabledFromConfiguration A
(A B
)B C
;C D
} 	
public 
bool 

CreateUser 
( 
User #
User$ (
)( )
{ 	
if 
( 
IsTracingEnabled 
)  

_stopWatch! +
.+ ,
Start, 1
(1 2
)2 3
;3 4

Validation 
. 
ValidateUser #
(# $
User$ (
)( )
;) *
try 
{   
if!! 
(!! 
_context!! 
.!! 
Users!! #
.!!# $
Any!!$ '
(!!' (
Item!!( ,
=>!!- /
Item!!0 4
.!!4 5
	AceNumber!!5 >
==!!? A
User!!B F
.!!F G
	AceNumber!!G P
)!!P Q
)!!Q R
throw!!S X
new!!Y \
ValidationException!!] p
(!!p q
$str	!!q å
)
!!å ç
;
!!ç é
if"" 
("" 
_context"" 
."" 
Users"" #
.""# $
Any""$ '
(""' (
Item""( ,
=>""- /
Item""0 4
.""4 5
EmailAddress""5 A
==""B D
User""E I
.""I J
EmailAddress""J V
)""V W
)""W X
throw""Y ^
new""_ b
ValidationException""c v
(""v w
$str	""w ï
)
""ï ñ
;
""ñ ó
_context## 
.## 
Users## 
.## 
Add## "
(##" #
User### '
)##' (
;##( )
_context$$ 
.$$ 
SaveChanges$$ $
($$$ %
)$$% &
;$$& '
return%% 
true%% 
;%% 
}&& 
catch'' 
('' 
ValidationException'' &
	exception''' 0
)''0 1
{(( 
_logger)) 
.)) 
LogError))  
())  !
HelperService))! .
.)). /
LoggerMessage))/ <
())< =
$str))= M
,))M N
$str))O f
,))f g
	exception))h q
,))q r
User))s w
)))w x
)))x y
;))y z
throw** 
;** 
}++ 
catch,, 
(,, 
	Exception,, 
	exception,, &
),,& '
{-- 
_logger.. 
... 
LogError..  
(..  !
HelperService..! .
.... /
LoggerMessage../ <
(..< =
$str..= M
,..M N
$str..O f
,..f g
	exception..h q
,..q r
User..s w
)..w x
)..x y
;..y z
return// 
false// 
;// 
}00 
finally11 
{22 
if33 
(33 
IsTracingEnabled33 #
)33# $
{44 

_stopWatch55 
.55 
Stop55 
(55  
)55  !
;55! "
_logger66 
.66 
LogInformation66 &
(66& '
$"66' )
$str66) j
{66j k

_stopWatch66k u
.66u v 
ElapsedMilliseconds	66v â
}
66â ä
$str
66ä å
"
66å ç
)
66ç é
;
66é è
}77 
}88 
}99 	
public== 
bool== 

RemoveUser== 
(== 
int== "
UserId==# )
)==) *
{>> 	
if?? 
(?? 
IsTracingEnabled?? 
)??  

_stopWatch??! +
.??+ ,
Start??, 1
(??1 2
)??2 3
;??3 4
if@@ 
(@@ 
UserId@@ 
<=@@ 
$num@@ 
)@@ 
throw@@ "
new@@# &
ArgumentException@@' 8
(@@8 9
$"@@9 ;
$str@@; g
{@@g h
UserId@@h n
}@@n o
"@@o p
)@@p q
;@@q r
tryAA 
{BB 
varCC 
User_NotVerifiedCC $
=CC% &
GetUserByIDCC' 2
(CC2 3
UserIdCC3 9
)CC9 :
;CC: ;
ifDD 
(DD 
User_NotVerifiedDD $
.DD$ %
VerifyStatusIDDD% 3
==DD4 6
$numDD7 8
)DD8 9
{EE 
_contextFF 
.FF 
UsersFF "
.FF" #
RemoveFF# )
(FF) *
User_NotVerifiedFF* :
)FF: ;
;FF; <
_contextGG 
.GG 
SaveChangesGG (
(GG( )
)GG) *
;GG* +
}HH 
returnII 
trueII 
;II 
}JJ 
catchKK 
(KK 
	ExceptionKK 
	exceptionKK &
)KK& '
{LL 
_loggerMM 
.MM 
LogErrorMM  
(MM  !
HelperServiceMM! .
.MM. /
LoggerMessageMM/ <
(MM< =
$strMM= M
,MMM N
$strMMO g
,MMg h
	exceptionMMi r
,MMr s
UserIdMMt z
)MMz {
)MM{ |
;MM| }
returnNN 
falseNN 
;NN 
}OO 
finallyPP 
{QQ 
ifRR 
(RR 
IsTracingEnabledRR #
)RR# $
{SS 

_stopWatchTT 
.TT 
StopTT 
(TT  
)TT  !
;TT! "
_loggerUU 
.UU 
LogInformationUU &
(UU& '
$"UU' )
$strUU) k
{UUk l

_stopWatchUUl v
.UUv w 
ElapsedMilliseconds	UUw ä
}
UUä ã
$str
UUã ç
"
UUç é
)
UUé è
;
UUè ê
}VV 
}WW 
}XX 	
public\\ 
User\\ 
GetUserByID\\ 
(\\  
int\\  #
UserId\\$ *
)\\* +
{]] 	
if^^ 
(^^ 
IsTracingEnabled^^ 
)^^  

_stopWatch^^! +
.^^+ ,
Start^^, 1
(^^1 2
)^^2 3
;^^3 4
if__ 
(__ 
UserId__ 
<=__ 
$num__ 
)__ 
throw__ "
new__# &
ArgumentException__' 8
(__8 9
$"__9 ;
$str__; g
{__g h
UserId__h n
}__n o
"__o p
)__p q
;__q r
User`` 
?`` 
user`` 
;`` 
tryaa 
{bb 
usercc 
=cc 
_contextcc 
.cc  
Userscc  %
.cc% &
Includecc& -
(cc- .
ecc. /
=>cc/ 1
ecc1 2
.cc2 3
Designationcc3 >
)cc> ?
.cc? @
Includecc@ G
(ccG H
eccH I
=>ccI K
eccK L
.ccL M
GenderccM S
)ccS T
.ccT U
IncludeccU \
(cc\ ]
ecc] ^
=>cc^ `
ecc` a
.cca b
Designationccb m
!ccm n
.ccn o

Departmentcco y
)ccy z
.ccz {
Include	cc{ Ç
(
ccÇ É
e
ccÉ Ñ
=>
ccÑ Ü
e
ccÜ á
.
ccá à
UserRole
ccà ê
)
ccê ë
.
ccë í
FirstOrDefault
ccí †
(
cc† °
User
cc° •
=>
cc¶ ®
User
cc© ≠
.
cc≠ Æ
UserId
ccÆ ¥
==
ccµ ∑
UserId
cc∏ æ
)
ccæ ø
;
ccø ¿
returndd 
userdd 
!=dd 
nulldd #
?dd$ %
userdd& *
:dd+ ,
throwdd- 2
newdd3 6!
ItemNotFoundExceptiondd7 L
(ddL M
$"ddM O
$strddO {
{dd{ |
UserId	dd| Ç
}
ddÇ É
"
ddÉ Ñ
)
ddÑ Ö
;
ddÖ Ü
}ee 
catchff 
(ff 
	Exceptionff 
	exceptionff &
)ff& '
{gg 
_loggerhh 
.hh 
LogErrorhh  
(hh  !
HelperServicehh! .
.hh. /
LoggerMessagehh/ <
(hh< =
$strhh= M
,hhM N
$strhhO h
,hhh i
	exceptionhhj s
,hhs t
UserIdhhu {
)hh{ |
)hh| }
;hh} ~
throwii 
;ii 
}jj 
finallykk 
{ll 
ifmm 
(mm 
IsTracingEnabledmm #
)mm# $
{nn 

_stopWatchoo 
.oo 
Stopoo 
(oo  
)oo  !
;oo! "
_loggerpp 
.pp 
LogInformationpp &
(pp& '
$"pp' )
$strpp) l
{ppl m

_stopWatchppm w
.ppw x 
ElapsedMilliseconds	ppx ã
}
ppã å
$str
ppå é
"
ppé è
)
ppè ê
;
ppê ë
}qq 
}rr 
}ss 	
publicvv 
Uservv 
GetUserByEmailvv "
(vv" #
stringvv# )
Emailvv* /
)vv/ 0
{ww 	
ifxx 
(xx 
IsTracingEnabledxx 
)xx  

_stopWatchxx! +
.xx+ ,
Startxx, 1
(xx1 2
)xx2 3
;xx3 4

Validationyy 
.yy 
ValidateEmailyy $
(yy$ %
Emailyy% *
)yy* +
;yy+ ,
tryzz 
{{{ 
var|| 
user|| 
=|| 
_context|| #
.||# $
Users||$ )
.||) *
Include||* 1
(||1 2
e||2 3
=>||3 5
e||5 6
.||6 7
UserRole||7 ?
)||? @
.||@ A
Include||A H
(||H I
e||I J
=>||J L
e||L M
.||M N
VerifyStatus||N Z
)||Z [
.||[ \
FirstOrDefault||\ j
(||j k
User||k o
=>||p r
User||s w
.||w x
EmailAddress	||x Ñ
.
||Ñ Ö
ToLower
||Ö å
(
||å ç
)
||ç é
==
||è ë
Email
||í ó
.
||ó ò
ToLower
||ò ü
(
||ü †
)
||† °
)
||° ¢
;
||¢ £
return}} 
user}} 
!=}} 
null}} #
?}}$ %
user}}& *
:}}+ ,
throw}}- 2
new}}3 6
ValidationException}}7 J
(}}J K
$"}}K M
$str}}M x
{}}x y
Email}}y ~
}}}~ 
"	}} Ä
)
}}Ä Å
;
}}Å Ç
}~~ 
catch 
( !
ItemNotFoundException (
	exception) 2
)2 3
{
ÄÄ 
_logger
ÅÅ 
.
ÅÅ 
LogError
ÅÅ  
(
ÅÅ  !
HelperService
ÅÅ! .
.
ÅÅ. /
LoggerMessage
ÅÅ/ <
(
ÅÅ< =
$str
ÅÅ= M
,
ÅÅM N
$str
ÅÅO g
,
ÅÅg h
	exception
ÅÅi r
,
ÅÅr s
Email
ÅÅt y
)
ÅÅy z
)
ÅÅz {
;
ÅÅ{ |
throw
ÇÇ 
;
ÇÇ 
}
ÉÉ 
catch
ÑÑ 
(
ÑÑ 
	Exception
ÑÑ 
	exception
ÑÑ &
)
ÑÑ& '
{
ÖÖ 
_logger
ÜÜ 
.
ÜÜ 
LogError
ÜÜ  
(
ÜÜ  !
HelperService
ÜÜ! .
.
ÜÜ. /
LoggerMessage
ÜÜ/ <
(
ÜÜ< =
$str
ÜÜ= M
,
ÜÜM N
$str
ÜÜO g
,
ÜÜg h
	exception
ÜÜi r
,
ÜÜr s
Email
ÜÜt y
)
ÜÜy z
)
ÜÜz {
;
ÜÜ{ |
throw
áá 
;
áá 
}
àà 
finally
ââ 
{
ää 
if
ãã 
(
ãã 
IsTracingEnabled
ãã #
)
ãã# $
{
åå 

_stopWatch
çç 
.
çç 
Stop
çç 
(
çç  
)
çç  !
;
çç! "
_logger
éé 
.
éé 
LogInformation
éé &
(
éé& '
$"
éé' )
$str
éé) k
{
éék l

_stopWatch
éél v
.
éév w"
ElapsedMillisecondsééw ä
}ééä ã
$strééã ç
"ééç é
)ééé è
;ééè ê
}
èè 
}
êê 
}
ëë 	
public
ññ 
bool
ññ &
UpdateUserByVerifyStatus
ññ ,
(
ññ, -
int
ññ- 0
UserId
ññ1 7
,
ññ7 8
int
ññ9 <
VerifyStatusID
ññ= K
,
ññK L
int
ññL O
UpdatedByUserId
ññP _
)
ññ_ `
{
óó 	
if
òò 
(
òò 
IsTracingEnabled
òò 
)
òò  

_stopWatch
òò! +
.
òò+ ,
Start
òò, 1
(
òò1 2
)
òò2 3
;
òò3 4
if
ôô 
(
ôô 
UserId
ôô 
<=
ôô 
$num
ôô 
)
ôô 
throw
ôô "
new
ôô# &
ArgumentException
ôô' 8
(
ôô8 9
$"
ôô9 ;
$str
ôô; g
{
ôôg h
UserId
ôôh n
}
ôôn o
"
ôôo p
)
ôôp q
;
ôôq r
if
öö 
(
öö 
VerifyStatusID
öö 
<=
öö !
$num
öö" #
||
öö$ &
VerifyStatusID
öö' 5
>
öö6 7
$num
öö8 9
)
öö9 :
throw
öö; @
new
ööA D
ArgumentException
ööE V
(
ööV W
$"
ööW Y
$strööY ñ
{ööñ ó
VerifyStatusIDööó •
}öö• ¶
"öö¶ ß
)ööß ®
;öö® ©
try
õõ 
{
úú 
var
ùù 
ExistingUser
ùù  
=
ùù! "
GetUserByID
ùù# .
(
ùù. /
UserId
ùù/ 5
)
ùù5 6
;
ùù6 7
ExistingUser
ûû 
.
ûû 
VerifyStatusID
ûû +
=
ûû, -
VerifyStatusID
ûû. <
;
ûû< =
ExistingUser
üü 
.
üü 
	UpdatedOn
üü &
=
üü& '
DateTime
üü' /
.
üü/ 0
Now
üü0 3
;
üü3 4
ExistingUser
†† 
.
†† 
	UpdatedBy
†† &
=
††& '
UpdatedByUserId
††' 6
;
††6 7
_context
°° 
.
°° 
Users
°° 
.
°° 
Update
°° %
(
°°% &
ExistingUser
°°& 2
)
°°2 3
;
°°3 4
_context
¢¢ 
.
¢¢ 
SaveChanges
¢¢ $
(
¢¢$ %
)
¢¢% &
;
¢¢& '
return
££ 
true
££ 
;
££ 
}
§§ 
catch
•• 
(
•• 
	Exception
•• 
	exception
•• &
)
••& '
{
¶¶ 
_logger
ßß 
.
ßß 
LogError
ßß  
(
ßß  !
HelperService
ßß! .
.
ßß. /
LoggerMessage
ßß/ <
(
ßß< =
$str
ßß= M
,
ßßM N
$strßßO â
,ßßâ ä
	exceptionßßã î
,ßßî ï
$"ßßñ ò
$strßßò °
{ßß° ¢
UserIdßß¢ ®
}ßß® ©
$strßß© ∫
{ßß∫ ª
VerifyStatusIDßßª …
}ßß…  
"ßß  À
)ßßÀ Ã
)ßßÃ Õ
;ßßÕ Œ
throw
®® 
;
®® 
}
©© 
finally
™™ 
{
´´ 
if
¨¨ 
(
¨¨ 
IsTracingEnabled
¨¨ #
)
¨¨# $
{
≠≠ 

_stopWatch
ÆÆ 
.
ÆÆ 
Stop
ÆÆ 
(
ÆÆ  
)
ÆÆ  !
;
ÆÆ! "
_logger
ØØ 
.
ØØ 
LogInformation
ØØ &
(
ØØ& '
$"
ØØ' )
$str
ØØ) y
{
ØØy z

_stopWatchØØz Ñ
.ØØÑ Ö#
ElapsedMillisecondsØØÖ ò
}ØØò ô
$strØØô õ
"ØØõ ú
)ØØú ù
;ØØù û
}
∞∞ 
}
±± 
}
≤≤ 	
public
∂∂ 
bool
∂∂ "
UpdateUserByReviewer
∂∂ (
(
∂∂( )
int
∂∂) ,
UserId
∂∂- 3
,
∂∂3 4
bool
∂∂5 9

IsReviewer
∂∂: D
,
∂∂D E
int
∂∂E H
UpdatedByUserId
∂∂I X
)
∂∂X Y
{
∑∑ 	
if
∏∏ 
(
∏∏ 
IsTracingEnabled
∏∏ 
)
∏∏  

_stopWatch
∏∏! +
.
∏∏+ ,
Start
∏∏, 1
(
∏∏1 2
)
∏∏2 3
;
∏∏3 4
if
ππ 
(
ππ 
UserId
ππ 
<=
ππ 
$num
ππ 
)
ππ 
throw
ππ "
new
ππ# &
ArgumentException
ππ' 8
(
ππ8 9
$"
ππ9 ;
$str
ππ; g
{
ππg h
UserId
ππh n
}
ππn o
"
ππo p
)
ππp q
;
ππq r
try
∫∫ 
{
ªª 
var
ºº 
ExistingUser
ºº  
=
ºº! "
GetUserByID
ºº# .
(
ºº. /
UserId
ºº/ 5
)
ºº5 6
;
ºº6 7
ExistingUser
ΩΩ 
.
ΩΩ 

IsReviewer
ΩΩ '
=
ΩΩ( )

IsReviewer
ΩΩ* 4
;
ΩΩ4 5
ExistingUser
ææ 
.
ææ 
	UpdatedBy
ææ &
=
ææ& '
UpdatedByUserId
ææ' 6
;
ææ6 7
ExistingUser
øø 
.
øø 
	UpdatedOn
øø &
=
øø& '
DateTime
øø' /
.
øø/ 0
Now
øø0 3
;
øø3 4
_context
¿¿ 
.
¿¿ 
Users
¿¿ 
.
¿¿ 
Update
¿¿ %
(
¿¿% &
ExistingUser
¿¿& 2
)
¿¿2 3
;
¿¿3 4
_context
¡¡ 
.
¡¡ 
SaveChanges
¡¡ $
(
¡¡$ %
)
¡¡% &
;
¡¡& '
return
¬¬ 
true
¬¬ 
;
¬¬ 
}
√√ 
catch
ƒƒ 
(
ƒƒ 
	Exception
ƒƒ 
	exception
ƒƒ &
)
ƒƒ& '
{
≈≈ 
_logger
∆∆ 
.
∆∆ 
LogError
∆∆  
(
∆∆  !
HelperService
∆∆! .
.
∆∆. /
LoggerMessage
∆∆/ <
(
∆∆< =
$str
∆∆= M
,
∆∆M N
$str∆∆O Ç
,∆∆Ç É
	exception∆∆Ñ ç
,∆∆ç é
$"∆∆è ë
$str∆∆ë ö
{∆∆ö õ
UserId∆∆õ °
}∆∆° ¢
$str∆∆¢ Ø
{∆∆Ø ∞

IsReviewer∆∆∞ ∫
}∆∆∫ ª
"∆∆ª º
)∆∆º Ω
)∆∆Ω æ
;∆∆æ ø
throw
«« 
;
«« 
}
»» 
finally
…… 
{
   
if
ÀÀ 
(
ÀÀ 
IsTracingEnabled
ÀÀ #
)
ÀÀ# $
{
ÃÃ 

_stopWatch
ÕÕ 
.
ÕÕ 
Stop
ÕÕ 
(
ÕÕ  
)
ÕÕ  !
;
ÕÕ! "
_logger
ŒŒ 
.
ŒŒ 
LogInformation
ŒŒ &
(
ŒŒ& '
$"
ŒŒ' )
$str
ŒŒ) y
{
ŒŒy z

_stopWatchŒŒz Ñ
.ŒŒÑ Ö#
ElapsedMillisecondsŒŒÖ ò
}ŒŒò ô
$strŒŒô õ
"ŒŒõ ú
)ŒŒú ù
;ŒŒù û
}
œœ 
}
–– 
}
—— 	
public
‘‘ 
IEnumerable
‘‘ 
<
‘‘ 
User
‘‘ 
>
‘‘  
GetUsers
‘‘! )
(
‘‘) *
)
‘‘* +
{
’’ 	
if
÷÷ 
(
÷÷ 
IsTracingEnabled
÷÷ 
)
÷÷  

_stopWatch
÷÷! +
.
÷÷+ ,
Start
÷÷, 1
(
÷÷1 2
)
÷÷2 3
;
÷÷3 4
try
◊◊ 
{
ÿÿ 
return
ŸŸ 
_context
ŸŸ 
.
ŸŸ  
Users
ŸŸ  %
.
ŸŸ% &
Include
ŸŸ& -
(
ŸŸ- .
e
ŸŸ. /
=>
ŸŸ0 2
e
ŸŸ3 4
.
ŸŸ4 5
Designation
ŸŸ5 @
)
ŸŸ@ A
.
ŸŸA B
Include
ŸŸB I
(
ŸŸI J
e
ŸŸJ K
=>
ŸŸL N
e
ŸŸO P
.
ŸŸP Q
UserRole
ŸŸQ Y
)
ŸŸY Z
.
ŸŸZ [
Include
ŸŸ[ b
(
ŸŸb c
e
ŸŸc d
=>
ŸŸe g
e
ŸŸh i
.
ŸŸi j
Gender
ŸŸj p
)
ŸŸp q
.
ŸŸq r
Include
ŸŸr y
(
ŸŸy z
e
ŸŸz {
=>
ŸŸ| ~
eŸŸ Ä
.ŸŸÄ Å
VerifyStatusŸŸÅ ç
)ŸŸç é
.ŸŸé è
ToListŸŸè ï
(ŸŸï ñ
)ŸŸñ ó
;ŸŸó ò
}
⁄⁄ 
catch
€€ 
(
€€ 
	Exception
€€ 
	exception
€€ &
)
€€& '
{
‹‹ 
_logger
›› 
.
›› 
LogError
››  
(
››  !
HelperService
››! .
.
››. /
LoggerMessage
››/ <
(
››< =
$str
››= M
,
››M N
$str
››O [
,
››[ \
	exception
››] f
)
››f g
)
››g h
;
››h i
throw
ﬁﬁ 
;
ﬁﬁ 
}
ﬂﬂ 
finally
‡‡ 
{
·· 
if
‚‚ 
(
‚‚ 
IsTracingEnabled
‚‚ #
)
‚‚# $
{
„„ 

_stopWatch
‰‰ 
.
‰‰ 
Stop
‰‰ 
(
‰‰  
)
‰‰  !
;
‰‰! "
_logger
ÂÂ 
.
ÂÂ 
LogInformation
ÂÂ &
(
ÂÂ& '
$"
ÂÂ' )
$str
ÂÂ) y
{
ÂÂy z

_stopWatchÂÂz Ñ
.ÂÂÑ Ö#
ElapsedMillisecondsÂÂÖ ò
}ÂÂò ô
$strÂÂô õ
"ÂÂõ ú
)ÂÂú ù
;ÂÂù û
}
ÊÊ 
}
ÁÁ 
}
ËË 	
public
ÎÎ	 
IEnumerable
ÎÎ 
<
ÎÎ 
User
ÎÎ  
>
ÎÎ  !&
GetUsersByVerifyStatusId
ÎÎ" :
(
ÎÎ: ;
int
ÎÎ; >
VerifyStatusID
ÎÎ? M
)
ÎÎM N
{
ÏÏ 	
if
ÌÌ 
(
ÌÌ 
IsTracingEnabled
ÌÌ 
)
ÌÌ  

_stopWatch
ÌÌ! +
.
ÌÌ+ ,
Start
ÌÌ, 1
(
ÌÌ1 2
)
ÌÌ2 3
;
ÌÌ3 4
if
ÔÔ 
(
ÔÔ 
VerifyStatusID
ÔÔ 
<=
ÔÔ !
$num
ÔÔ" #
||
ÔÔ$ &
VerifyStatusID
ÔÔ' 5
>
ÔÔ6 7
$num
ÔÔ8 9
)
ÔÔ9 :
throw
ÔÔ; @
new
ÔÔA D
ArgumentException
ÔÔE V
(
ÔÔV W
$strÔÔW é
)ÔÔé è
;ÔÔè ê
try
 
{
ÒÒ 
return
ÚÚ 
_context
ÚÚ 
.
ÚÚ  
Users
ÚÚ  %
.
ÚÚ% &
Where
ÚÚ& +
(
ÚÚ+ ,
user
ÚÚ, 0
=>
ÚÚ1 3
user
ÚÚ3 7
.
ÚÚ7 8
VerifyStatusID
ÚÚ8 F
==
ÚÚF H
VerifyStatusID
ÚÚH V
)
ÚÚV W
.
ÚÚW X
Include
ÚÚX _
(
ÚÚ_ `
e
ÚÚ` a
=>
ÚÚb d
e
ÚÚe f
.
ÚÚf g
Designation
ÚÚg r
)
ÚÚr s
.
ÚÚs t
Include
ÚÚt {
(
ÚÚ{ |
e
ÚÚ| }
=>ÚÚ~ Ä
eÚÚÅ Ç
.ÚÚÇ É
GenderÚÚÉ â
)ÚÚâ ä
.ÚÚä ã
IncludeÚÚã í
(ÚÚí ì
eÚÚì î
=>ÚÚî ñ
eÚÚñ ó
.ÚÚó ò
DesignationÚÚò £
!ÚÚ£ §
.ÚÚ§ •

DepartmentÚÚ• Ø
)ÚÚØ ∞
.ÚÚ∞ ±
ToListÚÚ± ∑
(ÚÚ∑ ∏
)ÚÚ∏ π
;ÚÚπ ∫
}
ÛÛ 
catch
ÛÛ 
(
ÛÛ 
	Exception
ÛÛ 
	exception
ÛÛ &
)
ÛÛ& '
{
ÛÛ' (
_logger
ÙÙ 
.
ÙÙ 
LogError
ÙÙ  
(
ÙÙ  !
HelperService
ÙÙ! .
.
ÙÙ. /
LoggerMessage
ÙÙ/ <
(
ÙÙ< =
$str
ÙÙ= M
,
ÙÙM N
$str
ÙÙO {
,
ÙÙ{ |
	exceptionÙÙ} Ü
,ÙÙÜ á
VerifyStatusIDÙÙá ï
)ÙÙï ñ
)ÙÙñ ó
;ÙÙó ò
throw
ıı 
;
ıı 
}
ˆˆ 
finally
˜˜ 
{
¯¯ 
if
˘˘ 
(
˘˘ 
IsTracingEnabled
˘˘ #
)
˘˘# $
{
˙˙ 

_stopWatch
˚˚ 
.
˚˚ 
Stop
˚˚ 
(
˚˚  
)
˚˚  !
;
˚˚! "
_logger
¸¸ 
.
¸¸ 
LogInformation
¸¸ &
(
¸¸& '
$"
¸¸' )
$str
¸¸) y
{
¸¸y z

_stopWatch¸¸z Ñ
.¸¸Ñ Ö#
ElapsedMilliseconds¸¸Ö ò
}¸¸ò ô
$str¸¸ô õ
"¸¸õ ú
)¸¸ú ù
;¸¸ù û
}
˝˝ 
}
˛˛ 
}
ˇˇ 	
public
ÇÇ 
IEnumerable
ÇÇ 
<
ÇÇ 
User
ÇÇ "
>
ÇÇ" #"
GetUsersByUserRoleID
ÇÇ$ 8
(
ÇÇ8 9
int
ÇÇ9 <

UserRoleID
ÇÇ= G
)
ÇÇG H
{
ÉÉ 	
if
ÑÑ 
(
ÑÑ 
IsTracingEnabled
ÑÑ 
)
ÑÑ  

_stopWatch
ÑÑ! +
.
ÑÑ+ ,
Start
ÑÑ, 1
(
ÑÑ1 2
)
ÑÑ2 3
;
ÑÑ3 4
if
ÖÖ 
(
ÖÖ 

UserRoleID
ÖÖ 
<=
ÖÖ 
$num
ÖÖ 
||
ÖÖ  "

UserRoleID
ÖÖ# -
>
ÖÖ. /
$num
ÖÖ0 1
)
ÖÖ1 2
throw
ÖÖ3 8
new
ÖÖ9 <
ArgumentException
ÖÖ= N
(
ÖÖN O
$"
ÖÖO Q
$strÖÖQ Ü
{ÖÖÜ á

UserRoleIDÖÖá ë
}ÖÖë í
"ÖÖí ì
)ÖÖì î
;ÖÖî ï
try
ÜÜ 
{
áá 
return
ââ 
_context
ââ 
.
ââ  
Users
ââ  %
.
ââ% &
Where
ââ& +
(
ââ+ ,
user
ââ, 0
=>
ââ1 3
user
ââ4 8
.
ââ8 9

UserRoleId
ââ9 C
==
ââD F

UserRoleID
ââG Q
&&
ââR T
user
ââU Y
.
ââY Z
VerifyStatusID
ââZ h
==
ââi k
$num
ââl m
)
ââm n
.
âân o
Include
ââo v
(
ââv w
e
ââw x
=>
âây {
e
ââ| }
.
ââ} ~
Designationââ~ â
)âââ ä
.ââä ã
Includeââã í
(ââí ì
eââì î
=>ââï ó
eââò ô
.ââô ö
Genderââö †
)ââ† °
.ââ° ¢
Includeââ¢ ©
(ââ© ™
eââ™ ´
=>ââ´ ≠
eââ≠ Æ
.ââÆ Ø
DesignationââØ ∫
!ââ∫ ª
.ââª º

Departmentââº ∆
)ââ∆ «
;ââ« »
}
ãã 
catch
åå 
(
åå 
	Exception
åå 
	exception
åå &
)
åå& '
{
çç 
_logger
éé 
.
éé 
LogError
éé  
(
éé  !
HelperService
éé! .
.
éé. /
LoggerMessage
éé/ <
(
éé< =
$str
éé= M
,
ééM N
$str
ééO u
,
ééu v
	exceptionééw Ä
,ééÄ Å

UserRoleIDééÇ å
)ééå ç
)ééç é
;ééé è
throw
èè 
;
èè 
}
êê 
finally
ëë 
{
íí 
if
ìì 
(
ìì 
IsTracingEnabled
ìì #
)
ìì# $
{
îî 

_stopWatch
ïï 
.
ïï 
Stop
ïï 
(
ïï  
)
ïï  !
;
ïï! "
_logger
ññ 
.
ññ 
LogInformation
ññ &
(
ññ& '
$"
ññ' )
$str
ññ) y
{
ññy z

_stopWatchññz Ñ
.ññÑ Ö#
ElapsedMillisecondsññÖ ò
}ññò ô
$strññô õ
"ññõ ú
)ññú ù
;ññù û
}
óó 
}
òò 
}
ôô 	
public
úú 
IEnumerable
úú 
<
úú 
User
úú "
>
úú" #"
GetUsersByIsReviewer
úú$ 8
(
úú8 9
bool
úú9 =

IsReviewer
úú> H
)
úúH I
{
ùù 	
if
ûû 
(
ûû 
IsTracingEnabled
ûû 
)
ûû  

_stopWatch
ûû! +
.
ûû+ ,
Start
ûû, 1
(
ûû1 2
)
ûû2 3
;
ûû3 4
try
üü 
{
†† 
return
°° 
_context
°° 
.
°°  
Users
°°  %
.
°°% &
Where
°°& +
(
°°+ ,
user
°°, 0
=>
°°1 3
user
°°4 8
.
°°8 9

IsReviewer
°°9 C
==
°°D F

IsReviewer
°°G Q
&&
°°R T
user
°°U Y
.
°°Y Z
VerifyStatusID
°°Z h
==
°°i k
$num
°°l m
)
°°m n
.
°°n o
Include
°°o v
(
°°v w
e
°°w x
=>
°°y {
e
°°| }
.
°°} ~
Designation°°~ â
)°°â ä
.°°ä ã
Include°°ã í
(°°í ì
e°°ì î
=>°°ï ó
e°°ò ô
.°°ô ö
Gender°°ö †
)°°† °
.°°° ¢
Include°°¢ ©
(°°© ™
e°°™ ´
=>°°´ ≠
e°°≠ Æ
.°°Æ Ø
Designation°°Ø ∫
!°°∫ ª
.°°ª º

Department°°º ∆
)°°∆ «
;°°« »
}
¢¢ 
catch
££ 
(
££ 
	Exception
££ 
	exception
££ &
)
££& '
{
§§ 
_logger
•• 
.
•• 
LogError
••  
(
••  !
HelperService
••! .
.
••. /
LoggerMessage
••/ <
(
••< =
$str
••= M
,
••M N
$str
••O v
,
••v w
	exception••x Å
,••Å Ç

IsReviewer••É ç
)••ç é
)••é è
;••è ê
throw
¶¶ 
;
¶¶ 
}
ßß 
finally
®® 
{
©© 
if
™™ 
(
™™ 
IsTracingEnabled
™™ #
)
™™# $
{
´´ 

_stopWatch
¨¨ 
.
¨¨ 
Stop
¨¨ 
(
¨¨  
)
¨¨  !
;
¨¨! "
_logger
≠≠ 
.
≠≠ 
LogInformation
≠≠ &
(
≠≠& '
$"
≠≠' )
$str
≠≠) y
{
≠≠y z

_stopWatch≠≠z Ñ
.≠≠Ñ Ö#
ElapsedMilliseconds≠≠Ö ò
}≠≠ò ô
$str≠≠ô õ
"≠≠õ ú
)≠≠ú ù
;≠≠ù û
}
ÆÆ 
}
ØØ 
}
∞∞ 	
public
≥≥ 
object
≥≥ 
GetCountOfUsers
≥≥ (
(
≥≥( )
)
≥≥) *
{
¥¥ 	
if
µµ 
(
µµ 
IsTracingEnabled
µµ 
)
µµ  

_stopWatch
µµ! +
.
µµ+ ,
Start
µµ, 1
(
µµ1 2
)
µµ2 3
;
µµ3 4
try
∂∂ 
{
∑∑ 
return
∏∏ 
new
∏∏ 
{
∏∏  
TotalNumberOfUsers
ππ &
=
ππ' (
_context
ππ) 1
.
ππ1 2
Users
ππ2 7
.
ππ7 8
Count
ππ8 =
(
ππ= >
)
ππ> ?
,
ππ? @
UsersToBeVerified
∫∫ %
=
∫∫& '
_context
∫∫( 0
.
∫∫0 1
Users
∫∫1 6
.
∫∫6 7
Count
∫∫7 <
(
∫∫< =
item
∫∫= A
=>
∫∫B D
item
∫∫E I
.
∫∫I J
VerifyStatusID
∫∫J X
==
∫∫Y [
$num
∫∫\ ]
)
∫∫] ^
,
∫∫^ _
VerifiedUsers
ªª !
=
ªª! "
_context
ªª" *
.
ªª* +
Users
ªª+ 0
.
ªª0 1
Count
ªª1 6
(
ªª6 7
item
ªª7 ;
=>
ªª< >
item
ªª? C
.
ªªC D
VerifyStatusID
ªªD R
==
ªªS U
$num
ªªV W
)
ªªW X
,
ªªX Y
NumberOfReviewers
ºº %
=
ºº& '
_context
ºº( 0
.
ºº0 1
Users
ºº1 6
.
ºº6 7
Count
ºº7 <
(
ºº< =
item
ºº= A
=>
ººB D
item
ººE I
.
ººI J

IsReviewer
ººJ T
)
ººT U
,
ººU V
}
ΩΩ 
;
ΩΩ 
}
ææ 
catch
øø 
(
øø 
	Exception
øø 
	exception
øø &
)
øø& '
{
¿¿ 
_logger
¡¡ 
.
¡¡ 
LogError
¡¡  
(
¡¡  !
HelperService
¡¡! .
.
¡¡. /
LoggerMessage
¡¡/ <
(
¡¡< =
$str
¡¡= M
,
¡¡M N
$str
¡¡O b
,
¡¡b c
	exception
¡¡d m
)
¡¡m n
)
¡¡n o
;
¡¡o p
throw
¬¬ 
;
¬¬ 
}
√√ 
finally
ƒƒ 
{
≈≈ 
if
∆∆ 
(
∆∆ 
IsTracingEnabled
∆∆ #
)
∆∆# $
{
«« 

_stopWatch
»» 
.
»» 
Stop
»» 
(
»»  
)
»»  !
;
»»! "
_logger
…… 
.
…… 
LogInformation
…… &
(
……& '
$"
……' )
$str
……) y
{
……y z

_stopWatch……z Ñ
.……Ñ Ö#
ElapsedMilliseconds……Ö ò
}……ò ô
$str……ô õ
"……õ ú
)……ú ù
;……ù û
}
   
}
ÀÀ 
}
ÃÃ 	
public
œœ 
IEnumerable
œœ 
<
œœ 
Gender
œœ !
>
œœ! "

GetGenders
œœ# -
(
œœ- .
)
œœ. /
{
–– 	
if
—— 
(
—— 
IsTracingEnabled
—— 
)
——  

_stopWatch
——! +
.
——+ ,
Start
——, 1
(
——1 2
)
——2 3
;
——3 4
try
““ 
{
”” 
return
‘‘ 
_context
‘‘ 
.
‘‘  
Genders
‘‘  '
.
‘‘' (
ToList
‘‘( .
(
‘‘. /
)
‘‘/ 0
;
‘‘0 1
}
’’ 
catch
÷÷ 
(
÷÷ 
	Exception
÷÷ 
	exception
÷÷ &
)
÷÷& '
{
◊◊ 
_logger
ÿÿ 
.
ÿÿ 
LogError
ÿÿ  
(
ÿÿ  !
HelperService
ÿÿ! .
.
ÿÿ. /
LoggerMessage
ÿÿ/ <
(
ÿÿ< =
$str
ÿÿ= M
,
ÿÿM N
$str
ÿÿO ^
,
ÿÿ^ _
	exception
ÿÿ` i
)
ÿÿi j
)
ÿÿj k
;
ÿÿk l
throw
ŸŸ 
;
ŸŸ 
}
⁄⁄ 
finally
€€ 
{
‹‹ 
if
›› 
(
›› 
IsTracingEnabled
›› #
)
››# $
{
ﬁﬁ 

_stopWatch
ﬂﬂ 
.
ﬂﬂ 
Stop
ﬂﬂ 
(
ﬂﬂ  
)
ﬂﬂ  !
;
ﬂﬂ! "
_logger
‡‡ 
.
‡‡ 
LogInformation
‡‡ &
(
‡‡& '
$"
‡‡' )
$str
‡‡) a
{
‡‡a b

_stopWatch
‡‡b l
.
‡‡l m"
ElapsedMilliseconds‡‡m Ä
}‡‡Ä Å
$str‡‡Å É
"‡‡É Ñ
)‡‡Ñ Ö
;‡‡Ö Ü
}
·· 
}
‚‚ 
}
„„ 	
public
ÁÁ 
IEnumerable
ÁÁ 
<
ÁÁ 
Designation
ÁÁ &
>
ÁÁ& '
GetDesignations
ÁÁ( 7
(
ÁÁ7 8
)
ÁÁ8 9
{
ËË 	
if
ÈÈ 
(
ÈÈ 
IsTracingEnabled
ÈÈ 
)
ÈÈ  

_stopWatch
ÈÈ! +
.
ÈÈ+ ,
Start
ÈÈ, 1
(
ÈÈ1 2
)
ÈÈ2 3
;
ÈÈ3 4
try
ÍÍ 
{
ÎÎ 
return
ÏÏ 
_context
ÏÏ 
.
ÏÏ  
Designations
ÏÏ  ,
.
ÏÏ, -
Include
ÏÏ- 4
(
ÏÏ4 5
e
ÏÏ5 6
=>
ÏÏ7 9
e
ÏÏ: ;
.
ÏÏ; <

Department
ÏÏ< F
)
ÏÏF G
.
ÏÏG H
ToList
ÏÏH N
(
ÏÏN O
)
ÏÏO P
;
ÏÏP Q
}
ÌÌ 
catch
ÓÓ 
(
ÓÓ 
	Exception
ÓÓ 
	exception
ÓÓ &
)
ÓÓ& '
{
ÔÔ 
_logger
 
.
 
LogError
  
(
  !
HelperService
! .
.
. /
LoggerMessage
/ <
(
< =
$str
= M
,
M N
$str
O c
,
c d
	exception
e n
)
n o
)
o p
;
p q
throw
ÒÒ 
;
ÒÒ 
}
ÚÚ 
finally
ÛÛ 
{
ÙÙ 
if
ıı 
(
ıı 
IsTracingEnabled
ıı #
)
ıı# $
{
ˆˆ 

_stopWatch
˜˜ 
.
˜˜ 
Stop
˜˜ 
(
˜˜  
)
˜˜  !
;
˜˜! "
_logger
¯¯ 
.
¯¯ 
LogInformation
¯¯ &
(
¯¯& '
$"
¯¯' )
$str
¯¯) y
{
¯¯y z

_stopWatch¯¯z Ñ
.¯¯Ñ Ö#
ElapsedMilliseconds¯¯Ö ò
}¯¯ò ô
$str¯¯ô õ
"¯¯õ ú
)¯¯ú ù
;¯¯ù û
}
˘˘ 
}
˙˙ 
}
˚˚ 	
public
ˇˇ 
IEnumerable
ˇˇ 
<
ˇˇ 

Department
ˇˇ %
>
ˇˇ% &
GetDepartments
ˇˇ' 5
(
ˇˇ5 6
)
ˇˇ6 7
{
ÄÄ 	
if
ÅÅ 
(
ÅÅ 
IsTracingEnabled
ÅÅ 
)
ÅÅ  

_stopWatch
ÅÅ! +
.
ÅÅ+ ,
Start
ÅÅ, 1
(
ÅÅ1 2
)
ÅÅ2 3
;
ÅÅ3 4
try
ÇÇ 
{
ÉÉ 
return
ÑÑ 
_context
ÑÑ 
.
ÑÑ  
Departments
ÑÑ  +
.
ÑÑ+ ,
ToList
ÑÑ, 2
(
ÑÑ2 3
)
ÑÑ3 4
;
ÑÑ4 5
}
ÖÖ 
catch
ÜÜ 
(
ÜÜ 
	Exception
ÜÜ 
	exception
ÜÜ &
)
ÜÜ& '
{
áá 
_logger
àà 
.
àà 
LogError
àà  
(
àà  !
HelperService
àà! .
.
àà. /
LoggerMessage
àà/ <
(
àà< =
$str
àà= M
,
ààM N
$str
ààO b
,
ààb c
	exception
ààd m
)
ààm n
)
ààn o
;
àào p
throw
ââ 
;
ââ 
}
ää 
finally
ãã 
{
åå 
if
çç 
(
çç 
IsTracingEnabled
çç #
)
çç# $
{
éé 

_stopWatch
èè 
.
èè 
Stop
èè 
(
èè  
)
èè  !
;
èè! "
_logger
êê 
.
êê 
LogInformation
êê &
(
êê& '
$"
êê' )
$str
êê) y
{
êêy z

_stopWatchêêz Ñ
.êêÑ Ö#
ElapsedMillisecondsêêÖ ò
}êêò ô
$strêêô õ
"êêõ ú
)êêú ù
;êêù û
}
ëë 
}
íí 
}
ìì 	
private
ññ 
int
ññ 
GetRange
ññ 
(
ññ 
)
ññ 
{
óó 	
if
òò 
(
òò 
IsTracingEnabled
òò 
)
òò  

_stopWatch
òò! +
.
òò+ ,
Start
òò, 1
(
òò1 2
)
òò2 3
;
òò3 4
try
ôô 
{
öö 
var
õõ 
Duration
õõ 
=
õõ 
_configuration
õõ -
[
õõ- .
$str
õõ. P
]
õõP Q
;
õõQ R
return
úú 
Duration
úú 
!=
úú  "
null
úú# '
?
úú( )
Convert
úú* 1
.
úú1 2
ToInt32
úú2 9
(
úú9 :
Duration
úú: B
)
úúB C
:
úúD E
throw
úúF K
new
úúL O
	Exception
úúP Y
(
úúY Z
$strúúZ •
)úú• ¶
;úú¶ ß
}
ùù 
catch
ûû 
(
ûû 
	Exception
ûû 
	exception
ûû &
)
ûû& '
{
üü 
_logger
†† 
.
†† 
LogError
††  
(
††  !
HelperService
††! .
.
††. /
LoggerMessage
††/ <
(
††< =
$str
††= M
,
††M N
$str
††O _
,
††_ `
	exception
††a j
)
††j k
)
††k l
;
††l m
throw
°° 
;
°° 
}
¢¢ 
finally
££ 
{
§§ 
if
•• 
(
•• 
IsTracingEnabled
•• #
)
••# $
{
¶¶ 

_stopWatch
ßß 
.
ßß 
Stop
ßß 
(
ßß  
)
ßß  !
;
ßß! "
_logger
®® 
.
®® 
LogInformation
®® &
(
®®& '
$"
®®' )
$str
®®) y
{
®®y z

_stopWatch®®z Ñ
.®®Ñ Ö#
ElapsedMilliseconds®®Ö ò
}®®ò ô
$str®®ô õ
"®®õ ú
)®®ú ù
;®®ù û
}
©© 
}
™™ 
}
´´ 	
public
ÆÆ 
bool
ÆÆ 0
"GetIsTraceEnabledFromConfiguration
ÆÆ 6
(
ÆÆ6 7
)
ÆÆ7 8
{
ØØ 	
try
∞∞ 
{
±± 
var
≤≤ /
!IsTracingEnabledFromConfiguration
≤≤ 5
=
≤≤6 7
_configuration
≤≤8 F
[
≤≤F G
$str
≤≤G Z
]
≤≤Z [
;
≤≤[ \
return
≥≥ /
!IsTracingEnabledFromConfiguration
≥≥ 8
!=
≥≥9 ;
null
≥≥< @
?
≥≥A B
Convert
≥≥C J
.
≥≥J K
	ToBoolean
≥≥K T
(
≥≥T U/
!IsTracingEnabledFromConfiguration
≥≥U v
)
≥≥v w
:
≥≥x y
false
≥≥z 
;≥≥ Ä
}
¥¥ 
catch
µµ 
(
µµ 
	Exception
µµ 
	exception
µµ &
)
µµ& '
{
∂∂ 
_logger
∑∑ 
.
∑∑ 
LogError
∑∑  
(
∑∑  !
HelperService
∑∑! .
.
∑∑. /
LoggerMessage
∑∑/ <
(
∑∑< =
$str
∑∑= M
,
∑∑M N
$str
∑∑O u
,
∑∑u v
	exception∑∑w Ä
)∑∑Ä Å
)∑∑Å Ç
;∑∑Ç É
return
∏∏ 
false
∏∏ 
;
∏∏ 
}
ππ 
}
∫∫ 	
}
ªª 
}ºº Ô
bC:\Users\pooja.sakthivel\Desktop\AspireOverflow\Migrations\20220709023722_CreateStoredProcedure.cs
	namespace 	
AspireOverflow
 
. 

Migrations #
{ 
public 

partial 
class !
CreateStoredProcedure .
:/ 0
	Migration1 :
{		 
	protected

 
override

 
void

 
Up

  "
(

" #
MigrationBuilder

# 3
migrationBuilder

4 D
)

D E
{ 	
string 
StoredProcedure "
=# $
$str% 
; 
migrationBuilder 
. 
Sql  
(  !
StoredProcedure! 0
)0 1
;1 2
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
migrationBuilder &
.& '
Sql' *
(* +
$str+ N
)N O
;O P
} 	
} 
} Á
QC:\Users\pooja.sakthivel\Desktop\AspireOverflow\Migrations\20220710064143_test.cs
	namespace 	
AspireOverflow
 
. 

Migrations #
{ 
public 

partial 
class 
test 
: 
	Migration  )
{ 
	protected		 
override		 
void		 
Up		  "
(		" #
MigrationBuilder		# 3
migrationBuilder		4 D
)		D E
{

 	
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
} 	
} 
} ‡
ZC:\Users\pooja.sakthivel\Desktop\AspireOverflow\Migrations\20220713035106_UpdateArticle.cs
	namespace 	
AspireOverflow
 
. 

Migrations #
{ 
public 

partial 
class 
UpdateArticle &
:' (
	Migration) 2
{ 
	protected		 
override		 
void		 
Up		  "
(		" #
MigrationBuilder		# 3
migrationBuilder		4 D
)		D E
{

 	
migrationBuilder 
. 
RenameColumn )
() *
name 
: 
$str  
,  !
table 
: 
$str !
,! "
newName 
: 
$str $
)$ %
;% &
migrationBuilder 
. 
	AddColumn &
<& '
string' -
>- .
(. /
name 
: 
$str 
, 
table 
: 
$str !
,! "
type 
: 
$str %
,% &
nullable 
: 
true 
) 
;  
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
migrationBuilder 
. 

DropColumn '
(' (
name 
: 
$str 
, 
table 
: 
$str !
)! "
;" #
migrationBuilder 
. 
RenameColumn )
() *
name 
: 
$str !
,! "
table 
: 
$str !
,! "
newName   
:   
$str   #
)  # $
;  $ %
}!! 	
}"" 
}## ≈=
xC:\Users\pooja.sakthivel\Desktop\AspireOverflow\Migrations\20220714053934_UpdatePrivateArticle_To_PrivateArticleUsers.cs
	namespace 	
AspireOverflow
 
. 

Migrations #
{ 
public 

partial 
class 7
+UpdatePrivateArticle_To_PrivateArticleUsers D
:E F
	MigrationG P
{ 
	protected		 
override		 
void		 
Up		  "
(		" #
MigrationBuilder		# 3
migrationBuilder		4 D
)		D E
{

 	
migrationBuilder 
. 
	DropTable &
(& '
name 
: 
$str '
)' (
;( )
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str +
,+ ,
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
int& )
>) *
(* +
type+ /
:/ 0
$str1 6
,6 7
nullable8 @
:@ A
falseB G
)G H
. 

Annotation #
(# $
$str$ 8
,8 9
$str: @
)@ A
,A B
	ArticleId 
= 
table  %
.% &
Column& ,
<, -
int- 0
>0 1
(1 2
type2 6
:6 7
$str8 =
,= >
nullable? G
:G H
falseI N
)N O
,O P
UserId 
= 
table "
." #
Column# )
<) *
int* -
>- .
(. /
type/ 3
:3 4
$str5 :
,: ;
nullable< D
:D E
falseF K
)K L
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% =
,= >
x? @
=>A C
xD E
.E F
IdF H
)H I
;I J
table 
. 

ForeignKey $
($ %
name 
: 
$str I
,I J
column 
: 
x  !
=>" $
x% &
.& '
	ArticleId' 0
,0 1
principalTable &
:& '
$str( 2
,2 3
principalColumn '
:' (
$str) 4
,4 5
onDelete  
:  !
ReferentialAction" 3
.3 4
Cascade4 ;
); <
;< =
table   
.   

ForeignKey   $
(  $ %
name!! 
:!! 
$str!! C
,!!C D
column"" 
:"" 
x""  !
=>""" $
x""% &
.""& '
UserId""' -
,""- .
principalTable## &
:##& '
$str##( /
,##/ 0
principalColumn$$ '
:$$' (
$str$$) 1
,$$1 2
onDelete%%  
:%%  !
ReferentialAction%%" 3
.%%3 4
Cascade%%4 ;
)%%; <
;%%< =
}&& 
)&& 
;&& 
migrationBuilder(( 
.(( 
CreateIndex(( (
(((( )
name)) 
:)) 
$str)) 8
,))8 9
table** 
:** 
$str** ,
,**, -
column++ 
:++ 
$str++ #
)++# $
;++$ %
migrationBuilder-- 
.-- 
CreateIndex-- (
(--( )
name.. 
:.. 
$str.. 5
,..5 6
table// 
:// 
$str// ,
,//, -
column00 
:00 
$str00  
)00  !
;00! "
}11 	
	protected33 
override33 
void33 
Down33  $
(33$ %
MigrationBuilder33% 5
migrationBuilder336 F
)33F G
{44 	
migrationBuilder55 
.55 
	DropTable55 &
(55& '
name66 
:66 
$str66 +
)66+ ,
;66, -
migrationBuilder88 
.88 
CreateTable88 (
(88( )
name99 
:99 
$str99 '
,99' (
columns:: 
::: 
table:: 
=>:: !
new::" %
{;; 
Id<< 
=<< 
table<< 
.<< 
Column<< %
<<<% &
int<<& )
><<) *
(<<* +
type<<+ /
:<</ 0
$str<<1 6
,<<6 7
nullable<<8 @
:<<@ A
false<<B G
)<<G H
.== 

Annotation== #
(==# $
$str==$ 8
,==8 9
$str==: @
)==@ A
,==A B
	ArticleId>> 
=>> 
table>>  %
.>>% &
Column>>& ,
<>>, -
int>>- 0
>>>0 1
(>>1 2
type>>2 6
:>>6 7
$str>>8 =
,>>= >
nullable>>? G
:>>G H
false>>I N
)>>N O
,>>O P
UserId?? 
=?? 
table?? "
.??" #
Column??# )
<??) *
int??* -
>??- .
(??. /
type??/ 3
:??3 4
$str??5 :
,??: ;
nullable??< D
:??D E
false??F K
)??K L
}@@ 
,@@ 
constraintsAA 
:AA 
tableAA "
=>AA# %
{BB 
tableCC 
.CC 

PrimaryKeyCC $
(CC$ %
$strCC% 9
,CC9 :
xCC; <
=>CC= ?
xCC@ A
.CCA B
IdCCB D
)CCD E
;CCE F
tableDD 
.DD 

ForeignKeyDD $
(DD$ %
nameEE 
:EE 
$strEE E
,EEE F
columnFF 
:FF 
xFF  !
=>FF" $
xFF% &
.FF& '
	ArticleIdFF' 0
,FF0 1
principalTableGG &
:GG& '
$strGG( 2
,GG2 3
principalColumnHH '
:HH' (
$strHH) 4
,HH4 5
onDeleteII  
:II  !
ReferentialActionII" 3
.II3 4
CascadeII4 ;
)II; <
;II< =
tableJJ 
.JJ 

ForeignKeyJJ $
(JJ$ %
nameKK 
:KK 
$strKK ?
,KK? @
columnLL 
:LL 
xLL  !
=>LL" $
xLL% &
.LL& '
UserIdLL' -
,LL- .
principalTableMM &
:MM& '
$strMM( /
,MM/ 0
principalColumnNN '
:NN' (
$strNN) 1
,NN1 2
onDeleteOO  
:OO  !
ReferentialActionOO" 3
.OO3 4
CascadeOO4 ;
)OO; <
;OO< =
}PP 
)PP 
;PP 
migrationBuilderRR 
.RR 
CreateIndexRR (
(RR( )
nameSS 
:SS 
$strSS 4
,SS4 5
tableTT 
:TT 
$strTT (
,TT( )
columnUU 
:UU 
$strUU #
)UU# $
;UU$ %
migrationBuilderWW 
.WW 
CreateIndexWW (
(WW( )
nameXX 
:XX 
$strXX 1
,XX1 2
tableYY 
:YY 
$strYY (
,YY( )
columnZZ 
:ZZ 
$strZZ  
)ZZ  !
;ZZ! "
}[[ 	
}\\ 
}]] É
UC:\Users\pooja.sakthivel\Desktop\AspireOverflow\Migrations\20220715041645_updateDb.cs
	namespace 	
AspireOverflow
 
. 

Migrations #
{ 
public 

partial 
class 
updateDb !
:" #
	Migration$ -
{		 
	protected

 
override

 
void

 
Up

  "
(

" #
MigrationBuilder

# 3
migrationBuilder

4 D
)

D E
{ 	
migrationBuilder 
. 
	AddColumn &
<& '
int' *
>* +
(+ ,
name 
: 
$str !
,! "
table 
: 
$str 
, 
type 
: 
$str 
, 
nullable 
: 
false 
,  
defaultValue 
: 
$num 
)  
;  !
migrationBuilder 
. 
	AddColumn &
<& '
DateTime' /
>/ 0
(0 1
name 
: 
$str !
,! "
table 
: 
$str 
, 
type 
: 
$str !
,! "
nullable 
: 
false 
,  
defaultValue 
: 
new !
DateTime" *
(* +
$num+ ,
,, -
$num. /
,/ 0
$num1 2
,2 3
$num4 5
,5 6
$num7 8
,8 9
$num: ;
,; <
$num= >
,> ?
DateTimeKind@ L
.L M
UnspecifiedM X
)X Y
)Y Z
;Z [
migrationBuilder 
. 
	AddColumn &
<& '
int' *
>* +
(+ ,
name 
: 
$str !
,! "
table 
: 
$str 
, 
type 
: 
$str 
, 
nullable 
: 
true 
) 
;  
migrationBuilder   
.   
	AddColumn   &
<  & '
DateTime  ' /
>  / 0
(  0 1
name!! 
:!! 
$str!! !
,!!! "
table"" 
:"" 
$str"" 
,"" 
type## 
:## 
$str## !
,##! "
nullable$$ 
:$$ 
true$$ 
)$$ 
;$$  
}%% 	
	protected'' 
override'' 
void'' 
Down''  $
(''$ %
MigrationBuilder''% 5
migrationBuilder''6 F
)''F G
{(( 	
migrationBuilder)) 
.)) 

DropColumn)) '
())' (
name** 
:** 
$str** !
,**! "
table++ 
:++ 
$str++ 
)++ 
;++  
migrationBuilder-- 
.-- 

DropColumn-- '
(--' (
name.. 
:.. 
$str.. !
,..! "
table// 
:// 
$str// 
)// 
;//  
migrationBuilder11 
.11 

DropColumn11 '
(11' (
name22 
:22 
$str22 !
,22! "
table33 
:33 
$str33 
)33 
;33  
migrationBuilder55 
.55 

DropColumn55 '
(55' (
name66 
:66 
$str66 !
,66! "
table77 
:77 
$str77 
)77 
;77  
}88 	
}99 
}:: ’
VC:\Users\pooja.sakthivel\Desktop\AspireOverflow\Migrations\20220715090711_updateDb1.cs
	namespace 	
AspireOverflow
 
. 

Migrations #
{ 
public 

partial 
class 
	updateDb1 "
:# $
	Migration% .
{		 
	protected

 
override

 
void

 
Up

  "
(

" #
MigrationBuilder

# 3
migrationBuilder

4 D
)

D E
{ 	
migrationBuilder 
. 

DropColumn '
(' (
name 
: 
$str  
,  !
table 
: 
$str &
)& '
;' (
migrationBuilder 
. 

DropColumn '
(' (
name 
: 
$str  
,  !
table 
: 
$str (
)( )
;) *
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
migrationBuilder 
. 
	AddColumn &
<& '
DateTime' /
>/ 0
(0 1
name 
: 
$str  
,  !
table 
: 
$str &
,& '
type 
: 
$str !
,! "
nullable 
: 
false 
,  
defaultValue 
: 
new !
DateTime" *
(* +
$num+ ,
,, -
$num. /
,/ 0
$num1 2
,2 3
$num4 5
,5 6
$num7 8
,8 9
$num: ;
,; <
$num= >
,> ?
DateTimeKind@ L
.L M
UnspecifiedM X
)X Y
)Y Z
;Z [
migrationBuilder 
. 
	AddColumn &
<& '
DateTime' /
>/ 0
(0 1
name 
: 
$str  
,  !
table   
:   
$str   (
,  ( )
type!! 
:!! 
$str!! !
,!!! "
nullable"" 
:"" 
false"" 
,""  
defaultValue## 
:## 
new## !
DateTime##" *
(##* +
$num##+ ,
,##, -
$num##. /
,##/ 0
$num##1 2
,##2 3
$num##4 5
,##5 6
$num##7 8
,##8 9
$num##: ;
,##; <
$num##= >
,##> ?
DateTimeKind##@ L
.##L M
Unspecified##M X
)##X Y
)##Y Z
;##Z [
}$$ 	
}%% 
}&&  7
AC:\Users\pooja.sakthivel\Desktop\AspireOverflow\Models\Article.cs
	namespace 	
AspireOverflow
 
. 
Models 
{ 
public 

partial 
class 
Article  
:! "
IAuditField# .
{ 
[		 	
Key			 
]		 
public

 
int

 
	ArticleId

 
{

 
get

 "
;

" #
set

$ '
;

' (
}

) *
public 
string 
? 
Title 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
? 
Content 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
byte 
[ 
] 
Image 
{ 
get !
;! "
set# &
;& '
}( )
=* +
null, 0
!0 1
;1 2
public 
int 
ArticleStatusID "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
int 
? 

ReviewerId 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
DateTime 
Datetime  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
bool 
	IsPrivate 
{ 
get  #
;# $
set% (
;( )
}* +
=, -
false. 3
;3 4
public 
int 
	CreatedBy 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DateTime 
	CreatedOn !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
int 
? 
	UpdatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
	UpdatedOn "
{# $
get% (
;( )
set* -
;- .
}/ 0
[ 	
	NotMapped	 
] 
public 
string 
? 
ImageString "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
string 
? 
Reason 
{ 
get  #
;# $
set% (
;( )
}* +
[ 	

ForeignKey	 
( 
$str %
)% &
]& '
[ 	
InverseProperty	 
( 
$str #
)# $
]$ %
public 
virtual 
ArticleStatus $
?$ %
ArticleStatus& 3
{4 5
get6 9
;9 :
set; >
;> ?
}@ A
[ 	

ForeignKey	 
( 
$str 
)  
]  !
[ 	
InverseProperty	 
( 
$str #
)# $
]$ %
public 
virtual 
User 
? 
User !
{" #
get$ '
;' (
set) ,
;, -
}. /
=0 1
null2 6
!6 7
;7 8
[ 	
InverseProperty	 
( 
$str "
)" #
]# $
public   
virtual   
ICollection   "
<  " #
ArticleComment  # 1
>  1 2
?  2 3
ArticleComments  4 C
{  D E
get  F I
;  I J
set  K N
;  N O
}  P Q
[!! 	
InverseProperty!!	 
(!! 
$str!! "
)!!" #
]!!# $
public"" 
virtual"" 
ICollection"" "
<""" #
ArticleLike""# .
>"". /
?""/ 0
ArticleLikes""1 =
{""> ?
get""@ C
;""C D
set""E H
;""H I
}""J K
[## 	
InverseProperty##	 
(## 
$str## "
)##" #
]### $
public$$ 
virtual$$ 
ICollection$$ "
<$$" #
PrivateArticleUsers$$# 6
>$$6 7
?$$7 8
PrivateArticles$$9 H
{$$I J
get$$K N
;$$N O
set$$P S
;$$S T
}$$U V
}%% 
public'' 

partial'' 
class'' 
PrivateArticleUsers'' ,
{(( 
public)) 
PrivateArticleUsers)) "
())" #
int))# &
	articleId))' 0
,))0 1
int))2 5
userId))6 <
)))< =
{** 	
	ArticleId++ 
=++ 
	articleId++ !
;++! "
UserId,, 
=,, 
userId,, 
;,, 
}-- 	
[.. 	
Key..	 
].. 
public// 
int// 
Id// 
{// 
get// 
;// 
set//  
;//  !
}//" #
public00 
int00 
	ArticleId00 
{00 
get00 "
;00" #
set00$ '
;00' (
}00) *
public11 
int11 
UserId11 
{11 
get11 
;11  
set11! $
;11$ %
}11& '
[22 	

ForeignKey22	 
(22 
$str22 
)22  
]22  !
[33 	
InverseProperty33	 
(33 
$str33 *
)33* +
]33+ ,
public44 
virtual44 
Article44 
?44 
article44  '
{44( )
get44* -
;44- .
set44/ 2
;442 3
}444 5
[55 	

ForeignKey55	 
(55 
$str55 
)55 
]55 
[66 	
InverseProperty66	 
(66 
$str66 *
)66* +
]66+ ,
public77 
virtual77 
User77 
?77 
user77 !
{77" #
get77$ '
;77' (
set77) ,
;77, -
}77. /
}88 
public:: 

partial:: 
class:: 
PrivateArticleDto:: *
{;; 
public<< 
Article<< 
?<< 
article<< 
{<<  !
get<<" %
;<<% &
set<<' *
;<<* +
}<<, -
public== 
List== 
<== 
int== 
>== 
?== 
SharedUsersId== '
{==( )
get==* -
;==- .
set==/ 2
;==2 3
}==4 5
}>> 
}?? ó
HC:\Users\pooja.sakthivel\Desktop\AspireOverflow\Models\ArticleComment.cs
	namespace 	
AspireOverflow
 
. 
Models 
{ 
public 

partial 
class 
ArticleComment '
:( )
IAuditField* 5
{ 
public 
ArticleComment 
( 
) 
{		 	
}

 	
[ 	
Key	 
] 
public 
int 
ArticleCommentId #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
string 
? 
Comment 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
int 
UserId 
{ 
get 
;  
set" %
;% &
}& '
public 
int 
	CreatedBy 
{ 
get  
;  !
set! $
;$ %
}% &
public 
int 
	ArticleId 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DateTime 
	CreatedOn !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
int 
? 
	UpdatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
	UpdatedOn "
{# $
get% (
;( )
set* -
;- .
}/ 0
[ 	

ForeignKey	 
( 
$str 
)  
]  !
[ 	
InverseProperty	 
( 
$str *
)* +
]+ ,
public 
virtual 
Article 
? 
Article  '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
=6 7
null8 <
!< =
;= >
[ 	

ForeignKey	 
( 
$str 
) 
] 
[ 	
InverseProperty	 
( 
$str *
)* +
]+ ,
public 
virtual 
User 
? 
User !
{" #
get$ '
;' (
set) ,
;, -
}. /
=0 1
null2 6
!6 7
;7 8
} 
} æ
EC:\Users\pooja.sakthivel\Desktop\AspireOverflow\Models\ArticleLike.cs
	namespace 	
AspireOverflow
 
. 
Models 
{ 
public 

partial 
class 
ArticleLike $
{ 
[ 	
Key	 
] 
public 
int 
LikeId 
{ 
get 
;  
set! $
;$ %
}& '
public		 
int		 
	ArticleId		 
{		 
get		 "
;		" #
set		$ '
;		' (
}		) *
public

 
int

 
UserId

 
{

 
get

 
;

  
set

! $
;

$ %
}

& '
[ 	

ForeignKey	 
( 
$str 
)  
]  !
[ 	
InverseProperty	 
( 
$str '
)' (
]( )
public 
virtual 
Article 
? 
Article  '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
=6 7
null8 <
!< =
;= >
[ 	

ForeignKey	 
( 
$str 
) 
] 
[ 	
InverseProperty	 
( 
$str  
)  !
]! "
public 
virtual 
User 
? 
	LikedUser &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
=5 6
null7 ;
!; <
;< =
} 
} á
GC:\Users\pooja.sakthivel\Desktop\AspireOverflow\Models\ArticleStatus.cs
	namespace 	
AspireOverflow
 
. 
Models 
{ 
public 

partial 
class 
ArticleStatus &
{ 
[ 	
Key	 
] 
public 
int 
ArticleStatusID "
{# $
get% (
;( )
set* -
;- .
}/ 0
public		 
string		 
?		 
Status		 
{		 
get		  #
;		# $
set		% (
;		( )
}		* +
[

 	
InverseProperty

	 
(

 
$str

 (
)

( )
]

) *
public 
virtual 
ICollection "
<" #
Article# *
>* +
?+ ,
Articles- 5
{6 7
get8 ;
;; <
set= @
;@ A
}B C
} 
} É
DC:\Users\pooja.sakthivel\Desktop\AspireOverflow\Models\Department.cs
	namespace 	
AspireOverflow
 
. 
Models 
{ 
public 

partial 
class 

Department #
{ 
public 

Department 
( 
) 
{ 	
Designations		 
=		 
new		 
HashSet		 &
<		& '
Designation		' 2
>		2 3
(		3 4
)		4 5
;		5 6
}

 	
public 
int 
DepartmentId 
{  !
get" %
;% &
set' *
;* +
}, -
[ 	
StringLength	 
( 
$num 
) 
] 
public 
string 
DepartmentName $
{% &
get' *
;* +
set, /
;/ 0
}1 2
=3 4
null5 9
!9 :
;: ;
[ 	
InverseProperty	 
( 
$str %
)% &
]& '
public 
virtual 
ICollection "
<" #
Designation# .
>. /
Designations0 <
{= >
get? B
;B C
setD G
;G H
}I J
} 
} ∞
EC:\Users\pooja.sakthivel\Desktop\AspireOverflow\Models\Designation.cs
	namespace 	
AspireOverflow
 
. 
Models 
{ 
public 

partial 
class 
Designation $
{ 
[ 	
Key	 
] 
public 
int 
DesignationId  
{! "
get# &
;& '
set( +
;+ ,
}- .
[		 	
StringLength			 
(		 
$num		 
)		 
]		 
public

 
string

 
DesignationName

 %
{

& '
get

( +
;

+ ,
set

- 0
;

0 1
}

2 3
=

4 5
null

6 :
!

: ;
;

; <
public 
int 
DepartmentId 
{  !
get" %
;% &
set' *
;* +
}, -
[ 	

ForeignKey	 
( 
$str "
)" #
]# $
[ 	
InverseProperty	 
( 
$str '
)' (
]( )
public 
virtual 

Department !

Department" ,
{- .
get/ 2
;2 3
set4 7
;7 8
}9 :
=; <
null= A
!A B
;B C
[ 	
InverseProperty	 
( 
$str &
)& '
]' (
public 
virtual 
ICollection "
<" #
User# '
>' (
Users) .
{/ 0
get1 4
;4 5
set6 9
;9 :
}; <
== >
null? C
!C D
;D E
} 
} Ë
SC:\Users\pooja.sakthivel\Desktop\AspireOverflow\Models\Enum\Enum-DevelopmentTeam.cs
	namespace 	
AspireOverflow
 
. 
Models 
{ 
enum 
DevelopmentTeam	 
{ 
Web 
, 
Mobile 
, 
Desktop 
}		 
} ˛
@C:\Users\pooja.sakthivel\Desktop\AspireOverflow\Models\Gender.cs
	namespace 	
AspireOverflow
 
. 
Models 
{ 
[ 
Table 

(
 
$str 
) 
] 
public 

partial 
class 
Gender 
{ 
public 
Gender 
( 
) 
{		 	
Users

 
=

 
new

 
HashSet

 
<

  
User

  $
>

$ %
(

% &
)

& '
;

' (
} 	
[ 	
Key	 
] 
[ 
DatabaseGenerated 
(  #
DatabaseGeneratedOption  7
.7 8
None8 <
)< =
]= >
public 
int 
GenderId 
{ 
get !
;! "
set# &
;& '
}( )
[ 	
StringLength	 
( 
$num 
) 
] 
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
=) *
null+ /
!/ 0
;0 1
[ 	
InverseProperty	 
( 
$str !
)! "
]" #
public 
virtual 
ICollection "
<" #
User# '
>' (
Users) .
{/ 0
get1 4
;4 5
set6 9
;9 :
}; <
} 
} â
PC:\Users\pooja.sakthivel\Desktop\AspireOverflow\Models\Interfaces\IAuditField.cs
	namespace 	
AspireOverflow
 
. 
Models 
.  

Interfaces  *
{ 
public 

	interface 
IAuditField  
{ 
int	 
	CreatedBy 
{ 
get 
; 
set !
;! "
}# $
DateTime			 
	CreatedOn		 
{		 
get		 !
;		! "
set		# &
;		& '
}		( )
int

	 
?

 
	UpdatedBy

 
{

 
get

 
;

 
set

 "
;

" #
}

$ %
DateTime	 
? 
	UpdatedOn 
{ 
get "
;" #
set$ '
;' (
}) *
} 
} û
>C:\Users\pooja.sakthivel\Desktop\AspireOverflow\Models\Mail.cs
	namespace 	
AspireOverflow
 
. 
Models 
{ 
public 

class 
MailRequest 
{ 
public 

string 
? 
ToEmail 
{ 
get  
;  !
set" %
;% &
}' (
public 

string 
? 
Subject 
{ 
get  
;  !
set" %
;% &
}' (
public 

string 
? 
Body 
{ 
get 
; 
set "
;" #
}$ %
} 
public		 

class		 
MailSettings		 
{

 
public 
string 
? 
Mail 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
? 
DisplayName "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
string 
? 
Password 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
? 
Host 
{ 
get !
;! "
set# &
;& '
}( )
public 
int 
Port 
{ 
get 
; 
set "
;" #
}$ %
} 
} à
?C:\Users\pooja.sakthivel\Desktop\AspireOverflow\Models\Query.cs
	namespace 	
AspireOverflow
 
. 
Models 
{ 
public 

partial 
class 
Query 
:  
IAuditField! ,
{ 
public 
Query 
( 
) 
{		 	
QueryComments

 
=

 
new

 
HashSet

  '
<

' (
QueryComment

( 4
>

4 5
(

5 6
)

6 7
;

7 8
} 	
[ 	
Key	 
] 
public 
int 
QueryId 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
? 
Title 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
? 
Content 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
? 
code 
{ 
get !
;! "
set# &
;& '
}( )
public 
bool 
IsSolved 
{ 
get "
;" #
set$ '
;' (
}) *
public 
bool 
IsActive 
{ 
get "
;" #
set$ '
;' (
}) *
=+ ,
true- 1
;1 2
public 
int 
	CreatedBy 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DateTime 
	CreatedOn !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
int 
? 
	UpdatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
	UpdatedOn "
{# $
get% (
;( )
set* -
;- .
}/ 0
[ 	
InverseProperty	 
( 
$str  
)  !
]! "
public 
virtual 
ICollection "
<" #
QueryComment# /
>/ 0
?0 1
QueryComments2 ?
{@ A
getB E
;E F
setG J
;J K
}L M
[ 	

ForeignKey	 
( 
$str 
)  
]  !
[ 	
InverseProperty	 
( 
$str "
)" #
]# $
public 
virtual 
User 
? 
User !
{" #
get$ '
;' (
set) ,
;, -
}. /
} 
} õ
FC:\Users\pooja.sakthivel\Desktop\AspireOverflow\Models\QueryComment.cs
	namespace 	
AspireOverflow
 
. 
Models 
{ 
public 

partial 
class 
QueryComment %
:& '
IAuditField( 3
{ 
public 
QueryComment 
( 
) 
{		 	
}

 	
[ 	
Key	 
] 
public 
int 
QueryCommentId !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 
? 
Comment 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
? 
Code 
{ 
get !
;! "
set# &
;& '
}( )
public 
int 
QueryId 
{ 
get  
;  !
set" %
;% &
}' (
public 
int 
	CreatedBy 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DateTime 
	CreatedOn !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
int 
? 
	UpdatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
public 
DateTime 
? 
	UpdatedOn "
{# $
get% (
;( )
set* -
;- .
}/ 0
[ 	

ForeignKey	 
( 
$str 
) 
] 
[ 	
InverseProperty	 
( 
$str (
)( )
]) *
public 
virtual 
Query 
? 
Query #
{$ %
get& )
;) *
set+ .
;. /
}0 1
[ 	

ForeignKey	 
( 
$str 
)  
]  !
[ 	
InverseProperty	 
( 
$str (
)( )
]) *
public 
virtual 
User 
? 
User !
{" #
get$ '
;' (
set) ,
;, -
}. /
} 
} ò
>C:\Users\pooja.sakthivel\Desktop\AspireOverflow\Models\Spam.cs
	namespace 	
AspireOverflow
 
. 
Models 
{ 
public 

class 
Spam 
{ 
[ 	
Key	 
] 
public 
int 
SpamId 
{ 
get 
;  
set! $
;$ %
}& '
public		 
string		 
?		 
Reason		 
{		 
get		  #
;		# $
set		% (
;		( )
}		* +
public

 
int

 
QueryId

 
{

 
get

  
;

  !
set

" %
;

% &
}

' (
public 
int 
UserId 
{ 
get 
;  
set! $
;$ %
}& '
public 
int 
VerifyStatusID !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
DateTime 
	CreatedOn !
{" #
get$ '
;' (
set) ,
;, -
}. /
=0 1
DateTime2 :
.: ;
Now; >
;> ?
public 
int 
	CreatedBy 
{ 
get "
;" #
set$ '
;' (
}) *
public 
DateTime 
? 
	UpdatedOn "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
int 
? 
	UpdatedBy 
{ 
get  #
;# $
set% (
;( )
}* +
[ 	

ForeignKey	 
( 
$str $
)$ %
]% &
public 
virtual 
VerifyStatus #
?# $
VerifyStatus% 1
{2 3
get4 7
;7 8
set9 <
;< =
}> ?
[ 	

ForeignKey	 
( 
$str 
) 
] 
public 
virtual 
Query 
? 
Query #
{$ %
get& )
;) *
set+ .
;. /
}0 1
[ 	

ForeignKey	 
( 
$str 
) 
] 
public 
virtual 
User 
? 
User !
{" #
get$ '
;' (
set) ,
;, -
}. /
} 
} ÚD
>C:\Users\pooja.sakthivel\Desktop\AspireOverflow\Models\User.cs
	namespace 	
AspireOverflow
 
. 
Models 
{ 
[		 
Index		 

(		
 
$str		 
,		 
$str		 &
,		& '
IsUnique		' /
=		0 1
true		1 5
)		5 6
]		6 7
public

 

partial

 
class

 
User

 
{ 
public 
User 
( 
) 
{ 	
} 	
[ 	
Key	 
] 
public 
int 
UserId 
{ 
get 
;  
set! $
;$ %
}& '
[ 	
StringLength	 
( 
$num 
) 
] 
public 
string 
FullName 
{  
get! $
;$ %
set& )
;) *
}+ ,
=- .
null/ 3
!3 4
;4 5
public 
int 
GenderId 
{ 
get !
;! "
set# &
;& '
}( )
[ 	
StringLength	 
( 
$num 
) 
] 
public 
string 
	AceNumber 
{  !
get" %
;% &
set' *
;* +
}, -
=. /
null0 4
!4 5
;5 6
public 
string 
EmailAddress "
{# $
get% (
;( )
set* -
;- .
}/ 0
=1 2
null3 7
!7 8
;8 9
[   	
Column  	 
(   
TypeName   
=   
$str   *
)  * +
]  + ,
public!! 
string!! 
Password!! 
{!!  
get!!! $
;!!$ %
set!!& )
;!!) *
}!!+ ,
=!!- .
null!!/ 3
!!!3 4
;!!4 5
public$$ 
DateTime$$ 
DateOfBirth$$ #
{$$$ %
get$$& )
;$$) *
set$$+ .
;$$. /
}$$0 1
public&& 
int&& 
VerifyStatusID&& !
{&&" #
get&&$ '
;&&' (
set&&) ,
;&&, -
}&&. /
=&&0 1
$num&&2 3
;&&3 4
public(( 
bool(( 

IsReviewer(( 
{((  
get((! $
;(($ %
set((& )
;(() *
}((+ ,
public** 
int** 

UserRoleId** 
{** 
get**  #
;**# $
set**% (
;**( )
}*** +
=**, -
$num**. /
;**/ 0
public-- 
int-- 
DesignationId--  
{--! "
get--# &
;--& '
set--( +
;--+ ,
}--- .
public// 
DateTime// 
	CreatedOn// !
{//" #
get//$ '
;//' (
set//) ,
;//, -
}//. /
=//0 1
DateTime//2 :
.//: ;
Now//; >
;//> ?
public22 
DateTime22 
?22 
	UpdatedOn22 "
{22# $
get22% (
;22( )
set22* -
;22- .
}22/ 0
public33 
int33 
?33 
	UpdatedBy33 
{33 
get33  #
;33# $
set33% (
;33( )
}33* +
[66 	

ForeignKey66	 
(66 
$str66 #
)66# $
]66$ %
[77 	
InverseProperty77	 
(77 
$str77  
)77  !
]77! "
public99 
virtual99 
Designation99 "
?99" #
Designation99$ /
{990 1
get992 5
;995 6
set997 :
;99: ;
}99< =
=99> ?
null99@ D
!99D E
;99E F
[:: 	

ForeignKey::	 
(:: 
$str:: 
):: 
]::  
[;; 	
InverseProperty;;	 
(;; 
$str;;  
);;  !
];;! "
public<< 
virtual<< 
Gender<< 
?<< 
Gender<< %
{<<& '
get<<( +
;<<+ ,
set<<- 0
;<<0 1
}<<2 3
=<<4 5
null<<6 :
!<<: ;
;<<; <
[>> 	

ForeignKey>>	 
(>> 
$str>>  
)>>  !
]>>! "
[?? 	
InverseProperty??	 
(?? 
$str??  
)??  !
]??! "
public@@ 
virtual@@ 
UserRole@@ 
?@@  
UserRole@@! )
{@@* +
get@@, /
;@@/ 0
set@@1 4
;@@4 5
}@@6 7
=@@8 9
null@@: >
!@@> ?
;@@? @
[BB 	

ForeignKeyBB	 
(BB 
$strBB $
)BB$ %
]BB% &
[CC 	
InversePropertyCC	 
(CC 
$strCC  
)CC  !
]CC! "
publicDD 
virtualDD 
VerifyStatusDD #
?DD# $
VerifyStatusDD% 1
{DD2 3
getDD4 7
;DD7 8
setDD9 <
;DD< =
}DD> ?
=DD@ A
nullDDB F
!DDF G
;DDG H
[FF 	
InversePropertyFF	 
(FF 
$strFF 
)FF  
]FF  !
publicGG 
virtualGG 
ICollectionGG "
<GG" #
QueryGG# (
>GG( )
?GG) *
QueriesGG+ 2
{GG3 4
getGG5 8
;GG8 9
setGG: =
;GG= >
}GG? @
[HH 	
InversePropertyHH	 
(HH 
$strHH 
)HH  
]HH  !
publicII 
virtualII 
ICollectionII "
<II" #
QueryCommentII# /
>II/ 0
?II0 1
QueryCommentsII2 ?
{II@ A
getIIB E
;IIE F
setIIG J
;IIJ K
}IIL M
[JJ 	
InversePropertyJJ	 
(JJ 
$strJJ 
)JJ  
]JJ  !
publicKK 
virtualKK 
ICollectionKK "
<KK" #
ArticleCommentKK# 1
>KK1 2
?KK2 3
ArticleCommentsKK4 C
{KKD E
getKKF I
;KKI J
setKKK N
;KKN O
}KKP Q
[LL 	
InversePropertyLL	 
(LL 
$strLL 
)LL  
]LL  !
publicMM 
virtualMM 
ICollectionMM "
<MM" #
ArticleMM# *
>MM* +
?MM+ ,
ArticlesMM- 5
{MM6 7
getMM8 ;
;MM; <
setMM= @
;MM@ A
}MMB C
[NN 	
InversePropertyNN	 
(NN 
$strNN $
)NN$ %
]NN% &
publicOO 
virtualOO 
ICollectionOO "
<OO" #
ArticleLikeOO# .
>OO. /
?OO/ 0
LikesOO1 6
{OO7 8
getOO9 <
;OO< =
setOO> A
;OOA B
}OOC D
[PP 	
InversePropertyPP	 
(PP 
$strPP 
)PP  
]PP  !
publicQQ 
virtualQQ 
ICollectionQQ "
<QQ" #
PrivateArticleUsersQQ# 6
>QQ6 7
?QQ7 8
PrivateArticlesQQ9 H
{QQI J
getQQK N
;QQN O
setQQP S
;QQS T
}QQU V
}VV 
publicXX 

classXX 
LoginXX 
{YY 
publicZZ 
stringZZ 
?ZZ 
EmailZZ 
{ZZ 
getZZ "
;ZZ" #
setZZ$ '
;ZZ' (
}ZZ) *
public[[ 
string[[ 
?[[ 
Password[[ 
{[[  !
get[[" %
;[[% &
set[[' *
;[[* +
}[[, -
}\\ 
public^^ 

class^^ 
CurrentUser^^ 
{__ 
public`` 
string`` 
?`` 
Email`` 
{`` 
get`` "
;``" #
set``$ '
;``' (
}``) *
publicbb 
intbb 
UserIdbb 
{bb 
getbb 
;bb  
setbb! $
;bb$ %
}bb& '
publicdd 
intdd 
RoleIddd 
{dd 
getdd 
;dd  
setdd! $
;dd$ %
}dd& '
publicff 
boolff 

IsReviewerff 
{ff  
getff! $
;ff$ %
setff& )
;ff) *
}ff+ ,
}gg 
}hh ë
BC:\Users\pooja.sakthivel\Desktop\AspireOverflow\Models\UserRole.cs
	namespace 	
AspireOverflow
 
. 
Models 
{ 
public 

partial 
class 
UserRole !
{ 
public 
UserRole 
( 
) 
{ 	
Users		 
=		 
new		 
HashSet		 
<		  
User		  $
>		$ %
(		% &
)		& '
;		' (
}

 	
[ 	
Key	 
] 
[ 	
DatabaseGenerated	 
( #
DatabaseGeneratedOption 2
.2 3
None3 7
)7 8
]8 9
public 
int 

UserRoleId 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 
? 
RoleName 
{  !
get" %
;% &
set' *
;* +
}, -
[ 	
InverseProperty	 
( 
$str #
)# $
]$ %
public 
virtual 
ICollection "
<" #
User# '
>' (
Users) .
{/ 0
get1 4
;4 5
set6 9
;9 :
}; <
} 
} ù
FC:\Users\pooja.sakthivel\Desktop\AspireOverflow\Models\VerifyStatus.cs
	namespace 	
AspireOverflow
 
. 
Models 
{ 
public 

partial 
class 
VerifyStatus %
{ 
public 
VerifyStatus 
( 
) 
{ 	
Users		 
=		 
new		 
HashSet		 
<		  
User		  $
>		$ %
(		% &
)		& '
;		' (
}

 	
[ 	
Key	 
] 
[ 	
DatabaseGenerated	 
( #
DatabaseGeneratedOption 2
.2 3
None3 7
)7 8
]8 9
public 
int 
VerifyStatusID !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 
? 
Name 
{ 
get !
;! "
set# &
;& '
}( )
[ 	
InverseProperty	 
( 
$str '
)' (
]( )
public 
virtual 
ICollection "
<" #
User# '
>' (
Users) .
{/ 0
get1 4
;4 5
set6 9
;9 :
}; <
} 
} îW
:C:\Users\pooja.sakthivel\Desktop\AspireOverflow\Program.cs
var 
builder 
= 
WebApplication 
. 
CreateBuilder *
(* +
args+ /
)/ 0
;0 1
builder 
. 
Services 
. 
AddControllers 
(  
)  !
;! "
builder 
. 
Services 
. #
AddEndpointsApiExplorer (
(( )
)) *
;* +
try 
{ 
builder 
. 
Services 
. 
AddDbContext !
<! "!
AspireOverflowContext" 7
>7 8
(8 9
options9 @
=>A C
{ 
options 
. 
UseSqlServer 
( 
builder $
.$ %
Configuration% 2
.2 3
GetConnectionString3 F
(F G
$strG P
)P Q
)Q R
;R S
} 
) 
; 
} 
catch 
( 
SystemException 
	Exception  
)  !
{ 
Console 
. 
	WriteLine 
( 
	Exception 
.  
Message  '
)' (
;( )
} 
builder 
. 
Services 
. 
AddHttpLogging 
(  
httpLogging  +
=>, .
{ 
httpLogging   
.   
LoggingFields   
=   
HttpLoggingFields    1
.  1 2
None  2 6
;  6 7
}!! 
)!! 
;!! 
builder"" 
."" 
Services"" 
."" 
AddTransient"" 
<"" 
IQueryService"" +
,""+ ,
QueryService"", 8
>""8 9
(""9 :
)"": ;
;""; <
builder## 
.## 
Services## 
.## 
AddTransient## 
<## 
IQueryRepository## .
,##. /
QueryRepository##/ >
>##> ?
(##? @
)##@ A
;##A B
builder$$ 
.$$ 
Services$$ 
.$$ 
AddTransient$$ 
<$$ 
IArticleRepository$$ 0
,$$0 1
ArticleRepository$$1 B
>$$B C
($$C D
)$$D E
;$$E F
builder%% 
.%% 
Services%% 
.%% 
AddTransient%% 
<%% 
IUserRepository%% -
,%%- .
UserRepository%%. <
>%%< =
(%%= >
)%%> ?
;%%? @
builder&& 
.&& 
Services&& 
.&& 
AddTransient&& 
<&& 
IUserService&& *
,&&* +
UserService&&+ 6
>&&6 7
(&&7 8
)&&8 9
;&&9 :
builder'' 
.'' 
Services'' 
.'' 
AddTransient'' 
<'' 
ITokenService'' +
,''+ ,
TokenService'', 8
>''8 9
(''9 :
)'': ;
;''; <
builder(( 
.(( 
Services(( 
.(( 
AddTransient(( 
<(( 
IArticleService(( -
,((- .
ArticleService((. <
>((< =
(((= >
)((> ?
;((? @
builder)) 
.)) 
Services)) 
.)) 
	Configure)) 
<)) 
MailSettings)) '
>))' (
())( )
builder))) 0
.))0 1
Configuration))1 >
.))> ?

GetSection))? I
())I J
$str))J X
)))X Y
)))Y Z
;))Z [
builder** 
.** 
Services** 
.** 
AddTransient** 
<** 
MailService** )
>**) *
(*** +
)**+ ,
;**, -
builder,, 
.,, 
Services,, 
.,, 
AddAuthentication,, "
(,," #
JwtBearerDefaults,,# 4
.,,4 5 
AuthenticationScheme,,5 I
),,I J
.,,J K
AddJwtBearer,,K W
(,,W X
options,,X _
=>,,` b
{-- 
options.. 
...  
RequireHttpsMetadata..  
=..! "
false..# (
;..( )
options// 
.// 
	SaveToken// 
=// 
true// 
;// 
options00 
.00 %
TokenValidationParameters00 %
=00& '
new00( +%
TokenValidationParameters00, E
(00E F
)00F G
{11 
ValidateIssuer22 
=22 
true22 
,22 
ValidateAudience33 
=33 
true33 
,33  
ValidAudience44 
=44 
builder44 
.44  
Configuration44  -
[44- .
$str44. <
]44< =
,44= >
ValidIssuer55 
=55 
builder55 
.55 
Configuration55 +
[55+ ,
$str55, 8
]558 9
,559 :
IssuerSigningKey66 
=66 
new66  
SymmetricSecurityKey66 3
(663 4
Encoding664 <
.66< =
UTF866= A
.66A B
GetBytes66B J
(66J K
builder66K R
.66R S
Configuration66S `
[66` a
$str66a j
]66j k
)66k l
)66l m
,66m n
TokenDecryptionKey77 
=77 
new77   
SymmetricSecurityKey77! 5
(775 6
Encoding776 >
.77> ?
UTF877? C
.77C D
GetBytes77D L
(77L M
builder77M T
.77T U
Configuration77U b
[77b c
$str77c l
]77l m
)77m n
)77n o
}88 
;88 
}99 
)99 
;99 
builder;; 
.;; 
Services;; 
.;; 
AddSwaggerGen;; 
(;; 
c;;  
=>;;! #
{;;$ %
c<< 
.<< 

SwaggerDoc<< 
(<< 
$str<< 
,<< 
new<< 
OpenApiInfo<< &
{<<' (
Title== 
=== 
$str== #
,==# $
Version==% ,
===- .
$str==/ 3
}>> 
)>> 
;>> 
c?? 
.?? !
AddSecurityDefinition?? 
(?? 
$str?? $
,??$ %
new??& )!
OpenApiSecurityScheme??* ?
(??? @
)??@ A
{??B C
Name@@ 
=@@ 
$str@@ 
,@@ 
TypeAA 
=AA 
SecuritySchemeTypeAA %
.AA% &
ApiKeyAA& ,
,AA, -
SchemeBB 
=BB 
$strBB 
,BB 
BearerFormatCC 
=CC 
$strCC  
,CC  !
InDD 
=DD 
ParameterLocationDD "
.DD" #
HeaderDD# )
,DD) *
DescriptionEE 
=EE 
$str	EE ¬
,
EE¬ √
}FF 
)FF 
;FF 
cGG 
.GG "
AddSecurityRequirementGG 
(GG 
newGG  &
OpenApiSecurityRequirementGG! ;
{GG< =
{HH 	
newII !
OpenApiSecuritySchemeII %
{II& '
	ReferenceJJ 
=JJ 
newJJ 
OpenApiReferenceJJ  0
{JJ1 2
TypeKK 
=KK 
ReferenceTypeKK (
.KK( )
SecuritySchemeKK) 7
,KK7 8
IdLL 
=LL 
$strLL %
}MM 
}NN 
,NN 
newOO 
stringOO 
[OO 
]OO 
{OO 
}OO 
}PP 	
}QQ 
)QQ 
;QQ 
}RR 
)RR 
;RR 
builderUU 
.UU 
ServicesUU 
.UU #
AddControllersWithViewsUU (
(UU( )
)UU) *
.VV 
AddNewtonsoftJsonVV 
(VV 
optionsVV 
=>VV !
optionsWW 
.WW 
SerializerSettingsWW 
.WW !
ReferenceLoopHandlingWW 4
=WW5 6

NewtonsoftXX 

.XX
 
JsonXX 
.XX !
ReferenceLoopHandlingXX %
.XX% &
IgnoreXX& ,
)YY 
;YY 
try\\ 
{]] 
var^^ 
logger^^ 
=^^ 
new^^ 
LoggerConfiguration^^ (
(^^( )
)^^) *
.__ 
ReadFrom__ 
.__ 
Configuration__ 
(__ 
builder__ %
.__% &
Configuration__& 3
)__3 4
.`` 
Enrich`` 
.`` 
FromLogContext`` 
(`` 
)`` 
.aa 
CreateLoggeraa 
(aa 
)aa 
;aa 
builderbb 
.bb 
Loggingbb 
.bb 

AddSerilogbb 
(bb 
loggerbb %
)bb% &
;bb& '
}cc 
catchdd 
(dd 
	Exceptiondd 
	exceptiondd 
)dd 
{ee 
Consoleff 
.ff 
	WriteLineff 
(ff 
	exceptionff 
.ff  
Messageff  '
)ff' (
;ff( )
}gg 
varhh 
apphh 
=hh 	
builderhh
 
.hh 
Buildhh 
(hh 
)hh 
;hh 
ifll 
(ll 
appll 
.ll 
Environmentll 
.ll 
IsDevelopmentll !
(ll! "
)ll" #
)ll# $
{mm 
appnn 
.nn 

UseSwaggernn 
(nn 
)nn 
;nn 
appoo 
.oo 
UseSwaggerUIoo 
(oo 
)oo 
;oo 
}pp 
appqq 
.qq 
UseHttpsRedirectionqq 
(qq 
)qq 
;qq 
apprr 
.rr 
UseHttpLoggingrr 
(rr 
)rr 
;rr 
appss 
.ss 
UseAuthenticationss 
(ss 
)ss 
;ss 
apptt 
.tt 
UseAuthorizationtt 
(tt 
)tt 
;tt 
appvv 
.vv 
UseCorsvv 
(vv 
buildervv 
=>vv 
{ww 
builderxx 
.yy 
AllowAnyOriginyy 
(yy 
)yy 
.zz 
AllowAnyMethodzz 
(zz 
)zz 
.{{ 
AllowAnyHeader{{ 
({{ 
){{ 
;{{ 
}|| 
)|| 
;|| 
app}} 
.}} 
MapControllers}} 
(}} 
)}} 
;}} 
app~~ 
.~~ 
Run~~ 
(~~ 
)~~ 	
;~~	 
È
JC:\Users\pooja.sakthivel\Desktop\AspireOverflow\Security\PasswordHasher.cs
	namespace 	
AspireOverflow
 
. 
Security !
{! "
public 
class  
BCryptPasswordHasher "
<" #
TUser# (
>( )
:* +
IPasswordHasher, ;
<; <
TUser< A
>A B
whereC H
TUserI N
:O P
UserQ U
{ 
public 

string 
HashPassword 
(  
TUser  %
user& *
,* +
string, 2
password3 ;
); <
{ 
return 
BCrypt 
. 
Net 
. 
BCrypt  
.  !
HashPassword! -
(- .
password. 6
,6 7
$num8 :
): ;
;; <
}		 
public 
&
PasswordVerificationResult & 
VerifyHashedPassword' ;
(; <
TUser 
user 
, 
string 
hashedPassword '
,' (
string) /
providedPassword0 @
)@ A
{ 
var 
isValid 
= 
BCrypt 
. 
Net  
.  !
BCrypt! '
.' (
Verify( .
(. /
providedPassword/ ?
,? @
hashedPasswordA O
)O P
;P Q
if 

( 
isValid 
&& 
BCrypt 
. 
Net !
.! "
BCrypt" (
.( )
PasswordNeedsRehash) <
(< =
hashedPassword= K
,K L
$numM O
)O P
)P Q
{ 	
return &
PasswordVerificationResult -
.- .
SuccessRehashNeeded. A
;A B
} 	
return 
isValid 
? &
PasswordVerificationResult 3
.3 4
Success4 ;
:< =&
PasswordVerificationResult> X
.X Y
FailedY _
;_ `
} 
} 
} ø
QC:\Users\pooja.sakthivel\Desktop\AspireOverflow\Security\PasswordHasherFactory.cs
	namespace 	
AspireOverflow
 
. 
Security !
{ 
public 

static 
class !
PasswordHasherFactory -
{ 
public 
static  
BCryptPasswordHasher *
<* +
User+ /
>/ 0$
GetPasswordHasherFactory1 I
(I J
)J K
{ 	
return		 
new		  
BCryptPasswordHasher		 +
<		+ ,
User		, 0
>		0 1
(		1 2
)		2 3
;		3 4
} 	
} 
} Ì˙
JC:\Users\pooja.sakthivel\Desktop\AspireOverflow\Services\ArticleService.cs
	namespace 	
AspireOverflow
 
. 
Services !
{		 
public

 

class

 
ArticleService

 
:

  !
IArticleService

" 1
{ 
private 
readonly 
IArticleRepository +
database, 4
;4 5
private 
readonly 
ILogger  
<  !
ArticleService! /
>/ 0
_logger1 8
;8 9
private 
readonly 
MailService $
_mailService% 1
;1 2
private 
readonly 
	Stopwatch "

_stopWatch# -
=. /
new0 3
	Stopwatch4 =
(= >
)> ?
;? @
private 
bool 
IsTracingEnabled %
;% &
public 
ArticleService 
( 
ILogger %
<% &
ArticleService& 4
>4 5
logger6 <
,< =
MailService> I
mailServiceJ U
,U V
IArticleRepositoryW i
_articleRepositoryj |
)| }
{ 	
_logger 
= 
logger 
; 
_mailService 
= 
mailService &
;& '
database 
= 
_articleRepository )
;) *
IsTracingEnabled 
= 
database '
.' (.
"GetIsTraceEnabledFromConfiguration( J
(J K
)K L
;L M
} 	
public 
bool 
CreateArticle !
(! "
Article" )
article* 1
)1 2
{ 	
if 
( 
IsTracingEnabled  
)  !

_stopWatch" ,
., -
Start- 2
(2 3
)3 4
;4 5

Validation 
. 
ValidateArticle &
(& '
article' .
). /
;/ 0
if 
( 
article 
. 
	IsPrivate !
)! "
throw# (
new) ,
ValidationException- @
(@ A
$strA _
)_ `
;` a
try 
{   
article!! 
.!! 
Image!! 
=!! 
Convert!!  '
.!!' (
FromBase64String!!( 8
(!!8 9
article!!9 @
.!!@ A
ImageString!!A L
!!!L M
)!!M N
;!!N O
article"" 
."" 
Reason"" 
=""  
null""! %
;""% &
article## 
.## 
	CreatedOn## !
=##" #
DateTime##$ ,
.##, -
Now##- 0
;##0 1
return$$ 
database$$ 
.$$  

AddArticle$$  *
($$* +
article$$+ 2
)$$2 3
;$$3 4
}%% 
catch&& 
(&& 
	Exception&& 
	exception&& &
)&&& '
{'' 
_logger(( 
.(( 
LogError((  
(((  !
HelperService((! .
.((. /
LoggerMessage((/ <
(((< =
$str((= M
,((M N
$str((O o
,((o p
	exception((q z
,((z {
article	((| É
)
((É Ñ
)
((Ñ Ö
;
((Ö Ü
return)) 
false)) 
;)) 
}** 
finally++ 
{,, 
if-- 
(-- 
IsTracingEnabled-- $
)--$ %
{.. 

_stopWatch// 
.// 
Stop// #
(//# $
)//$ %
;//% &
_logger00 
.00 
LogInformation00 *
(00* +
$"00+ -
$str00- w
{00w x

_stopWatch	00x Ç
.
00Ç É!
ElapsedMilliseconds
00É ñ
}
00ñ ó
$str
00ó ô
"
00ô ö
)
00ö õ
;
00õ ú
}11 
}22 
}33 	
public55 
bool55 
CreateArticle55 !
(55! "
Article55" )
article55* 1
,551 2
List553 7
<557 8
int558 ;
>55; <
SharedUsersId55= J
)55J K
{66 	
if77 
(77 
IsTracingEnabled77  
)77  !

_stopWatch77" ,
.77, -
Start77- 2
(772 3
)773 4
;774 5

Validation99 
.99 
ValidateArticle99 &
(99& '
article99' .
)99. /
;99/ 0
try:: 
{;; 
article<< 
.<< 
Image<< 
=<< 
Convert<<  '
.<<' (
FromBase64String<<( 8
(<<8 9
article<<9 @
.<<@ A
ImageString<<A L
!<<L M
)<<M N
;<<N O
article== 
.== 
	CreatedOn== !
===" #
DateTime==$ ,
.==, -
Now==- 0
;==0 1
return?? 
database?? 
.??  ,
 AddPrivateArticleWithSharedUsers??  @
(??@ A
article??A H
,??H I
SharedUsersId??J W
)??W X
;??X Y
}@@ 
catchAA 
(AA 
	ExceptionAA 
	exceptionAA &
)AA& '
{BB 
_loggerCC 
.CC 
LogErrorCC  
(CC  !
HelperServiceCC! .
.CC. /
LoggerMessageCC/ <
(CC< =
$strCC= M
,CCM N
$str	CCO à
,
CCà â
	exception
CCä ì
,
CCì î
article
CCï ú
)
CCú ù
)
CCù û
;
CCû ü
returnDD 
falseDD 
;DD 
}EE 
finallyFF 
{GG 
ifHH 
(HH 
IsTracingEnabledHH $
)HH$ %
{II 

_stopWatchJJ 
.JJ 
StopJJ #
(JJ# $
)JJ$ %
;JJ% &
_loggerKK 
.KK 
LogInformationKK *
(KK* +
$"KK+ -
$str	KK- ê
{
KKê ë

_stopWatch
KKë õ
.
KKõ ú!
ElapsedMilliseconds
KKú Ø
}
KKØ ∞
$str
KK∞ ≤
"
KK≤ ≥
)
KK≥ ¥
;
KK¥ µ
}LL 
}MM 
}NN 	
publicSS 
boolSS 
UpdateArticleSS !
(SS! "
ArticleSS" )
articleSS* 1
,SS1 2
intSS3 6
_currentUserIdSS7 E
,SSE F
boolSSG K

IsReviewerSSL V
=SSW X
falseSSY ^
,SS^ _
ListSS` d
<SSd e
intSSe h
>SSh i
?SSi j
SharedUsersIdSSk x
=SSy z
default	SS{ Ç
!
SSÇ É
)
SSÉ Ñ
{TT 	
ifUU 
(UU 
IsTracingEnabledUU  
)UU  !

_stopWatchUU" ,
.UU, -
StartUU- 2
(UU2 3
)UU3 4
;UU4 5

ValidationWW 
.WW 
ValidateArticleWW &
(WW& '
articleWW' .
)WW. /
;WW/ 0
tryXX 
{YY 
varZZ 
ExistingArticleZZ #
=ZZ$ %
databaseZZ& .
.ZZ. /
GetArticleByIDZZ/ =
(ZZ= >
articleZZ> E
.ZZE F
	ArticleIdZZF O
)ZZO P
;ZZP Q
if\\ 
(\\ 
ExistingArticle\\ #
==\\$ &
null\\' +
)\\+ ,
throw\\- 2
new\\3 6!
ItemNotFoundException\\7 L
(\\L M
$"\\M O
$str\\O y
{\\y z
article	\\z Å
.
\\Å Ç
	ArticleId
\\Ç ã
}
\\ã å
"
\\å ç
)
\\ç é
;
\\é è
ExistingArticle]] 
.]]  
Title]]  %
=]]& '
article]]( /
.]]/ 0
Title]]0 5
;]]5 6
ExistingArticle^^ 
.^^  
Content^^  '
=^^( )
article^^* 1
.^^1 2
Content^^2 9
;^^9 :
ExistingArticle__ 
.__  
	UpdatedOn__  )
=__* +
DateTime__, 4
.__4 5
Now__5 8
;__8 9
ExistingArticle`` 
.``  
	UpdatedBy``  )
=``* +
_currentUserId``, :
;``: ;
ExistingArticleaa 
.aa  
ArticleStatusIDaa  /
=aa0 1
articleaa2 9
.aa9 :
ArticleStatusIDaa: I
;aaI J
ExistingArticlebb 
.bb  
	IsPrivatebb  )
=bb* +
articlebb, 3
.bb3 4
	IsPrivatebb4 =
;bb= >
ExistingArticlecc 
.cc  
Imagecc  %
=cc& '
Stringcc( .
.cc. /
IsNullOrEmptycc/ <
(cc< =
articlecc= D
.ccD E
ImageStringccE P
)ccP Q
?ccR S
ExistingArticleccT c
.ccc d
Imageccd i
:ccj k
Systemccl r
.ccr s
Convertccs z
.ccz {
FromBase64String	cc{ ã
(
ccã å
article
ccå ì
.
ccì î
ImageString
ccî ü
!
ccü †
)
cc† °
;
cc° ¢
ifff 
(ff 
_currentUserIdff "
!=ff# %
ExistingArticleff& 5
.ff5 6
	CreatedByff6 ?
&&ff@ B

IsReviewerffC M
)ffM N
{gg 
ExistingArticlehh #
.hh# $
Reasonhh$ *
=hh+ ,
articlehh- 4
.hh4 5
Reasonhh5 ;
;hh; <
ExistingArticleii #
.ii# $

ReviewerIdii$ .
=ii/ 0
_currentUserIdii1 ?
;ii? @
}jj 
returnll 
SharedUsersIdll $
==ll% '
nullll( ,
?ll- .
databasell/ 7
.ll7 8
UpdateArticlell8 E
(llE F
ExistingArticlellF U
)llU V
:llW X
databasellY a
.lla b0
#UpdatePrivateArticleWithSharedUsers	llb Ö
(
llÖ Ü
ExistingArticle
llÜ ï
,
llï ñ
SharedUsersId
lló §
)
ll§ •
;
ll• ¶
}mm 
catchnn 
(nn 
ValidationExceptionnn &
	exceptionnn' 0
)nn0 1
{oo 
_loggerpp 
.pp 
LogErrorpp  
(pp  !
HelperServicepp! .
.pp. /
LoggerMessagepp/ <
(pp< =
$strpp= M
,ppM N
$str	ppO Å
,
ppÅ Ç
	exception
ppÉ å
,
ppå ç
article
ppé ï
)
ppï ñ
)
ppñ ó
;
ppó ò
throwqq 
;qq 
}rr 
catchss 
(ss 
	Exceptionss 
	exceptionss &
)ss& '
{tt 
_loggeruu 
.uu 
LogErroruu  
(uu  !
HelperServiceuu! .
.uu. /
LoggerMessageuu/ <
(uu< =
$struu= M
,uuM N
$str	uuO Å
,
uuÅ Ç
	exception
uuÉ å
,
uuå ç
article
uué ï
)
uuï ñ
)
uuñ ó
;
uuó ò
returnvv 
falsevv 
;vv 
}ww 
finallyxx 
{yy 
ifzz 
(zz 
IsTracingEnabledzz $
)zz$ %
{{{ 

_stopWatch|| 
.|| 
Stop|| #
(||# $
)||$ %
;||% &
_logger}} 
.}} 
LogInformation}} *
(}}* +
$"}}+ -
$str	}}- à
{
}}à â

_stopWatch
}}â ì
.
}}ì î!
ElapsedMilliseconds
}}î ß
}
}}ß ®
$str
}}® ™
"
}}™ ´
)
}}´ ¨
;
}}¨ ≠
}~~ 
} 
}
ÄÄ 	
public
ÖÖ 
bool
ÖÖ !
ChangeArticleStatus
ÖÖ '
(
ÖÖ' (
int
ÖÖ( +
	ArticleID
ÖÖ, 5
,
ÖÖ5 6
int
ÖÖ7 :
ArticleStatusID
ÖÖ; J
,
ÖÖJ K
int
ÖÖL O
UserId
ÖÖP V
)
ÖÖV W
{
ÜÜ 	
if
áá 
(
áá 
IsTracingEnabled
áá  
)
áá  !

_stopWatch
áá" ,
.
áá, -
Start
áá- 2
(
áá2 3
)
áá3 4
;
áá4 5
if
àà 
(
àà 
	ArticleID
àà 
<=
àà 
$num
àà 
)
àà 
throw
àà  %
new
àà& )
ArgumentException
àà* ;
(
àà; <
$"
àà< >
$str
àà> p
{
ààp q
	ArticleID
ààq z
}
ààz {
"
àà{ |
)
àà| }
;
àà} ~
if
ââ 
(
ââ 
ArticleStatusID
ââ 
<=
ââ  "
$num
ââ# $
||
ââ% '
ArticleStatusID
ââ( 7
>
ââ8 9
$num
ââ: ;
)
ââ; <
throw
ââ= B
new
ââC F
ArgumentException
ââG X
(
ââX Y
$"
ââY [
$strââ[ ï
{ââï ñ
ArticleStatusIDââñ •
}ââ• ¶
"ââ¶ ß
)ââß ®
;ââ® ©
try
ää 
{
ãã 
var
åå 
IsAddedSuccfully
åå $
=
åå% &
database
åå' /
.
åå/ 0
UpdateArticle
åå0 =
(
åå= >
	ArticleID
åå> G
,
ååG H
ArticleStatusID
ååI X
,
ååX Y
UserId
ååZ `
)
åå` a
;
ååa b
if
éé 
(
éé 
IsAddedSuccfully
éé $
)
éé$ %
_mailService
éé& 2
?
éé2 3
.
éé3 4
SendEmailAsync
éé4 B
(
ééB C
HelperService
ééC P
.
ééP Q
ArticleMail
ééQ \
(
éé\ ]
$str
éé] w
,
ééw x
$strééy Ä
,ééÄ Å
$strééÇ †
,éé† °
$numéé¢ £
)éé£ §
)éé§ •
;éé• ¶
return
èè 
IsAddedSuccfully
èè '
;
èè' (
}
êê 
catch
ëë 
(
ëë 
	Exception
ëë 
	exception
ëë &
)
ëë& '
{
íí 
_logger
ìì 
.
ìì 
LogError
ìì  
(
ìì  !
HelperService
ìì! .
.
ìì. /
LoggerMessage
ìì/ <
(
ìì< =
$str
ìì= M
,
ììM N
$strììO û
,ììû ü
	exceptionìì† ©
)ìì© ™
,ìì™ ´
	ArticleIDìì¨ µ
,ììµ ∂
ArticleStatusIDìì∑ ∆
)ìì∆ «
;ìì« »
throw
îî 
;
îî 
}
ïï 
finally
ññ 
{
óó 
if
òò 
(
òò 
IsTracingEnabled
òò $
)
òò$ %
{
ôô 

_stopWatch
öö 
.
öö 
Stop
öö #
(
öö# $
)
öö$ %
;
öö% &
_logger
õõ 
.
õõ 
LogInformation
õõ *
(
õõ* +
$"
õõ+ -
$strõõ- ú
{õõú ù

_stopWatchõõù ß
.õõß ®#
ElapsedMillisecondsõõ® ª
}õõª º
$strõõº æ
"õõæ ø
)õõø ¿
;õõ¿ ¡
}
úú 
}
ùù 
}
ûû 	
public
¢¢ 
bool
¢¢ &
DeleteArticleByArticleId
¢¢ ,
(
¢¢, -
int
¢¢- 0
	ArticleId
¢¢1 :
)
¢¢: ;
{
££ 	
if
§§ 
(
§§ 
IsTracingEnabled
§§  
)
§§  !

_stopWatch
§§" ,
.
§§, -
Start
§§- 2
(
§§2 3
)
§§3 4
;
§§4 5
if
•• 
(
•• 
	ArticleId
•• 
<=
•• 
$num
•• 
)
•• 
throw
••  %
new
••& )
ArgumentException
••* ;
(
••; <
$"
••< >
$str
••> p
{
••p q
	ArticleId
••q z
}
••z {
"
••{ |
)
••| }
;
••} ~
try
¶¶ 
{
ßß 
return
®® 
database
®® 
.
®®  &
DeleteArticleByArticleId
®®  8
(
®®8 9
	ArticleId
®®9 B
)
®®B C
;
®®C D
}
©© 
catch
™™ 
(
™™ 
	Exception
™™ 
	exception
™™ &
)
™™& '
{
´´ 
_logger
¨¨ 
.
¨¨ 
LogError
¨¨  
(
¨¨  !
HelperService
¨¨! .
.
¨¨. /
LoggerMessage
¨¨/ <
(
¨¨< =
$str
¨¨= M
,
¨¨M N
$str
¨¨O x
,
¨¨x y
	exception¨¨z É
,¨¨É Ñ
	ArticleId¨¨Ö é
)¨¨é è
)¨¨è ê
;¨¨ê ë
return
≠≠ 
false
≠≠ 
;
≠≠ 
}
ÆÆ 
finally
ØØ 
{
∞∞ 
if
±± 
(
±± 
IsTracingEnabled
±± $
)
±±$ %
{
≤≤ 

_stopWatch
≥≥ 
.
≥≥ 
Stop
≥≥ #
(
≥≥# $
)
≥≥$ %
;
≥≥% &
_logger
¥¥ 
.
¥¥ 
LogInformation
¥¥ *
(
¥¥* +
$"
¥¥+ -
$str¥¥- Ä
{¥¥Ä Å

_stopWatch¥¥Å ã
.¥¥ã å#
ElapsedMilliseconds¥¥å ü
}¥¥ü †
$str¥¥† ¢
"¥¥¢ £
)¥¥£ §
;¥¥§ •
}
µµ 
}
∂∂ 
}
∑∑ 	
public
ºº 
object
ºº 
GetArticleById
ºº $
(
ºº$ %
int
ºº% (
	ArticleId
ºº) 2
)
ºº2 3
{
ΩΩ 	
if
ææ 
(
ææ 
IsTracingEnabled
ææ  
)
ææ  !

_stopWatch
ææ" ,
.
ææ, -
Start
ææ- 2
(
ææ2 3
)
ææ3 4
;
ææ4 5
if
øø 
(
øø 
	ArticleId
øø 
<=
øø 
$num
øø 
)
øø 
throw
øø  %
new
øø& )
ArgumentException
øø* ;
(
øø; <
$"
øø< >
$str
øø> p
{
øøp q
	ArticleId
øøq z
}
øøz {
"
øø{ |
)
øø| }
;
øø} ~
try
¿¿ 
{
¡¡ 
var
¬¬ 
article
¬¬ 
=
¬¬ 
database
¬¬ &
.
¬¬& '
GetArticleByID
¬¬' 5
(
¬¬5 6
	ArticleId
¬¬6 ?
)
¬¬? @
;
¬¬@ A
var
√√ 
SharedUsers
√√ 
=
√√  !
article
√√" )
.
√√) *
	IsPrivate
√√* 3
?
√√4 5
database
√√6 >
.
√√> ?/
!GetPrivateArticleUsersByArticleId
√√? `
(
√√` a
article
√√a h
.
√√h i
	ArticleId
√√i r
)
√√r s
.
√√s t
Select
√√t z
(
√√z {
Item
√√{ 
=>√√Ä Ç
new√√É Ü
{
ƒƒ 
UserId
≈≈ 
=
≈≈ 
Item
≈≈ !
.
≈≈! "
user
≈≈" &
?
≈≈& '
.
≈≈' (
UserId
≈≈( .
,
≈≈. /
FullName
∆∆ 
=
∆∆ 
Item
∆∆ #
.
∆∆# $
user
∆∆$ (
?
∆∆( )
.
∆∆) *
FullName
∆∆* 2
,
∆∆2 3
Email
«« 
=
«« 
Item
««  
.
««  !
user
««! %
?
««% &
.
««& '
EmailAddress
««' 3
}
»» 
)
»» 
:
»» 
null
»» 
;
»» 
return
…… 
new
…… 
{
   
	articleId
ÀÀ 
=
ÀÀ 
article
ÀÀ  '
.
ÀÀ' (
	ArticleId
ÀÀ( 1
,
ÀÀ1 2
PublishedDate
ÃÃ !
=
ÃÃ" #
article
ÃÃ$ +
.
ÃÃ+ ,
	UpdatedOn
ÃÃ, 5
,
ÃÃ5 6
title
ÕÕ 
=
ÕÕ 
article
ÕÕ #
.
ÕÕ# $
Title
ÕÕ$ )
,
ÕÕ) *

AuthorName
ŒŒ 
=
ŒŒ  
article
ŒŒ! (
.
ŒŒ( )
User
ŒŒ) -
?
ŒŒ- .
.
ŒŒ. /
FullName
ŒŒ/ 7
,
ŒŒ7 8
content
œœ 
=
œœ 
article
œœ %
.
œœ% &
Content
œœ& -
,
œœ- .
image
–– 
=
–– 
article
–– #
.
––# $
Image
––$ )
,
––) *
Likes
—— 
=
—— 
GetLikesCount
—— )
(
——) *
article
——* 1
.
——1 2
	ArticleId
——2 ;
)
——; <
,
——< =
comments
““ 
=
““ 
GetComments
““ *
(
““* +
article
““+ 2
.
““2 3
	ArticleId
““3 <
)
““< =
,
““= >
status
”” 
=
”” 
article
”” $
.
””$ %
ArticleStatus
””% 2
?
””2 3
.
””3 4
Status
””4 :
,
””: ;

ReviewerId
‘‘ 
=
‘‘  
article
‘‘! (
.
‘‘( )

ReviewerId
‘‘) 3
,
‘‘3 4
Reason
’’ 
=
’’ 
article
’’ $
.
’’$ %
Reason
’’% +
,
’’+ ,
	IsPrivate
÷÷ 
=
÷÷ 
article
÷÷  '
.
÷÷' (
	IsPrivate
÷÷( 1
,
÷÷1 2
SharedUsers
◊◊ 
=
◊◊  !
SharedUsers
◊◊" -
}
ÿÿ 
;
ÿÿ 
}
ŸŸ 
catch
⁄⁄ 
(
⁄⁄ 
	Exception
⁄⁄ 
	exception
⁄⁄ &
)
⁄⁄& '
{
€€ 
_logger
‹‹ 
.
‹‹ 
LogError
‹‹  
(
‹‹  !
HelperService
‹‹! .
.
‹‹. /
LoggerMessage
‹‹/ <
(
‹‹< =
$str
‹‹= M
,
‹‹M N
$str
‹‹O n
,
‹‹n o
	exception
‹‹p y
,
‹‹y z
	ArticleId‹‹{ Ñ
)‹‹Ñ Ö
)‹‹Ö Ü
;‹‹Ü á
throw
›› 
;
›› 
}
ﬁﬁ 
finally
ﬂﬂ 
{
‡‡ 
if
·· 
(
·· 
IsTracingEnabled
·· $
)
··$ %
{
‚‚ 

_stopWatch
„„ 
.
„„ 
Stop
„„ #
(
„„# $
)
„„$ %
;
„„% &
_logger
‰‰ 
.
‰‰ 
LogInformation
‰‰ *
(
‰‰* +
$"
‰‰+ -
$str
‰‰- v
{
‰‰v w

_stopWatch‰‰w Å
.‰‰Å Ç#
ElapsedMilliseconds‰‰Ç ï
}‰‰ï ñ
$str‰‰ñ ò
"‰‰ò ô
)‰‰ô ö
;‰‰ö õ
}
ÂÂ 
}
ÊÊ 
}
ÁÁ 	
public
ÎÎ 
IEnumerable
ÎÎ 
<
ÎÎ 
object
ÎÎ !
>
ÎÎ! "
GetLatestArticles
ÎÎ# 4
(
ÎÎ4 5
int
ÎÎ5 8
Range
ÎÎ9 >
=
ÎÎ? @
$num
ÎÎA B
)
ÎÎB C
{
ÏÏ 	
if
ÌÌ 
(
ÌÌ 
IsTracingEnabled
ÌÌ  
)
ÌÌ  !

_stopWatch
ÌÌ" ,
.
ÌÌ, -
Start
ÌÌ- 2
(
ÌÌ2 3
)
ÌÌ3 4
;
ÌÌ4 5
try
ÓÓ 
{
ÔÔ 
var
 
ListOfArticles
 "
=
# $
GetArticles
% 0
(
0 1
)
1 2
.
2 3
OrderByDescending
3 D
(
D E
article
E L
=>
M O
article
P W
.
W X
	UpdatedOn
X a
)
a b
.
b c
ToList
c i
(
i j
)
j k
;
k l
if
ÒÒ 
(
ÒÒ 
ListOfArticles
ÒÒ "
.
ÒÒ" #
Count
ÒÒ# (
>=
ÒÒ) +
Range
ÒÒ, 1
&&
ÒÒ2 4
Range
ÒÒ5 :
!=
ÒÒ; =
$num
ÒÒ> ?
)
ÒÒ? @
ListOfArticles
ÒÒA O
=
ÒÒP Q
ListOfArticles
ÒÒR `
.
ÒÒ` a
GetRange
ÒÒa i
(
ÒÒi j
$num
ÒÒj k
,
ÒÒk l
Range
ÒÒm r
)
ÒÒr s
;
ÒÒs t
return
ÚÚ 
ListOfArticles
ÚÚ %
.
ÚÚ% &
Select
ÚÚ& ,
(
ÚÚ, -
Article
ÚÚ- 4
=>
ÚÚ5 7'
GetAnonymousArticleObject
ÚÚ8 Q
(
ÚÚQ R
Article
ÚÚR Y
)
ÚÚY Z
)
ÚÚZ [
;
ÚÚ[ \
}
ÛÛ 
catch
ÙÙ 
(
ÙÙ 
	Exception
ÙÙ 
	exception
ÙÙ &
)
ÙÙ& '
{
ıı 
_logger
ˆˆ 
.
ˆˆ 
LogError
ˆˆ  
(
ˆˆ  !
HelperService
ˆˆ! .
.
ˆˆ. /
LoggerMessage
ˆˆ/ <
(
ˆˆ< =
$str
ˆˆ= M
,
ˆˆM N
$str
ˆˆO d
,
ˆˆd e
	exception
ˆˆf o
)
ˆˆo p
)
ˆˆp q
;
ˆˆq r
throw
˜˜ 
;
˜˜ 
}
¯¯ 
finally
˘˘ 
{
˙˙ 
if
˚˚ 
(
˚˚ 
IsTracingEnabled
˚˚ $
)
˚˚$ %
{
¸¸ 

_stopWatch
˝˝ 
.
˝˝ 
Stop
˝˝ #
(
˝˝# $
)
˝˝$ %
;
˝˝% &
_logger
˛˛ 
.
˛˛ 
LogInformation
˛˛ *
(
˛˛* +
$"
˛˛+ -
$str
˛˛- u
{
˛˛u v

_stopWatch˛˛v Ä
.˛˛Ä Å#
ElapsedMilliseconds˛˛Å î
}˛˛î ï
$str˛˛ï ó
"˛˛ó ò
)˛˛ò ô
;˛˛ô ö
}
ˇˇ 
}
ÄÄ 
}
ÅÅ 	
public
ÖÖ 
IEnumerable
ÖÖ 
<
ÖÖ 
Object
ÖÖ !
>
ÖÖ! "!
GetTrendingArticles
ÖÖ# 6
(
ÖÖ6 7
int
ÖÖ7 :
Range
ÖÖ; @
=
ÖÖA B
$num
ÖÖC D
)
ÖÖD E
{
ÜÜ 	
if
áá 
(
áá 
IsTracingEnabled
áá  
)
áá  !

_stopWatch
áá" ,
.
áá, -
Start
áá- 2
(
áá2 3
)
áá3 4
;
áá4 5
try
àà 
{
ââ 
var
ãã 
data
ãã 
=
ãã 
(
ãã 
database
ãã $
.
ãã$ %
GetLikes
ãã% -
(
ãã- .
)
ãã. /
.
ãã/ 0
GroupBy
ãã0 7
(
ãã7 8
item
ãã8 <
=>
ãã= ?
item
ãã@ D
.
ããD E
	ArticleId
ããE N
)
ããN O
)
ããO P
.
ããP Q
OrderByDescending
ããQ b
(
ããb c
item
ããc g
=>
ããh j
item
ããk o
.
ãão p
Count
ããp u
(
ããu v
)
ããv w
)
ããw x
;
ããx y
List
åå 
<
åå 
int
åå 
>
åå 
ListOfArticleId
åå )
=
åå* +
(
åå, -
from
åå- 1
item
åå2 6
in
åå7 9
data
åå: >
select
åå? E
item
ååF J
.
ååJ K
First
ååK P
(
ååP Q
)
ååQ R
.
ååR S
	ArticleId
ååS \
)
åå\ ]
.
åå] ^
ToList
åå^ d
(
ååd e
)
ååe f
;
ååf g
var
çç 
ListOfArticles
çç "
=
çç# $
database
çç% -
.
çç- .*
GetArticlesByArticleStatusId
çç. J
(
ççJ K
$num
ççK L
)
ççL M
.
ççM N
ToList
ççN T
(
ççT U
)
ççU V
;
ççV W
if
éé 
(
éé 
ListOfArticleId
éé #
.
éé# $
Count
éé$ )
>=
éé* ,
Range
éé- 2
&&
éé3 5
Range
éé6 ;
!=
éé< >
$num
éé? @
)
éé@ A
ListOfArticleId
ééB Q
=
ééR S
ListOfArticleId
ééT c
.
ééc d
GetRange
ééd l
(
éél m
$num
éém n
,
één o
Range
éép u
)
ééu v
;
éév w
var
èè 
TrendingArticles
èè $
=
èè% &
new
èè' *
List
èè+ /
<
èè/ 0
Article
èè0 7
>
èè7 8
(
èè8 9
)
èè9 :
;
èè: ;
foreach
êê 
(
êê 
var
êê 
Id
êê 
in
êê  "
ListOfArticleId
êê# 2
)
êê2 3
{
ëë 
var
íí 
Article
íí 
=
íí  !
ListOfArticles
íí" 0
.
íí0 1
Find
íí1 5
(
íí5 6
item
íí6 :
=>
íí; =
item
íí> B
.
ííB C
	ArticleId
ííC L
==
ííM O
Id
ííP R
)
ííR S
;
ííS T
if
ìì 
(
ìì 
Article
ìì 
!=
ìì  "
null
ìì# '
)
ìì' (
TrendingArticles
ìì) 9
.
ìì9 :
Add
ìì: =
(
ìì= >
Article
ìì> E
)
ììE F
;
ììF G
}
îî 
return
ïï 
TrendingArticles
ïï '
.
ïï' (
Select
ïï( .
(
ïï. /
Article
ïï/ 6
=>
ïï7 9'
GetAnonymousArticleObject
ïï: S
(
ïïS T
Article
ïïT [
)
ïï[ \
)
ïï\ ]
;
ïï] ^
}
ññ 
catch
óó 
(
óó 
	Exception
óó 
	exception
óó &
)
óó& '
{
òò 
_logger
ôô 
.
ôô 
LogError
ôô  
(
ôô  !
HelperService
ôô! .
.
ôô. /
LoggerMessage
ôô/ <
(
ôô< =
$str
ôô= M
,
ôôM N
$str
ôôO f
,
ôôf g
	exception
ôôh q
)
ôôq r
)
ôôr s
;
ôôs t
throw
öö 
;
öö 
}
õõ 
finally
úú 
{
ùù 
if
ûû 
(
ûû 
IsTracingEnabled
ûû $
)
ûû$ %
{
üü 

_stopWatch
†† 
.
†† 
Stop
†† #
(
††# $
)
††$ %
;
††% &
_logger
°° 
.
°° 
LogInformation
°° *
(
°°* +
$"
°°+ -
$str
°°- w
{
°°w x

_stopWatch°°x Ç
.°°Ç É#
ElapsedMilliseconds°°É ñ
}°°ñ ó
$str°°ó ô
"°°ô ö
)°°ö õ
;°°õ ú
}
¢¢ 
}
££ 
}
§§ 	
public
®® 
IEnumerable
®® 
<
®® 
object
®® !
>
®®! "!
GetArticlesByUserId
®®# 6
(
®®6 7
int
®®7 :
UserId
®®; A
)
®®A B
{
©© 	
if
™™ 
(
™™ 
IsTracingEnabled
™™  
)
™™  !

_stopWatch
™™" ,
.
™™, -
Start
™™- 2
(
™™2 3
)
™™3 4
;
™™4 5
if
´´ 
(
´´ 
UserId
´´ 
<=
´´ 
$num
´´ 
)
´´ 
throw
´´ "
new
´´# &
ArgumentException
´´' 8
(
´´8 9
$"
´´9 ;
$str
´´; g
{
´´g h
UserId
´´h n
}
´´n o
"
´´o p
)
´´p q
;
´´q r
try
¨¨ 
{
≠≠ 
var
ÆÆ 
ListOfArticles
ÆÆ "
=
ÆÆ# $
database
ÆÆ% -
.
ÆÆ- .!
GetArticlesByUserId
ÆÆ. A
(
ÆÆA B
UserId
ÆÆB H
)
ÆÆH I
;
ÆÆI J
return
ØØ 
ListOfArticles
ØØ %
.
ØØ% &
Select
ØØ& ,
(
ØØ, -
Article
ØØ- 4
=>
ØØ5 7'
GetAnonymousArticleObject
ØØ8 Q
(
ØØQ R
Article
ØØR Y
)
ØØY Z
)
ØØZ [
;
ØØ[ \
}
∞∞ 
catch
±± 
(
±± 
	Exception
±± 
	exception
±± &
)
±±& '
{
≤≤ 
_logger
≥≥ 
.
≥≥ 
LogError
≥≥  
(
≥≥  !
HelperService
≥≥! .
.
≥≥. /
LoggerMessage
≥≥/ <
(
≥≥< =
$str
≥≥= M
,
≥≥M N
$str
≥≥O p
,
≥≥p q
	exception
≥≥r {
,
≥≥{ |
UserId≥≥} É
)≥≥É Ñ
)≥≥Ñ Ö
;≥≥Ö Ü
throw
¥¥ 
;
¥¥ 
}
µµ 
finally
∂∂ 
{
∑∑ 
if
∏∏ 
(
∏∏ 
IsTracingEnabled
∏∏ $
)
∏∏$ %
{
ππ 

_stopWatch
∫∫ 
.
∫∫ 
Stop
∫∫ #
(
∫∫# $
)
∫∫$ %
;
∫∫% &
_logger
ªª 
.
ªª 
LogInformation
ªª *
(
ªª* +
$"
ªª+ -
$str
ªª- x
{
ªªx y

_stopWatchªªy É
.ªªÉ Ñ#
ElapsedMillisecondsªªÑ ó
}ªªó ò
$strªªò ö
"ªªö õ
)ªªõ ú
;ªªú ù
}
ºº 
}
ΩΩ 
}
ææ 	
private
¬¬ 
IEnumerable
¬¬ 
<
¬¬ 
Article
¬¬ #
>
¬¬# $
GetArticles
¬¬% 0
(
¬¬0 1
)
¬¬1 2
{
√√ 	
if
ƒƒ 
(
ƒƒ 
IsTracingEnabled
ƒƒ  
)
ƒƒ  !

_stopWatch
ƒƒ" ,
.
ƒƒ, -
Start
ƒƒ- 2
(
ƒƒ2 3
)
ƒƒ3 4
;
ƒƒ4 5
try
≈≈ 
{
∆∆ 
var
»» 
ListOfArticles
»» "
=
»»# $
database
»»% -
.
»»- .*
GetArticlesByArticleStatusId
»». J
(
»»J K
$num
»»K L
)
»»L M
;
»»M N
return
…… 
ListOfArticles
…… %
;
……% &
}
   
catch
ÀÀ 
(
ÀÀ 
	Exception
ÀÀ 
	exception
ÀÀ &
)
ÀÀ& '
{
ÃÃ 
_logger
ÕÕ 
.
ÕÕ 
LogError
ÕÕ  
(
ÕÕ  !
HelperService
ÕÕ! .
.
ÕÕ. /
LoggerMessage
ÕÕ/ <
(
ÕÕ< =
$str
ÕÕ= M
,
ÕÕM N
$str
ÕÕO ^
,
ÕÕ^ _
	exception
ÕÕ` i
)
ÕÕi j
)
ÕÕj k
;
ÕÕk l
throw
ŒŒ 
;
ŒŒ 
}
œœ 
finally
–– 
{
—— 
if
““ 
(
““ 
IsTracingEnabled
““ $
)
““$ %
{
”” 

_stopWatch
‘‘ 
.
‘‘ 
Stop
‘‘ #
(
‘‘# $
)
‘‘$ %
;
‘‘% &
_logger
’’ 
.
’’ 
LogInformation
’’ *
(
’’* +
$"
’’+ -
$str
’’- f
{
’’f g

_stopWatch
’’g q
.
’’q r"
ElapsedMilliseconds’’r Ö
}’’Ö Ü
$str’’Ü à
"’’à â
)’’â ä
;’’ä ã
}
÷÷ 
}
◊◊ 
}
ÿÿ 	
public
‹‹ 
IEnumerable
‹‹ 
<
‹‹ 
Article
‹‹ "
>
‹‹" #
GetAll
‹‹$ *
(
‹‹* +
)
‹‹+ ,
{
›› 	
if
ﬁﬁ 
(
ﬁﬁ 
IsTracingEnabled
ﬁﬁ  
)
ﬁﬁ  !

_stopWatch
ﬁﬁ" ,
.
ﬁﬁ, -
Start
ﬁﬁ- 2
(
ﬁﬁ2 3
)
ﬁﬁ3 4
;
ﬁﬁ4 5
try
ﬂﬂ 
{
‡‡ 
var
·· 
ListOfArticles
·· "
=
··# $
database
··% -
.
··- .
GetArticles
··. 9
(
··9 :
)
··: ;
;
··; <
return
‚‚ 
ListOfArticles
‚‚ %
;
‚‚% &
}
„„ 
catch
‰‰ 
(
‰‰ 
	Exception
‰‰ 
	exception
‰‰ &
)
‰‰& '
{
ÂÂ 
_logger
ÊÊ 
.
ÊÊ 
LogError
ÊÊ  
(
ÊÊ  !
HelperService
ÊÊ! .
.
ÊÊ. /
LoggerMessage
ÊÊ/ <
(
ÊÊ< =
$str
ÊÊ= M
,
ÊÊM N
$str
ÊÊO Y
,
ÊÊY Z
	exception
ÊÊ[ d
)
ÊÊd e
)
ÊÊe f
;
ÊÊf g
throw
ÁÁ 
;
ÁÁ 
}
ËË 
finally
ÈÈ 
{
ÍÍ 
if
ÎÎ 
(
ÎÎ 
IsTracingEnabled
ÎÎ $
)
ÎÎ$ %
{
ÏÏ 

_stopWatch
ÌÌ 
.
ÌÌ 
Stop
ÌÌ #
(
ÌÌ# $
)
ÌÌ$ %
;
ÌÌ% &
_logger
ÓÓ 
.
ÓÓ 
LogInformation
ÓÓ *
(
ÓÓ* +
$"
ÓÓ+ -
$str
ÓÓ- b
{
ÓÓb c

_stopWatch
ÓÓc m
.
ÓÓm n"
ElapsedMillisecondsÓÓn Å
}ÓÓÅ Ç
$strÓÓÇ Ñ
"ÓÓÑ Ö
)ÓÓÖ Ü
;ÓÓÜ á
}
ÔÔ 
}
 
}
ÒÒ 	
public
ıı 
IEnumerable
ıı 
<
ıı 
Object
ıı !
>
ıı! "
GetListOfArticles
ıı# 4
(
ıı4 5
)
ıı5 6
{
ˆˆ 	
if
˜˜ 
(
˜˜ 
IsTracingEnabled
˜˜  
)
˜˜  !

_stopWatch
˜˜" ,
.
˜˜, -
Start
˜˜- 2
(
˜˜2 3
)
˜˜3 4
;
˜˜4 5
try
¯¯ 
{
˘˘ 
var
˚˚ 
ListOfArticles
˚˚ "
=
˚˚# $
GetArticles
˚˚% 0
(
˚˚0 1
)
˚˚1 2
.
˚˚2 3
Where
˚˚3 8
(
˚˚8 9
Item
˚˚9 =
=>
˚˚> @
!
˚˚A B
Item
˚˚B F
.
˚˚F G
	IsPrivate
˚˚G P
)
˚˚P Q
;
˚˚Q R
return
¸¸ 
ListOfArticles
¸¸ %
.
¸¸% &
Select
¸¸& ,
(
¸¸, -
Article
¸¸- 4
=>
¸¸5 7'
GetAnonymousArticleObject
¸¸8 Q
(
¸¸Q R
Article
¸¸R Y
)
¸¸Y Z
)
¸¸Z [
;
¸¸[ \
}
˝˝ 
catch
˛˛ 
(
˛˛ 
	Exception
˛˛ 
	exception
˛˛ &
)
˛˛& '
{
ˇˇ 
_logger
ÄÄ 
.
ÄÄ 
LogError
ÄÄ  
(
ÄÄ  !
HelperService
ÄÄ! .
.
ÄÄ. /
LoggerMessage
ÄÄ/ <
(
ÄÄ< =
$str
ÄÄ= M
,
ÄÄM N
$str
ÄÄO ^
,
ÄÄ^ _
	exception
ÄÄ` i
)
ÄÄi j
)
ÄÄj k
;
ÄÄk l
throw
ÅÅ 
;
ÅÅ 
}
ÇÇ 
finally
ÉÉ 
{
ÑÑ 
if
ÖÖ 
(
ÖÖ 
IsTracingEnabled
ÖÖ $
)
ÖÖ$ %
{
ÜÜ 

_stopWatch
áá 
.
áá 
Stop
áá #
(
áá# $
)
áá$ %
;
áá% &
_logger
àà 
.
àà 
LogInformation
àà *
(
àà* +
$"
àà+ -
$str
àà- l
{
ààl m

_stopWatch
ààm w
.
ààw x"
ElapsedMillisecondsààx ã
}ààã å
$strààå é
"ààé è
)ààè ê
;ààê ë
}
ââ 
}
ää 
}
ãã 	
public
èè 
IEnumerable
èè 
<
èè 
Object
èè !
>
èè! " 
GetPrivateArticles
èè# 5
(
èè5 6
int
èè6 9
UserId
èè: @
)
èè@ A
{
êê 	
if
ëë 
(
ëë 
IsTracingEnabled
ëë  
)
ëë  !

_stopWatch
ëë" ,
.
ëë, -
Start
ëë- 2
(
ëë2 3
)
ëë3 4
;
ëë4 5
try
íí 
{
ìì 
var
îî #
ListOfPrivateArticles
îî )
=
îî* +
database
îî, 4
.
îî4 5,
GetPrivateArticleUsersByUserId
îî5 S
(
îîS T
UserId
îîT Z
)
îîZ [
;
îî[ \
return
ïï #
ListOfPrivateArticles
ïï ,
.
ïï, -
Select
ïï- 3
(
ïï3 4
PrivateArticle
ïï4 B
=>
ïïC E
PrivateArticle
ïïF T
.
ïïT U
article
ïïU \
!
ïï\ ]
)
ïï] ^
;
ïï^ _
}
ññ 
catch
óó 
(
óó 
	Exception
óó 
	exception
óó &
)
óó& '
{
òò 
_logger
ôô 
.
ôô 
LogError
ôô  
(
ôô  !
HelperService
ôô! .
.
ôô. /
LoggerMessage
ôô/ <
(
ôô< =
$str
ôô= M
,
ôôM N
$str
ôôO o
,
ôôo p
	exception
ôôq z
)
ôôz {
)
ôô{ |
;
ôô| }
throw
öö 
;
öö 
}
õõ 
finally
úú 
{
ùù 
if
ûû 
(
ûû 
IsTracingEnabled
ûû $
)
ûû$ %
{
üü 

_stopWatch
†† 
.
†† 
Stop
†† #
(
††# $
)
††$ %
;
††% &
_logger
°° 
.
°° 
LogInformation
°° *
(
°°* +
$"
°°+ -
$str
°°- w
{
°°w x

_stopWatch°°x Ç
.°°Ç É#
ElapsedMilliseconds°°É ñ
}°°ñ ó
$str°°ó ô
"°°ô ö
)°°ö õ
;°°õ ú
}
¢¢ 
}
££ 
}
§§ 	
public
®® 
IEnumerable
®® 
<
®® 
object
®® !
>
®®! " 
GetArticlesByTitle
®®# 5
(
®®5 6
string
®®6 <
Title
®®= B
)
®®B C
{
©© 	
if
™™ 
(
™™ 
IsTracingEnabled
™™  
)
™™  !

_stopWatch
™™" ,
.
™™, -
Start
™™- 2
(
™™2 3
)
™™3 4
;
™™4 5
if
´´ 
(
´´ 
String
´´ 
.
´´ 
IsNullOrEmpty
´´ $
(
´´$ %
Title
´´% *
)
´´* +
)
´´+ ,
throw
´´- 2
new
´´3 6!
ValidationException
´´7 J
(
´´J K
$str
´´K r
)
´´r s
;
´´s t
try
¨¨ 
{
≠≠ 
var
ÆÆ 
ListOfArticles
ÆÆ "
=
ÆÆ# $
database
ÆÆ% -
.
ÆÆ- . 
GetArticlesByTitle
ÆÆ. @
(
ÆÆ@ A
Title
ÆÆA F
)
ÆÆF G
;
ÆÆG H
return
ØØ 
ListOfArticles
ØØ %
.
ØØ% &
Select
ØØ& ,
(
ØØ, -
Article
ØØ- 4
=>
ØØ5 7'
GetAnonymousArticleObject
ØØ8 Q
(
ØØQ R
Article
ØØR Y
)
ØØY Z
)
ØØZ [
;
ØØ[ \
}
∞∞ 
catch
±± 
(
±± 
	Exception
±± 
	exception
±± &
)
±±& '
{
≤≤ 
_logger
≥≥ 
.
≥≥ 
LogError
≥≥  
(
≥≥  !
HelperService
≥≥! .
.
≥≥. /
LoggerMessage
≥≥/ <
(
≥≥< =
$str
≥≥= M
,
≥≥M N
$str
≥≥O q
,
≥≥q r
	exception
≥≥s |
,
≥≥| }
Title≥≥~ É
)≥≥É Ñ
)≥≥Ñ Ö
;≥≥Ö Ü
throw
¥¥ 
;
¥¥ 
}
µµ 
finally
∂∂ 
{
∑∑ 
if
∏∏ 
(
∏∏ 
IsTracingEnabled
∏∏ $
)
∏∏$ %
{
ππ 

_stopWatch
∫∫ 
.
∫∫ 
Stop
∫∫ #
(
∫∫# $
)
∫∫$ %
;
∫∫% &
_logger
ªª 
.
ªª 
LogInformation
ªª *
(
ªª* +
$"
ªª+ -
$str
ªª- y
{
ªªy z

_stopWatchªªz Ñ
.ªªÑ Ö#
ElapsedMillisecondsªªÖ ò
}ªªò ô
$strªªô õ
"ªªõ ú
)ªªú ù
;ªªù û
}
ºº 
}
ΩΩ 
}
ææ 	
public
¬¬ 
IEnumerable
¬¬ 
<
¬¬ 
object
¬¬ !
>
¬¬! "!
GetArticlesByAuthor
¬¬# 6
(
¬¬6 7
string
¬¬7 =

AuthorName
¬¬> H
)
¬¬H I
{
√√ 	
if
ƒƒ 
(
ƒƒ 
IsTracingEnabled
ƒƒ  
)
ƒƒ  !

_stopWatch
ƒƒ" ,
.
ƒƒ, -
Start
ƒƒ- 2
(
ƒƒ2 3
)
ƒƒ3 4
;
ƒƒ4 5
if
≈≈ 
(
≈≈ 
String
≈≈ 
.
≈≈ 
IsNullOrEmpty
≈≈ $
(
≈≈$ %

AuthorName
≈≈% /
)
≈≈/ 0
)
≈≈0 1
throw
≈≈2 7
new
≈≈8 ;
ArgumentException
≈≈< M
(
≈≈M N
$str
≈≈N n
)
≈≈n o
;
≈≈o p
try
∆∆ 
{
«« 
var
»» 
ListOfArticles
»» "
=
»»# $
database
»»% -
.
»»- .!
GetArticlesByAuthor
»». A
(
»»A B

AuthorName
»»B L
)
»»L M
;
»»M N
return
…… 
ListOfArticles
…… %
.
……% &
Select
……& ,
(
……, -
Article
……- 4
=>
……5 7'
GetAnonymousArticleObject
……8 Q
(
……Q R
Article
……R Y
)
……Y Z
)
……Z [
;
……[ \
}
   
catch
ÀÀ 
(
ÀÀ 
	Exception
ÀÀ 
	exception
ÀÀ &
)
ÀÀ& '
{
ÃÃ 
_logger
ÕÕ 
.
ÕÕ 
LogError
ÕÕ  
(
ÕÕ  !
HelperService
ÕÕ! .
.
ÕÕ. /
LoggerMessage
ÕÕ/ <
(
ÕÕ< =
$str
ÕÕ= M
,
ÕÕM N
$str
ÕÕO w
,
ÕÕw x
	exceptionÕÕy Ç
,ÕÕÇ É

AuthorNameÕÕÑ é
)ÕÕé è
)ÕÕè ê
;ÕÕê ë
throw
ŒŒ 
;
ŒŒ 
}
œœ 
finally
–– 
{
—— 
if
““ 
(
““ 
IsTracingEnabled
““ $
)
““$ %
{
”” 

_stopWatch
‘‘ 
.
‘‘ 
Stop
‘‘ #
(
‘‘# $
)
‘‘$ %
;
‘‘% &
_logger
’’ 
.
’’ 
LogInformation
’’ *
(
’’* +
$"
’’+ -
$str
’’- 
{’’ Ä

_stopWatch’’Ä ä
.’’ä ã#
ElapsedMilliseconds’’ã û
}’’û ü
$str’’ü °
"’’° ¢
)’’¢ £
;’’£ §
}
÷÷ 
}
◊◊ 
}
ÿÿ 	
public
‹‹ 
IEnumerable
‹‹ 
<
‹‹ 
object
‹‹ !
>
‹‹! "%
GetArticlesByReviewerId
‹‹# :
(
‹‹: ;
int
‹‹; >

ReviewerId
‹‹? I
)
‹‹I J
{
›› 	
if
ﬁﬁ 
(
ﬁﬁ 
IsTracingEnabled
ﬁﬁ  
)
ﬁﬁ  !

_stopWatch
ﬁﬁ" ,
.
ﬁﬁ, -
Start
ﬁﬁ- 2
(
ﬁﬁ2 3
)
ﬁﬁ3 4
;
ﬁﬁ4 5
if
ﬂﬂ 
(
ﬂﬂ 

ReviewerId
ﬂﬂ 
<=
ﬂﬂ 
$num
ﬂﬂ 
)
ﬂﬂ  
throw
ﬂﬂ! &
new
ﬂﬂ' *
ArgumentException
ﬂﬂ+ <
(
ﬂﬂ< =
$"
ﬂﬂ= ?
$str
ﬂﬂ? r
{
ﬂﬂr s

ReviewerId
ﬂﬂs }
}
ﬂﬂ} ~
"
ﬂﬂ~ 
)ﬂﬂ Ä
;ﬂﬂÄ Å
try
‡‡ 
{
·· 
var
‚‚ 
ListOfArticles
‚‚ "
=
‚‚# $
database
‚‚% -
.
‚‚- .%
GetArticlesByReviewerId
‚‚. E
(
‚‚E F

ReviewerId
‚‚F P
)
‚‚P Q
;
‚‚Q R
return
„„ 
ListOfArticles
„„ %
.
„„% &
Select
„„& ,
(
„„, -
Article
„„- 4
=>
„„5 7'
GetAnonymousArticleObject
„„8 Q
(
„„Q R
Article
„„R Y
)
„„Y Z
)
„„Z [
;
„„[ \
}
‰‰ 
catch
ÂÂ 
(
ÂÂ 
	Exception
ÂÂ 
	exception
ÂÂ &
)
ÂÂ& '
{
ÊÊ 
_logger
ÁÁ 
.
ÁÁ 
LogError
ÁÁ  
(
ÁÁ  !
HelperService
ÁÁ! .
.
ÁÁ. /
LoggerMessage
ÁÁ/ <
(
ÁÁ< =
$str
ÁÁ= M
,
ÁÁM N
$str
ÁÁO y
,
ÁÁy z
	exceptionÁÁ{ Ñ
,ÁÁÑ Ö

ReviewerIdÁÁÜ ê
)ÁÁê ë
)ÁÁë í
;ÁÁí ì
throw
ËË 
;
ËË 
}
ÈÈ 
finally
ÍÍ 
{
ÎÎ 
if
ÏÏ 
(
ÏÏ 
IsTracingEnabled
ÏÏ $
)
ÏÏ$ %
{
ÌÌ 

_stopWatch
ÓÓ 
.
ÓÓ 
Stop
ÓÓ #
(
ÓÓ# $
)
ÓÓ$ %
;
ÓÓ% &
_logger
ÔÔ 
.
ÔÔ 
LogInformation
ÔÔ *
(
ÔÔ* +
$"
ÔÔ+ -
$strÔÔ- Ä
{ÔÔÄ Å

_stopWatchÔÔÅ ã
.ÔÔã å#
ElapsedMillisecondsÔÔå ü
}ÔÔü †
$strÔÔ† ¢
"ÔÔ¢ £
)ÔÔ£ §
;ÔÔ§ •
}
 
}
ÒÒ 
}
ÚÚ 	
public
ˆˆ 
IEnumerable
ˆˆ 
<
ˆˆ 
object
ˆˆ !
>
ˆˆ! "*
GetArticlesByArticleStatusId
ˆˆ# ?
(
ˆˆ? @
int
ˆˆ@ C
ArticleStatusID
ˆˆD S
,
ˆˆS T
bool
ˆˆU Y

IsReviewer
ˆˆZ d
)
ˆˆd e
{
˜˜ 	
if
¯¯ 
(
¯¯ 
IsTracingEnabled
¯¯  
)
¯¯  !

_stopWatch
¯¯" ,
.
¯¯, -
Start
¯¯- 2
(
¯¯2 3
)
¯¯3 4
;
¯¯4 5
if
˚˚ 
(
˚˚ 
ArticleStatusID
˚˚ 
<=
˚˚  "
$num
˚˚# $
||
˚˚% '
ArticleStatusID
˚˚( 7
>
˚˚8 9
$num
˚˚: ;
)
˚˚; <
throw
˚˚= B
new
˚˚C F
ArgumentException
˚˚G X
(
˚˚X Y
$"
˚˚Y [
$str˚˚[ ï
{˚˚ï ñ
ArticleStatusID˚˚ñ •
}˚˚• ¶
"˚˚¶ ß
)˚˚ß ®
;˚˚® ©
try
¸¸ 
{
˝˝ 
var
˛˛ 
ListOfArticles
˛˛ "
=
˛˛# $
database
˛˛% -
.
˛˛- .*
GetArticlesByArticleStatusId
˛˛. J
(
˛˛J K
ArticleStatusID
˛˛K Z
,
˛˛Z [

IsReviewer
˛˛\ f
)
˛˛f g
;
˛˛g h
return
ˇˇ 
ListOfArticles
ˇˇ %
.
ˇˇ% &
Select
ˇˇ& ,
(
ˇˇ, -
Article
ˇˇ- 4
=>
ˇˇ5 7'
GetAnonymousArticleObject
ˇˇ8 Q
(
ˇˇQ R
Article
ˇˇR Y
)
ˇˇY Z
)
ˇˇZ [
;
ˇˇ[ \
}
ÄÄ 
catch
ÅÅ 
(
ÅÅ 
	Exception
ÅÅ 
	exception
ÅÅ &
)
ÅÅ& '
{
ÇÇ 
_logger
ÉÉ 
.
ÉÉ 
LogError
ÉÉ  
(
ÉÉ  !
HelperService
ÉÉ! .
.
ÉÉ. /
LoggerMessage
ÉÉ/ <
(
ÉÉ< =
$str
ÉÉ= M
,
ÉÉM N
$strÉÉO ì
,ÉÉì î
	exceptionÉÉï û
)ÉÉû ü
,ÉÉü †
ArticleStatusIDÉÉ° ∞
)ÉÉ∞ ±
;ÉÉ± ≤
throw
ÑÑ 
;
ÑÑ 
}
ÖÖ 
finally
ÜÜ 
{
áá 
if
àà 
(
àà 
IsTracingEnabled
àà $
)
àà$ %
{
ââ 

_stopWatch
ää 
.
ää 
Stop
ää #
(
ää# $
)
ää$ %
;
ää% &
_logger
ãã 
.
ãã 
LogInformation
ãã *
(
ãã* +
$"
ãã+ -
$strãã- õ
{ããõ ú

_stopWatchããú ¶
.ãã¶ ß#
ElapsedMillisecondsããß ∫
}ãã∫ ª
$strããª Ω
"ããΩ æ
)ããæ ø
;ããø ¿
}
åå 
}
çç 
}
éé 	
public
ëë 
object
ëë  
GetCountOfArticles
ëë (
(
ëë( )
)
ëë) *
{
íí 	
if
ìì 
(
ìì 
IsTracingEnabled
ìì  
)
ìì  !

_stopWatch
ìì" ,
.
ìì, -
Start
ìì- 2
(
ìì2 3
)
ìì3 4
;
ìì4 5
try
îî 
{
ïï 
return
ññ 
database
ññ 
.
ññ   
GetCountOfArticles
ññ  2
(
ññ2 3
)
ññ3 4
;
ññ4 5
}
óó 
catch
òò 
(
òò 
	Exception
òò 
	exception
òò &
)
òò& '
{
ôô 
_logger
öö 
.
öö 
LogError
öö  
(
öö  !
HelperService
öö! .
.
öö. /
LoggerMessage
öö/ <
(
öö< =
$str
öö= P
,
ööP Q
$str
ööR h
,
ööh i
	exception
ööj s
)
öös t
)
ööt u
;
ööu v
throw
õõ 
;
õõ 
}
úú 
finally
ùù 
{
ûû 
if
üü 
(
üü 
IsTracingEnabled
üü $
)
üü$ %
{
†† 

_stopWatch
°° 
.
°° 
Stop
°° #
(
°°# $
)
°°$ %
;
°°% &
_logger
¢¢ 
.
¢¢ 
LogInformation
¢¢ *
(
¢¢* +
$"
¢¢+ -
$str
¢¢- m
{
¢¢m n

_stopWatch
¢¢n x
.
¢¢x y"
ElapsedMilliseconds¢¢y å
}¢¢å ç
$str¢¢ç è
"¢¢è ê
)¢¢ê ë
;¢¢ë í
}
££ 
}
§§ 
}
•• 	
public
®® 
bool
®® 
CreateComment
®® !
(
®®! "
ArticleComment
®®" 0
comment
®®1 8
)
®®8 9
{
©© 	
if
™™ 
(
™™ 
IsTracingEnabled
™™  
)
™™  !

_stopWatch
™™" ,
.
™™, -
Start
™™- 2
(
™™2 3
)
™™3 4
;
™™4 5

Validation
´´ 
.
´´ $
ValidateArticleComment
´´ -
(
´´- .
comment
´´. 5
)
´´5 6
;
´´6 7
try
¨¨ 
{
≠≠ 
comment
ÆÆ 
.
ÆÆ 
	CreatedBy
ÆÆ !
=
ÆÆ" #
comment
ÆÆ$ +
.
ÆÆ+ ,
UserId
ÆÆ, 2
;
ÆÆ2 3
comment
ØØ 
.
ØØ 
	CreatedOn
ØØ !
=
ØØ" #
DateTime
ØØ$ ,
.
ØØ, -
Now
ØØ- 0
;
ØØ0 1
var
∞∞ #
IsCommentSuccessfully
∞∞ )
=
∞∞* +
database
∞∞, 4
.
∞∞4 5

AddComment
∞∞5 ?
(
∞∞? @
comment
∞∞@ G
)
∞∞G H
;
∞∞H I
if
±± 
(
±± #
IsCommentSuccessfully
±± )
)
±±) *
_mailService
±±+ 7
?
±±7 8
.
±±8 9
SendEmailAsync
±±9 G
(
±±G H
HelperService
±±H U
.
±±U V
CommentMail
±±V a
(
±±a b
$str±±b Ö
,±±Ö Ü
$str±±á é
,±±é è
$str±±ê Æ
)±±Æ Ø
)±±Ø ∞
;±±∞ ±
return
≤≤ #
IsCommentSuccessfully
≤≤ ,
;
≤≤, -
}
≥≥ 
catch
¥¥ 
(
¥¥ 
	Exception
¥¥ 
	exception
¥¥ &
)
¥¥& '
{
µµ 
_logger
∂∂ 
.
∂∂ 
LogError
∂∂  
(
∂∂  !
HelperService
∂∂! .
.
∂∂. /
LoggerMessage
∂∂/ <
(
∂∂< =
$str
∂∂= M
,
∂∂M N
$str
∂∂O v
,
∂∂v w
	exception∂∂x Å
)∂∂Å Ç
,∂∂Ç É
comment∂∂Ñ ã
)∂∂ã å
;∂∂å ç
return
∑∑ 
false
∑∑ 
;
∑∑ 
}
∏∏ 
finally
ππ 
{
∫∫ 
if
ªª 
(
ªª 
IsTracingEnabled
ªª $
)
ªª$ %
{
ºº 

_stopWatch
ΩΩ 
.
ΩΩ 
Stop
ΩΩ #
(
ΩΩ# $
)
ΩΩ$ %
;
ΩΩ% &
_logger
ææ 
.
ææ 
LogInformation
ææ *
(
ææ* +
$"
ææ+ -
$str
ææ- ~
{
ææ~ 

_stopWatchææ â
.ææâ ä#
ElapsedMillisecondsææä ù
}ææù û
$strææû †
"ææ† °
)ææ° ¢
;ææ¢ £
}
øø 
}
¿¿ 
}
¡¡ 	
public
≈≈ 
IEnumerable
≈≈ 
<
≈≈ 
Object
≈≈ !
>
≈≈! "
GetComments
≈≈# .
(
≈≈. /
int
≈≈/ 2
	ArticleID
≈≈3 <
)
≈≈< =
{
∆∆ 	
if
«« 
(
«« 
IsTracingEnabled
««  
)
««  !

_stopWatch
««" ,
.
««, -
Start
««- 2
(
««2 3
)
««3 4
;
««4 5
if
»» 
(
»» 
	ArticleID
»» 
<=
»» 
$num
»» 
)
»» 
throw
»»  %
new
»»& )
ArgumentException
»»* ;
(
»»; <
$"
»»< >
$str
»»> p
{
»»p q
	ArticleID
»»q z
}
»»z {
"
»»{ |
)
»»| }
;
»»} ~
try
…… 
{
   
var
ÀÀ 
ListOfComments
ÀÀ "
=
ÀÀ# $
database
ÀÀ% -
.
ÀÀ- .$
GetCommentsByArticleId
ÀÀ. D
(
ÀÀD E
	ArticleID
ÀÀE N
)
ÀÀN O
;
ÀÀO P
return
ÃÃ 
ListOfComments
ÃÃ %
.
ÃÃ% &
Select
ÃÃ& ,
(
ÃÃ, -
Item
ÃÃ- 1
=>
ÃÃ2 4
new
ÃÃ5 8
{
ÕÕ 
	CommentId
ŒŒ 
=
ŒŒ 
Item
ŒŒ  $
.
ŒŒ$ %
ArticleCommentId
ŒŒ% 5
,
ŒŒ5 6
Message
œœ 
=
œœ 
Item
œœ "
.
œœ" #
Comment
œœ# *
,
œœ* +
Name
–– 
=
–– 
Item
–– 
.
––  
User
––  $
?
––$ %
.
––% &
FullName
––& .
,
––. /
	ArticleId
—— 
=
—— 
Item
——  $
.
——$ %
	ArticleId
——% .
,
——. /
DateTime
““ 
=
““ 
Item
““ #
.
““# $
	CreatedOn
““$ -
}
”” 
)
”” 
;
”” 
}
‘‘ 
catch
’’ 
(
’’ 
	Exception
’’ 
	exception
’’ &
)
’’& '
{
÷÷ 
_logger
◊◊ 
.
◊◊ 
LogError
◊◊  
(
◊◊  !
HelperService
◊◊! .
.
◊◊. /
LoggerMessage
◊◊/ <
(
◊◊< =
$str
◊◊= M
,
◊◊M N
$str
◊◊O k
,
◊◊k l
	exception
◊◊m v
,
◊◊v w
	ArticleID◊◊x Å
)◊◊Å Ç
)◊◊Ç É
;◊◊É Ñ
throw
ÿÿ 
;
ÿÿ 
}
ŸŸ 
finally
⁄⁄ 
{
€€ 
if
‹‹ 
(
‹‹ 
IsTracingEnabled
‹‹ $
)
‹‹$ %
{
›› 

_stopWatch
ﬁﬁ 
.
ﬁﬁ 
Stop
ﬁﬁ #
(
ﬁﬁ# $
)
ﬁﬁ$ %
;
ﬁﬁ% &
_logger
ﬂﬂ 
.
ﬂﬂ 
LogInformation
ﬂﬂ *
(
ﬂﬂ* +
$"
ﬂﬂ+ -
$str
ﬂﬂ- s
{
ﬂﬂs t

_stopWatch
ﬂﬂt ~
.
ﬂﬂ~ "
ElapsedMillisecondsﬂﬂ í
}ﬂﬂí ì
$strﬂﬂì ï
"ﬂﬂï ñ
)ﬂﬂñ ó
;ﬂﬂó ò
}
‡‡ 
}
·· 
}
‚‚ 	
public
ÊÊ 
bool
ÊÊ 
AddLikeToArticle
ÊÊ $
(
ÊÊ$ %
ArticleLike
ÊÊ% 0
Like
ÊÊ1 5
)
ÊÊ5 6
{
ÁÁ 	
if
ËË 
(
ËË 
IsTracingEnabled
ËË  
)
ËË  !

_stopWatch
ËË" ,
.
ËË, -
Start
ËË- 2
(
ËË2 3
)
ËË3 4
;
ËË4 5

Validation
ÈÈ 
.
ÈÈ !
ValidateArticleLike
ÈÈ *
(
ÈÈ* +
Like
ÈÈ+ /
)
ÈÈ/ 0
;
ÈÈ0 1
try
ÍÍ 
{
ÎÎ 
return
ÏÏ 
database
ÏÏ 
.
ÏÏ  
AddLike
ÏÏ  '
(
ÏÏ' (
Like
ÏÏ( ,
)
ÏÏ, -
;
ÏÏ- .
}
ÌÌ 
catch
ÓÓ 
(
ÓÓ !
ValidationException
ÓÓ &
	exception
ÓÓ' 0
)
ÓÓ0 1
{
ÔÔ 
_logger
 
.
 
LogError
  
(
  !
HelperService
! .
.
. /
LoggerMessage
/ <
(
< =
$str
= M
,
M N
$str
O c
,
c d
	exception
e n
,
n o
Like
p t
)
t u
)
u v
;
v w
return
ÒÒ 
false
ÒÒ 
;
ÒÒ 
}
ÚÚ 
catch
ÛÛ 
(
ÛÛ 
	Exception
ÛÛ 
	exception
ÛÛ &
)
ÛÛ& '
{
ÙÙ 
_logger
ıı 
.
ıı 
LogError
ıı  
(
ıı  !
HelperService
ıı! .
.
ıı. /
LoggerMessage
ıı/ <
(
ıı< =
$str
ıı= M
,
ııM N
$str
ııO s
,
ııs t
	exception
ııu ~
,
ıı~ 
LikeııÄ Ñ
)ııÑ Ö
)ııÖ Ü
;ııÜ á
return
ˆˆ 
false
ˆˆ 
;
ˆˆ 
}
˜˜ 
finally
¯¯ 
{
˘˘ 
if
˙˙ 
(
˙˙ 
IsTracingEnabled
˙˙ $
)
˙˙$ %
{
˚˚ 

_stopWatch
¸¸ 
.
¸¸ 
Stop
¸¸ #
(
¸¸# $
)
¸¸$ %
;
¸¸% &
_logger
˝˝ 
.
˝˝ 
LogInformation
˝˝ *
(
˝˝* +
$"
˝˝+ -
$str
˝˝- {
{
˝˝{ |

_stopWatch˝˝| Ü
.˝˝Ü á#
ElapsedMilliseconds˝˝á ö
}˝˝ö õ
$str˝˝õ ù
"˝˝ù û
)˝˝û ü
;˝˝ü †
}
˛˛ 
}
ˇˇ 
}
ÄÄ 	
public
ÑÑ 
int
ÑÑ 
GetLikesCount
ÑÑ  
(
ÑÑ  !
int
ÑÑ! $
	ArticleID
ÑÑ% .
)
ÑÑ. /
{
ÖÖ 	
if
ÜÜ 
(
ÜÜ 
IsTracingEnabled
ÜÜ  
)
ÜÜ  !

_stopWatch
ÜÜ" ,
.
ÜÜ, -
Start
ÜÜ- 2
(
ÜÜ2 3
)
ÜÜ3 4
;
ÜÜ4 5
if
áá 
(
áá 
	ArticleID
áá 
<=
áá 
$num
áá 
)
áá 
throw
áá  %
new
áá& )
ArgumentException
áá* ;
(
áá; <
$"
áá< >
$str
áá> p
{
ááp q
	ArticleID
ááq z
}
ááz {
"
áá{ |
)
áá| }
;
áá} ~
try
àà 
{
ââ 
var
ää 
ArticleLikes
ää  
=
ää! "
database
ää# +
.
ää+ ,
GetCountOfLikes
ää, ;
(
ää; <
	ArticleID
ää< E
)
ääE F
;
ääF G
return
ãã 
ArticleLikes
ãã #
;
ãã# $
}
åå 
catch
çç 
(
çç 
	Exception
çç 
	exception
çç &
)
çç& '
{
éé 
_logger
èè 
.
èè 
LogError
èè  
(
èè  !
HelperService
èè! .
.
èè. /
LoggerMessage
èè/ <
(
èè< =
$str
èè= M
,
èèM N
$str
èèO m
,
èèm n
	exception
èèo x
)
èèx y
)
èèy z
;
èèz {
throw
êê 
;
êê 
}
ëë 
finally
íí 
{
ìì 
if
îî 
(
îî 
IsTracingEnabled
îî $
)
îî$ %
{
ïï 

_stopWatch
ññ 
.
ññ 
Stop
ññ #
(
ññ# $
)
ññ$ %
;
ññ% &
_logger
óó 
.
óó 
LogInformation
óó *
(
óó* +
$"
óó+ -
$str
óó- u
{
óóu v

_stopWatchóóv Ä
.óóÄ Å#
ElapsedMillisecondsóóÅ î
}óóî ï
$stróóï ó
"óóó ò
)óóò ô
;óóô ö
}
òò 
}
ôô 
}
öö 	
private
ùù 
object
ùù '
GetAnonymousArticleObject
ùù 0
(
ùù0 1
Article
ùù1 8
article
ùù9 @
)
ùù@ A
{
ûû 	
return
üü 
new
üü 
{
†† 
	ArticleId
°° 
=
°° 
article
°° #
.
°°# $
	ArticleId
°°$ -
,
°°- .
title
¢¢ 
=
¢¢ 
article
¢¢ 
.
¢¢  
Title
¢¢  %
,
¢¢% &

AuthorName
££ 
=
££ 
article
££ $
.
££$ %
User
££% )
?
££) *
.
££* +
FullName
££+ 3
,
££3 4
content
§§ 
=
§§ 
article
§§ !
.
§§! "
Content
§§" )
,
§§) *
image
•• 
=
•• 
article
•• 
.
••  
Image
••  %
,
••% &
date
¶¶ 
=
¶¶ 
article
¶¶ 
.
¶¶ 
	UpdatedOn
¶¶ (
,
¶¶( )
status
ßß 
=
ßß 
article
ßß  
.
ßß  !
ArticleStatus
ßß! .
?
ßß. /
.
ßß/ 0
Status
ßß0 6
,
ßß6 7

ReviewerId
®® 
=
®® 
article
®® $
.
®®$ %

ReviewerId
®®% /
,
®®/ 0
Reason
©© 
=
©© 
article
©©  
.
©©  !
Reason
©©! '
,
©©' (
	IsPrivate
™™ 
=
™™ 
article
™™ #
.
™™# $
	IsPrivate
™™$ -
}
´´ 
;
´´ 
}
¨¨ 	
}
≠≠ 
}ÆÆ øQ
JC:\Users\pooja.sakthivel\Desktop\AspireOverflow\Services\HelperServices.cs
	namespace 	
AspireOverflow
 
. 
Services !
{ 
public 

static 
class 
HelperService %
{ 
public 
static 
string 
PropertyList )
() *
this* .
object/ 5
obj6 9
)9 :
{		 	
if

 
(

 
obj

 
==

 
null

 
)

 
return

 #
$str

$ &
;

& '
try 
{ 
var 

properties 
=  
obj! $
.$ %
GetType% ,
(, -
)- .
.. /
GetProperties/ <
(< =
)= >
;> ?
var 
stringBuilder !
=" #
new$ '
StringBuilder( 5
(5 6
)6 7
;7 8
foreach 
( 
var 
data !
in" $

properties% /
)/ 0
{ 
stringBuilder !
.! "
AppendFormat" .
(. /
data/ 3
.3 4
Name4 8
+9 :
$str; ?
+@ A
dataB F
.F G
GetValueG O
(O P
objP S
,S T
nullU Y
)Y Z
)Z [
;[ \
} 
return 
stringBuilder $
.$ %
ToString% -
(- .
). /
;/ 0
} 
catch 
{ 
return 
$str 
; 
} 
} 	
public 
static 
string 
LoggerMessage *
(* +
string+ 1
RepositoryName2 @
,@ A
stringB H

MethodNameI S
,S T
	ExceptionU ^
	exception_ h
,h i
objectj p
?p q
Datar v
=w x
nully }
)} ~
{ 	
return 
Data 
!= 
null 
?  !
$"" $
{$ %
RepositoryName% 3
}3 4
$str4 5
{5 6

MethodName6 @
}@ A
$strA L
{L M
	exceptionM V
.V W
ToStringW _
(_ `
)` a
}a b
$strb p
{p q
PropertyListq }
(} ~
Data	~ Ç
)
Ç É
}
É Ñ
$str
Ñ Ü
"
Ü á
:
à â
$" 
{ 
RepositoryName 
} 
$str  
{  !

MethodName! +
}+ ,
$str, 7
{7 8
	exception8 A
.A B
ToStringB J
(J K
)K L
}L M
"M N
;N O
} 	
public 
static 
string 
LoggerMessage *
(* +
string+ 1
RepositoryName2 @
,@ A
stringB H

MethodNameI S
,S T
	ExceptionU ^
	exception_ h
,h i
intj m
FirstIdn u
,u v
intw z
?z {
secondId	| Ñ
)
Ñ Ö
{   	
return!! 
secondId!! 
!=!! 
null!! #
?!!$ %
$"!!& (
{!!( )
RepositoryName!!) 7
}!!7 8
$str!!8 9
{!!9 :

MethodName!!: D
}!!D E
$str!!E P
{!!P Q
	exception!!Q Z
.!!Z [
ToString!![ c
(!!c d
)!!d e
}!!e f
$str!!f u
{!!u v
FirstId!!v }
}!!} ~
$str	!!~ Ä
{
!!Ä Å
secondId
!!Å â
}
!!â ä
$str
!!ä ç
"
!!ç é
:
!!è ê
$""" 
{"" 
RepositoryName"" 
}"" 
$str""  
{""  !

MethodName""! +
}""+ ,
$str"", 7
{""7 8
	exception""8 A
.""A B
ToString""B J
(""J K
)""K L
}""L M
$str""M ]
{""] ^
FirstId""^ e
}""e f
$str""f i
"""i j
;""j k
}## 	
public$$ 
static$$ 
string$$ 
LoggerMessage$$ *
($$* +
string$$+ 1
RepositoryName$$2 @
,$$@ A
string$$B H

MethodName$$I S
,$$S T
	Exception$$U ^
	exception$$_ h
,$$h i
string$$j p
data$$q u
)$$u v
{%% 	
return&& 
$"&& 
{&& 
RepositoryName&& $
}&&$ %
$str&&% &
{&&& '

MethodName&&' 1
}&&1 2
$str&&2 =
{&&= >
	exception&&> G
.&&G H
ToString&&H P
(&&P Q
)&&Q R
}&&R S
$str&&S b
{&&b c
data&&c g
}&&g h
$str&&h k
"&&k l
;&&l m
}'' 	
public)) 

static)) 
MailRequest)) 
ArticleMail)) )
())) *
string))* 0
RecieverEmail))1 >
,))> ?
string))? E
ArticleTitle))F R
,))R S
string))S Y
Subject))Z a
,))a b
int))b e
ArticleStatusID))f u
)))u v
{** 
var++ 
mail++ 
=++ 
new++ 
MailRequest++ $
(++$ %
)++% &
;++& '
mail,, 
.,, 
ToEmail,, 
=,, 
RecieverEmail,, &
;,,& '
mail-- 
.-- 
Subject-- 
=-- 
Subject--  
;--  !
switch.. 
(.. 
ArticleStatusID.. "
).." #
{..# $
case// 
$num// 
:// 
mail// 
.// 
Body// !
=//! "
$"//" $
$str//$ W
{//W X
ArticleTitle//X d
}//d e
$str	//e ≥
"
//≥ ¥
;
//¥ µ
return00 
mail00 #
;00# $
case11 
$num11 
:11 
mail11 
.11 
Body11 !
=11! "
$"11" $
$str11$ W
{11W X
ArticleTitle11X d
}11d e
$str	11e ¥
"
11¥ µ
;
11µ ∂
return22 
mail22 #
;22# $
default33 
:33 
return33 
mail33  $
;33$ %
}44 
}55 	
public99 

static99 
MailRequest99 
SpamMail99 &
(99& '
string99' -
RecieverEmail99. ;
,99; <
string99< B

QueryTitle99C M
,99M N
string99N T
Subject99U \
,99\ ]
int99] `
VerifyStatusID99a o
)99o p
{:: 	
var;; 
mail;; 
=;; 
new;; 
MailRequest;; $
(;;$ %
);;% &
;;;& '
mail<< 
.<< 
ToEmail<< 
=<< 
RecieverEmail<< &
;<<& '
mail== 
.== 
Subject== 
=== 
Subject==  
;==  !
switch>> 
(>> 
VerifyStatusID>> !
)>>! "
{>>" #
case?? 
$num?? 
:?? 
mail?? 
.?? 
Body?? !
=??! "
$"??" $
$str??$ Y
{??Y Z

QueryTitle??Z d
}??d e
$str	??e ¨
"
??¨ ≠
;
??≠ Æ
return@@ 
mail@@ #
;@@# $
caseAA 
$numAA 
:AA 
mailAA 
.AA 
BodyAA !
=AA! "
$"AA" $
$strAA$ Y
{AAY Z

QueryTitleAAZ d
}AAd e
$str	AAe Ω
"
AAΩ æ
;
AAæ ø
returnBB 
mailBB #
;BB# $
caseCC 
$numCC 
:CC 
mailCC 
.CC 
BodyCC  
=CC  !
$"CC! #
$strCC# X
{CCX Y

QueryTitleCCY c
}CCc d
$str	CCd ±
"
CC± ≤
;
CC≤ ≥
returnDD 
mailDD "
;DD" #
defaultEE 
:EE 
returnEE 
mailEE  $
;EE$ %
}FF 
}GG 	
publicII 
staticII 
MailRequestII !
	QueryMailII" +
(II+ ,
stringII, 2
RecieverEmailII3 @
,II@ A
stringIIA G

QueryTitleIIH R
,IIR S
stringIIS Y
SubjectIIZ a
)IIa b
{JJ 	
varKK 
mailKK 
=KK 
newKK 
MailRequestKK $
(KK$ %
)KK% &
;KK& '
mailLL 
.LL 
ToEmailLL 
=LL 
RecieverEmailLL &
;LL& '
mailMM 
.MM 
BodyMM 
=MM 
$"MM 
$strMM H
{MMH I

QueryTitleMMI S
}MMS T
$str	MMT î
"
MMî ï
;
MMï ñ
returnNN 
mailNN 
;NN 
}OO 	
publicQQ 
staticQQ 
MailRequestQQ !
CommentMailQQ" -
(QQ- .
stringQQ. 4
RecieverEmailQQ5 B
,QQB C
stringQQC I
TitleQQJ O
,QQO P
stringQQP V
SubjectQQW ^
)QQ^ _
{RR 	
varSS 
mailSS 
=SS 
newSS 
MailRequestSS $
(SS$ %
)SS% &
;SS& '
mailTT 
.TT 
ToEmailTT 
=TT 
RecieverEmailTT &
;TT& '
mailUU 
.UU 
SubjectUU 
=UU 
SubjectUU  
;UU  !
mailVV 
.VV 
BodyVV 
=VV 
$"VV 
$strVV [
{VV[ \
TitleVV\ a
}VVa b
$str	VVb ê
"
VVê ë
;
VVë í
returnWW 
mailWW 
;WW 
}XX 	
}YY 
}ZZ 
GC:\Users\pooja.sakthivel\Desktop\AspireOverflow\Services\MailService.cs
	namespace

 	
AspireOverflow


 
.

 
Services

 !
{

! "
public 

class 
MailService 
: 
IEmailService ,
{ 
private 
readonly 
MailSettings !
_mailSettings" /
;/ 0
public 

MailService 
( 
IOptions 
<  
MailSettings  ,
>, -
mailSettings. :
): ;
{ 
_mailSettings 
= 
mailSettings $
.$ %
Value% *
;* +
} 
public 

async 
Task 
SendEmailAsync $
($ %
MailRequest% 0
mailRequest1 <
)< =
{ 
var 
email 
= 
new 
MimeMessage 
(  
)  !
;! "
email 	
.	 

Sender
 
= 
MailboxAddress !
.! "
Parse" '
(' (
_mailSettings( 5
.5 6
Mail6 :
): ;
;; <
email 	
.	 

To
 
. 
Add 
( 
MailboxAddress 
.  
Parse  %
(% &
mailRequest& 1
.1 2
ToEmail2 9
)9 :
): ;
;; <
email 	
.	 

Subject
 
= 
mailRequest 
.  
Subject  '
;' (
var 
builder 
= 
new 
BodyBuilder !
(! "
)" #
;# $
builder 
. 
TextBody 
= 
mailRequest "
." #
Body# '
;' (
email 	
.	 

Body
 
= 
builder 
. 
ToMessageBody &
(& '
)' (
;( )
using 	
var
 
smtp 
= 
new 

SmtpClient #
(# $
)$ %
;% &
smtp 
. 	
Connect	 
( 
_mailSettings 
. 
Host #
,# $
_mailSettings% 2
.2 3
Port3 7
,7 8
SecureSocketOptions9 L
.L M
StartTlsM U
)U V
;V W
smtp   
.   	
Authenticate  	 
(   
_mailSettings   #
.  # $
Mail  $ (
,  ( )
_mailSettings  * 7
.  7 8
Password  8 @
)  @ A
;  A B
await!! 	
smtp!!
 
.!! 
	SendAsync!! 
(!! 
email!! 
)!! 
;!!  
smtp"" 
."" 	

Disconnect""	 
("" 
true"" 
)"" 
;"" 
}## 
}$$ 
}%% »Ê
HC:\Users\pooja.sakthivel\Desktop\AspireOverflow\Services\QueryService.cs
	namespace 	
AspireOverflow
 
. 
Services !
{ 
public 

class 
QueryService 
: 
IQueryService  -
{ 
private 
readonly 
IQueryRepository )
database* 2
;2 3
private 
readonly 
ILogger  
<  !
QueryService! -
>- .
_logger/ 6
;6 7
private 
readonly 
MailService $
_mailService% 1
;1 2
private 
readonly 
	Stopwatch "

_stopWatch# -
=. /
new0 3
	Stopwatch4 =
(= >
)> ?
;? @
private 
bool 
IsTracingEnabled %
;% &
public 
QueryService 
( 
ILogger #
<# $
QueryService$ 0
>0 1
logger2 8
,8 9
MailService: E
mailServiceF Q
,Q R
IQueryRepositoryS c
_queryRepositoryd t
)t u
{ 	
_logger 
= 
logger 
; 
_mailService 
= 
mailService &
;& '
database 
= 
_queryRepository '
;' (
IsTracingEnabled 
= 
database '
.' (.
"GetIsTraceEnabledFromConfiguration( J
(J K
)K L
;L M
} 	
public 
bool 
CreateQuery 
(  
Query  %
query& +
)+ ,
{   	
if!! 
(!! 
IsTracingEnabled!!  
)!!  !

_stopWatch!!" ,
.!!, -
Start!!- 2
(!!2 3
)!!3 4
;!!4 5

Validation"" 
."" 
ValidateQuery"" $
(""$ %
query""% *
)""* +
;""+ ,
try## 
{$$ 
query%% 
.%% 
	CreatedOn%% 
=%%  !
DateTime%%" *
.%%* +
Now%%+ .
;%%. /
var&& 
IsAddedSuccessfully&& '
=&&( )
database&&* 2
.&&2 3
AddQuery&&3 ;
(&&; <
query&&< A
)&&A B
;&&B C
if'' 
('' 
IsAddedSuccessfully'' '
)''' (
_mailService'') 5
?''5 6
.''6 7
SendEmailAsync''7 E
(''E F
HelperService''F S
.''S T
	QueryMail''T ]
(''] ^
$str''^ x
,''x y
query''z 
.	'' Ä
Title
''Ä Ö
!
''Ö Ü
,
''Ü á
$str
''à §
)
''§ •
)
''• ¶
;
''¶ ß
return(( 
IsAddedSuccessfully(( *
;((* +
})) 
catch** 
(** 
	Exception** 
	exception** &
)**& '
{++ 
_logger,, 
.,, 
LogError,,  
(,,  !
HelperService,,! .
.,,. /
LoggerMessage,,/ <
(,,< =
$str,,= K
,,,K L
$str,,M g
,,,g h
	exception,,i r
,,,r s
query,,t y
),,y z
),,z {
;,,{ |
return-- 
false-- 
;-- 
}.. 
finally// 
{00 
if11 
(11 
IsTracingEnabled11 $
)11$ %
{22 

_stopWatch33 
.33 
Stop33 #
(33# $
)33$ %
;33% &
_logger44 
.44 
LogInformation44 *
(44* +
$"44+ -
$str44- o
{44o p

_stopWatch44p z
.44z { 
ElapsedMilliseconds	44{ é
}
44é è
$str
44è ë
"
44ë í
)
44í ì
;
44ì î
}55 
}66 
}77 	
public;; 
bool;;  
RemoveQueryByQueryId;; (
(;;( )
int;;) ,
QueryId;;- 4
);;4 5
{<< 	
if== 
(== 
IsTracingEnabled==  
)==  !

_stopWatch==" ,
.==, -
Start==- 2
(==2 3
)==3 4
;==4 5
if>> 
(>> 
QueryId>> 
<=>> 
$num>> 
)>> 
throw>> #
new>>$ '
ArgumentException>>( 9
(>>9 :
$">>: <
$str>>< j
{>>j k
QueryId>>k r
}>>r s
">>s t
)>>t u
;>>u v
try?? 
{@@ 
returnAA 
databaseAA 
.AA  
UpdateQueryAA  +
(AA+ ,
QueryIdAA, 3
,AA3 4
IsDeleteAA5 =
:AA= >
trueAA? C
)AAC D
;AAD E
}BB 
catchCC 
(CC 
	ExceptionCC 
	exceptionCC &
)CC& '
{DD 
_loggerEE 
.EE 
LogErrorEE  
(EE  !
HelperServiceEE! .
.EE. /
LoggerMessageEE/ <
(EE< =
$strEE= K
,EEK L
$strEEM p
,EEp q
	exceptionEEr {
,EE{ |
QueryId	EE} Ñ
)
EEÑ Ö
)
EEÖ Ü
;
EEÜ á
returnFF 
falseFF 
;FF 
}GG 
finallyHH 
{II 
ifJJ 
(JJ 
IsTracingEnabledJJ $
)JJ$ %
{KK 

_stopWatchLL 
.LL 
StopLL #
(LL# $
)LL$ %
;LL% &
_loggerMM 
.MM 
LogInformationMM *
(MM* +
$"MM+ -
$strMM- x
{MMx y

_stopWatch	MMy É
.
MMÉ Ñ!
ElapsedMilliseconds
MMÑ ó
}
MMó ò
$str
MMò ö
"
MMö õ
)
MMõ ú
;
MMú ù
}NN 
}OO 
}PP 	
publicTT 
boolTT 
MarkQueryAsSolvedTT %
(TT% &
intTT& )
QueryIdTT* 1
)TT1 2
{UU 	
ifVV 
(VV 
IsTracingEnabledVV  
)VV  !

_stopWatchVV" ,
.VV, -
StartVV- 2
(VV2 3
)VV3 4
;VV4 5
ifWW 
(WW 
QueryIdWW 
<=WW 
$numWW 
)WW 
throwWW #
newWW$ '
ArgumentExceptionWW( 9
(WW9 :
$"WW: <
$strWW< j
{WWj k
QueryIdWWk r
}WWr s
"WWs t
)WWt u
;WWu v
tryXX 
{YY 
returnZZ 
databaseZZ 
.ZZ  
UpdateQueryZZ  +
(ZZ+ ,
QueryIdZZ, 3
,ZZ3 4
IsSolvedZZ5 =
:ZZ= >
trueZZ? C
)ZZC D
;ZZD E
}[[ 
catch\\ 
(\\ 
	Exception\\ 
	exception\\ &
)\\& '
{]] 
_logger^^ 
.^^ 
LogError^^  
(^^  !
HelperService^^! .
.^^. /
LoggerMessage^^/ <
(^^< =
$str^^= K
,^^K L
$str^^M n
,^^n o
	exception^^p y
,^^y z
QueryId	^^{ Ç
)
^^Ç É
)
^^É Ñ
;
^^Ñ Ö
return__ 
false__ 
;__ 
}`` 
finallyaa 
{bb 
ifcc 
(cc 
IsTracingEnabledcc $
)cc$ %
{dd 

_stopWatchee 
.ee 
Stopee #
(ee# $
)ee$ %
;ee% &
_loggerff 
.ff 
LogInformationff *
(ff* +
$"ff+ -
$strff- u
{ffu v

_stopWatch	ffv Ä
.
ffÄ Å!
ElapsedMilliseconds
ffÅ î
}
ffî ï
$str
ffï ó
"
ffó ò
)
ffò ô
;
ffô ö
}gg 
}hh 
}ii 	
publicmm 
Objectmm 
GetQuerymm 
(mm 
intmm "
QueryIDmm# *
)mm* +
{nn 	
ifoo 
(oo 
IsTracingEnabledoo  
)oo  !

_stopWatchoo" ,
.oo, -
Startoo- 2
(oo2 3
)oo3 4
;oo4 5
ifpp 
(pp 
QueryIDpp 
<=pp 
$numpp 
)pp 
throwpp #
newpp$ '
ArgumentExceptionpp( 9
(pp9 :
$"pp: <
$strpp< j
{ppj k
QueryIDppk r
}ppr s
"pps t
)ppt u
;ppu v
tryqq 
{rr 
varss 
Queryss 
=ss 
databasess $
.ss$ %
GetQueryByIDss% 1
(ss1 2
QueryIDss2 9
)ss9 :
;ss: ;
returntt 
newtt 
{uu 
QueryIdvv 
=vv 
Queryvv #
.vv# $
QueryIdvv$ +
,vv+ ,
Titleww 
=ww 
Queryww !
.ww! "
Titleww" '
,ww' (
Contentxx 
=xx 
Queryxx #
.xx# $
Contentxx$ +
,xx+ ,
codeyy 
=yy 
Queryyy  
.yy  !
codeyy! %
,yy% &
Datezz 
=zz 
Queryzz  
.zz  !
	CreatedOnzz! *
,zz* +

RaiserName{{ 
={{  
Query{{! &
.{{& '
User{{' +
?{{+ ,
.{{, -
FullName{{- 5
,{{5 6
IsSolved|| 
=|| 
Query|| $
.||$ %
IsSolved||% -
,||- .
Comments}} 
=}} 
GetComments}} *
(}}* +
QueryID}}+ 2
)}}2 3
}~~ 
;~~ 
} 
catch
ÄÄ 
(
ÄÄ 
	Exception
ÄÄ 
	exception
ÄÄ &
)
ÄÄ& '
{
ÅÅ 
_logger
ÇÇ 
.
ÇÇ 
LogError
ÇÇ  
(
ÇÇ  !
HelperService
ÇÇ! .
.
ÇÇ. /
LoggerMessage
ÇÇ/ <
(
ÇÇ< =
$str
ÇÇ= K
,
ÇÇK L
$str
ÇÇM d
,
ÇÇd e
	exception
ÇÇf o
,
ÇÇo p
QueryID
ÇÇq x
)
ÇÇx y
)
ÇÇy z
;
ÇÇz {
throw
ÉÉ 
;
ÉÉ 
}
ÑÑ 
finally
ÖÖ 
{
ÜÜ 
if
áá 
(
áá 
IsTracingEnabled
áá $
)
áá$ %
{
àà 

_stopWatch
ââ 
.
ââ 
Stop
ââ #
(
ââ# $
)
ââ$ %
;
ââ% &
_logger
ää 
.
ää 
LogInformation
ää *
(
ää* +
$"
ää+ -
$str
ää- k
{
ääk l

_stopWatch
ääl v
.
ääv w"
ElapsedMillisecondsääw ä
}äää ã
$strääã ç
"ääç é
)ääé è
;ääè ê
}
ãã 
}
åå 
}
çç 	
public
ëë 
IEnumerable
ëë 
<
ëë 
Object
ëë !
>
ëë! "
GetListOfQueries
ëë# 3
(
ëë3 4
)
ëë4 5
{
íí 	
if
ìì 
(
ìì 
IsTracingEnabled
ìì  
)
ìì  !

_stopWatch
ìì" ,
.
ìì, -
Start
ìì- 2
(
ìì2 3
)
ìì3 4
;
ìì4 5
try
îî 
{
ïï 
var
ññ 
ListOfQueries
ññ !
=
ññ" #
database
ññ$ ,
.
ññ, -

GetQueries
ññ- 7
(
ññ7 8
)
ññ8 9
;
ññ9 :
return
óó 
ListOfQueries
óó $
.
óó$ %
Select
óó% +
(
óó+ ,
query
óó, 1
=>
óó2 4%
GetAnonymousQueryObject
óó5 L
(
óóL M
query
óóM R
)
óóR S
)
óóS T
;
óóT U
}
òò 
catch
ôô 
(
ôô 
	Exception
ôô 
	exception
ôô &
)
ôô& '
{
öö 
_logger
õõ 
.
õõ 
LogError
õõ  
(
õõ  !
HelperService
õõ! .
.
õõ. /
LoggerMessage
õõ/ <
(
õõ< =
$str
õõ= K
,
õõK L
$str
õõM [
,
õõ[ \
	exception
õõ] f
)
õõf g
)
õõg h
;
õõh i
throw
úú 
;
úú 
}
ùù 
finally
ûû 
{
üü 
if
†† 
(
†† 
IsTracingEnabled
†† $
)
††$ %
{
°° 

_stopWatch
¢¢ 
.
¢¢ 
Stop
¢¢ #
(
¢¢# $
)
¢¢$ %
;
¢¢% &
_logger
££ 
.
££ 
LogInformation
££ *
(
££* +
$"
££+ -
$str
££- i
{
££i j

_stopWatch
££j t
.
££t u"
ElapsedMilliseconds££u à
}££à â
$str££â ã
"££ã å
)££å ç
;££ç é
}
§§ 
}
•• 
}
¶¶ 	
public
™™ 
IEnumerable
™™ 
<
™™ 
Object
™™ !
>
™™! "
GetLatestQueries
™™# 3
(
™™3 4
int
™™4 7
Range
™™8 =
=
™™> ?
$num
™™@ A
)
™™A B
{
´´ 	
if
¨¨ 
(
¨¨ 
IsTracingEnabled
¨¨  
)
¨¨  !

_stopWatch
¨¨" ,
.
¨¨, -
Start
¨¨- 2
(
¨¨2 3
)
¨¨3 4
;
¨¨4 5
try
≠≠ 
{
ÆÆ 
var
∞∞ 
ListOfQueries
∞∞ !
=
∞∞" #
database
∞∞$ ,
.
∞∞, -

GetQueries
∞∞- 7
(
∞∞7 8
)
∞∞8 9
.
∞∞9 :
OrderByDescending
∞∞: K
(
∞∞K L
query
∞∞L Q
=>
∞∞R T
query
∞∞U Z
.
∞∞Z [
	CreatedOn
∞∞[ d
)
∞∞d e
.
∞∞e f
ToList
∞∞f l
(
∞∞l m
)
∞∞m n
;
∞∞n o
if
±± 
(
±± 
ListOfQueries
±± !
.
±±! "
Count
±±" '
>=
±±( *
Range
±±+ 0
&&
±±1 3
Range
±±4 9
!=
±±: <
$num
±±= >
)
±±> ?
ListOfQueries
±±@ M
=
±±N O
ListOfQueries
±±P ]
.
±±] ^
GetRange
±±^ f
(
±±f g
$num
±±g h
,
±±h i
Range
±±j o
)
±±o p
;
±±p q
return
≤≤ 
ListOfQueries
≤≤ $
.
≤≤$ %
Select
≤≤% +
(
≤≤+ ,
Query
≤≤, 1
=>
≤≤2 4%
GetAnonymousQueryObject
≤≤5 L
(
≤≤L M
Query
≤≤M R
)
≤≤R S
)
≤≤S T
;
≤≤T U
}
≥≥ 
catch
¥¥ 
(
¥¥ 
	Exception
¥¥ 
	exception
¥¥ &
)
¥¥& '
{
µµ 
_logger
∂∂ 
.
∂∂ 
LogError
∂∂  
(
∂∂  !
HelperService
∂∂! .
.
∂∂. /
LoggerMessage
∂∂/ <
(
∂∂< =
$str
∂∂= K
,
∂∂K L
$str
∂∂M a
,
∂∂a b
	exception
∂∂c l
)
∂∂l m
)
∂∂m n
;
∂∂n o
throw
∑∑ 
;
∑∑ 
}
∏∏ 
finally
ππ 
{
∫∫ 
if
ªª 
(
ªª 
IsTracingEnabled
ªª $
)
ªª$ %
{
ºº 

_stopWatch
ΩΩ 
.
ΩΩ 
Stop
ΩΩ #
(
ΩΩ# $
)
ΩΩ$ %
;
ΩΩ% &
_logger
ææ 
.
ææ 
LogInformation
ææ *
(
ææ* +
$"
ææ+ -
$str
ææ- r
{
æær s

_stopWatch
ææs }
.
ææ} ~"
ElapsedMillisecondsææ~ ë
}ææë í
$strææí î
"ææî ï
)ææï ñ
;ææñ ó
}
øø 
}
¿¿ 
}
¡¡ 	
public
≈≈ 
IEnumerable
≈≈ 
<
≈≈ 
Object
≈≈ !
>
≈≈! " 
GetTrendingQueries
≈≈# 5
(
≈≈5 6
int
≈≈6 9
Range
≈≈: ?
=
≈≈@ A
$num
≈≈B C
)
≈≈C D
{
∆∆ 	
if
«« 
(
«« 
IsTracingEnabled
««  
)
««  !

_stopWatch
««" ,
.
««, -
Start
««- 2
(
««2 3
)
««3 4
;
««4 5
try
»» 
{
…… 
var
ÀÀ 
ListOfComments
ÀÀ "
=
ÀÀ# $
(
ÀÀ% &
database
ÀÀ& .
.
ÀÀ. /
GetComments
ÀÀ/ :
(
ÀÀ: ;
)
ÀÀ; <
.
ÀÀ< =
GroupBy
ÀÀ= D
(
ÀÀD E
item
ÀÀE I
=>
ÀÀJ L
item
ÀÀM Q
.
ÀÀQ R
QueryId
ÀÀR Y
)
ÀÀY Z
)
ÀÀZ [
.
ÀÀ[ \
OrderByDescending
ÀÀ\ m
(
ÀÀm n
item
ÀÀn r
=>
ÀÀs u
item
ÀÀv z
.
ÀÀz {
CountÀÀ{ Ä
(ÀÀÄ Å
)ÀÀÅ Ç
)ÀÀÇ É
;ÀÀÉ Ñ
var
ÃÃ 
ListOfQueryId
ÃÃ !
=
ÃÃ" #
(
ÃÃ$ %
from
ÃÃ% )
queryComment
ÃÃ* 6
in
ÃÃ7 9
ListOfComments
ÃÃ: H
select
ÃÃI O
queryComment
ÃÃP \
.
ÃÃ\ ]
First
ÃÃ] b
(
ÃÃb c
)
ÃÃc d
.
ÃÃd e
QueryId
ÃÃe l
)
ÃÃl m
.
ÃÃm n
ToList
ÃÃn t
(
ÃÃt u
)
ÃÃu v
;
ÃÃv w
var
ÕÕ 
ListOfQueries
ÕÕ !
=
ÕÕ" #
database
ÕÕ$ ,
.
ÕÕ, -"
GetQueriesByIsSolved
ÕÕ- A
(
ÕÕA B
false
ÕÕB G
)
ÕÕG H
.
ÕÕH I
ToList
ÕÕI O
(
ÕÕO P
)
ÕÕP Q
;
ÕÕQ R
if
œœ 
(
œœ 
ListOfQueryId
œœ !
.
œœ! "
Count
œœ" '
>=
œœ( *
Range
œœ+ 0
&&
œœ1 3
Range
œœ4 9
!=
œœ: <
$num
œœ= >
)
œœ> ?
ListOfQueryId
œœ@ M
=
œœN O
ListOfQueryId
œœP ]
.
œœ] ^
GetRange
œœ^ f
(
œœf g
$num
œœg h
,
œœh i
Range
œœj o
)
œœo p
;
œœp q
List
–– 
<
–– 
Query
–– 
>
–– 
TrendingQueries
–– +
=
––, -
new
––. 1
List
––2 6
<
––6 7
Query
––7 <
>
––< =
(
––= >
)
––> ?
;
––? @
foreach
—— 
(
—— 
var
—— 
Id
—— 
in
——  "
ListOfQueryId
——# 0
)
——0 1
{
““ 
var
”” 
Query
”” 
=
”” 
ListOfQueries
””  -
.
””- .
Find
””. 2
(
””2 3
item
””3 7
=>
””8 :
item
””; ?
.
””? @
QueryId
””@ G
==
””H J
Id
””K M
)
””M N
;
””N O
if
‘‘ 
(
‘‘ 
Query
‘‘ 
!=
‘‘  
null
‘‘! %
)
‘‘% &
TrendingQueries
‘‘' 6
.
‘‘6 7
Add
‘‘7 :
(
‘‘: ;
Query
‘‘; @
)
‘‘@ A
;
‘‘A B
}
’’ 
return
÷÷ 
(
÷÷ 
from
÷÷ 
Query
÷÷ "
in
÷÷# %
TrendingQueries
÷÷& 5
select
÷÷6 <
Query
÷÷= B
)
÷÷B C
.
÷÷C D
Select
÷÷D J
(
÷÷J K
Query
÷÷K P
=>
÷÷Q S%
GetAnonymousQueryObject
÷÷T k
(
÷÷k l
Query
÷÷l q
)
÷÷q r
)
÷÷r s
;
÷÷s t
}
◊◊ 
catch
ÿÿ 
(
ÿÿ 
	Exception
ÿÿ 
	exception
ÿÿ &
)
ÿÿ& '
{
ŸŸ 
_logger
⁄⁄ 
.
⁄⁄ 
LogError
⁄⁄  
(
⁄⁄  !
HelperService
⁄⁄! .
.
⁄⁄. /
LoggerMessage
⁄⁄/ <
(
⁄⁄< =
$str
⁄⁄= K
,
⁄⁄K L
$str
⁄⁄M c
,
⁄⁄c d
	exception
⁄⁄e n
)
⁄⁄n o
)
⁄⁄o p
;
⁄⁄p q
throw
€€ 
;
€€ 
}
‹‹ 
finally
›› 
{
ﬁﬁ 
if
ﬂﬂ 
(
ﬂﬂ 
IsTracingEnabled
ﬂﬂ $
)
ﬂﬂ$ %
{
‡‡ 

_stopWatch
·· 
.
·· 
Stop
·· #
(
··# $
)
··$ %
;
··% &
_logger
‚‚ 
.
‚‚ 
LogInformation
‚‚ *
(
‚‚* +
$"
‚‚+ -
$str
‚‚- t
{
‚‚t u

_stopWatch
‚‚u 
.‚‚ Ä#
ElapsedMilliseconds‚‚Ä ì
}‚‚ì î
$str‚‚î ñ
"‚‚ñ ó
)‚‚ó ò
;‚‚ò ô
}
„„ 
}
‰‰ 
}
ÂÂ 	
public
ÈÈ 
IEnumerable
ÈÈ 
<
ÈÈ 
Object
ÈÈ !
>
ÈÈ! " 
GetQueriesByUserId
ÈÈ# 5
(
ÈÈ5 6
int
ÈÈ6 9
UserId
ÈÈ: @
)
ÈÈ@ A
{
ÍÍ 	
if
ÎÎ 
(
ÎÎ 
IsTracingEnabled
ÎÎ  
)
ÎÎ  !

_stopWatch
ÎÎ" ,
.
ÎÎ, -
Start
ÎÎ- 2
(
ÎÎ2 3
)
ÎÎ3 4
;
ÎÎ4 5
if
ÏÏ 
(
ÏÏ 
UserId
ÏÏ 
<=
ÏÏ 
$num
ÏÏ 
)
ÏÏ 
throw
ÏÏ "
new
ÏÏ# &
ArgumentException
ÏÏ' 8
(
ÏÏ8 9
$"
ÏÏ9 ;
$str
ÏÏ; g
{
ÏÏg h
UserId
ÏÏh n
}
ÏÏn o
"
ÏÏo p
)
ÏÏp q
;
ÏÏq r
try
ÌÌ 
{
ÓÓ 
var
ÔÔ 
ListOfQueries
ÔÔ !
=
ÔÔ" #
database
ÔÔ$ ,
.
ÔÔ, - 
GetQueriesByUserId
ÔÔ- ?
(
ÔÔ? @
UserId
ÔÔ@ F
)
ÔÔF G
;
ÔÔG H
return
 
ListOfQueries
 $
.
$ %
Select
% +
(
+ ,
Query
, 1
=>
2 4%
GetAnonymousQueryObject
5 L
(
L M
Query
M R
)
R S
)
S T
;
T U
}
ÒÒ 
catch
ÚÚ 
(
ÚÚ 
	Exception
ÚÚ 
	exception
ÚÚ &
)
ÚÚ& '
{
ÛÛ 
_logger
ÙÙ 
.
ÙÙ 
LogError
ÙÙ  
(
ÙÙ  !
HelperService
ÙÙ! .
.
ÙÙ. /
LoggerMessage
ÙÙ/ <
(
ÙÙ< =
$str
ÙÙ= K
,
ÙÙK L
$str
ÙÙM m
,
ÙÙm n
	exception
ÙÙo x
,
ÙÙx y
UserIdÙÙz Ä
)ÙÙÄ Å
)ÙÙÅ Ç
;ÙÙÇ É
throw
ıı 
;
ıı 
}
ˆˆ 
finally
˜˜ 
{
¯¯ 
if
˘˘ 
(
˘˘ 
IsTracingEnabled
˘˘ $
)
˘˘$ %
{
˙˙ 

_stopWatch
˚˚ 
.
˚˚ 
Stop
˚˚ #
(
˚˚# $
)
˚˚$ %
;
˚˚% &
_logger
¸¸ 
.
¸¸ 
LogInformation
¸¸ *
(
¸¸* +
$"
¸¸+ -
$str
¸¸- u
{
¸¸u v

_stopWatch¸¸v Ä
.¸¸Ä Å#
ElapsedMilliseconds¸¸Å î
}¸¸î ï
$str¸¸ï ó
"¸¸ó ò
)¸¸ò ô
;¸¸ô ö
}
˝˝ 
}
˛˛ 
}
ˇˇ 	
public
ÉÉ 
IEnumerable
ÉÉ 
<
ÉÉ 
Object
ÉÉ !
>
ÉÉ! "
GetQueriesByTitle
ÉÉ# 4
(
ÉÉ4 5
String
ÉÉ5 ;
Title
ÉÉ< A
)
ÉÉA B
{
ÑÑ 	
if
ÖÖ 
(
ÖÖ 
IsTracingEnabled
ÖÖ  
)
ÖÖ  !

_stopWatch
ÖÖ" ,
.
ÖÖ, -
Start
ÖÖ- 2
(
ÖÖ2 3
)
ÖÖ3 4
;
ÖÖ4 5
if
ÜÜ 
(
ÜÜ 
String
ÜÜ 
.
ÜÜ 
IsNullOrEmpty
ÜÜ $
(
ÜÜ$ %
Title
ÜÜ% *
)
ÜÜ* +
)
ÜÜ+ ,
throw
ÜÜ- 2
new
ÜÜ3 6
ArgumentException
ÜÜ7 H
(
ÜÜH I
$str
ÜÜI e
)
ÜÜe f
;
ÜÜf g
try
áá 
{
àà 
var
ââ 
ListOfQueries
ââ !
=
ââ" #
database
ââ$ ,
.
ââ, -
GetQueriesByTitle
ââ- >
(
ââ> ?
Title
ââ? D
)
ââD E
;
ââE F
return
ää 
ListOfQueries
ää $
.
ää$ %
Select
ää% +
(
ää+ ,
Query
ää, 1
=>
ää2 4%
GetAnonymousQueryObject
ää5 L
(
ääL M
Query
ääM R
)
ääR S
)
ääS T
;
ääT U
}
ãã 
catch
åå 
(
åå 
	Exception
åå 
	exception
åå &
)
åå& '
{
çç 
_logger
éé 
.
éé 
LogError
éé  
(
éé  !
HelperService
éé! .
.
éé. /
LoggerMessage
éé/ <
(
éé< =
$str
éé= K
,
ééK L
$str
ééM n
,
één o
	exception
éép y
,
ééy z
Titleéé{ Ä
)ééÄ Å
)ééÅ Ç
;ééÇ É
throw
èè 
;
èè 
}
êê 
finally
ëë 
{
íí 
if
ìì 
(
ìì 
IsTracingEnabled
ìì $
)
ìì$ %
{
îî 

_stopWatch
ïï 
.
ïï 
Stop
ïï #
(
ïï# $
)
ïï$ %
;
ïï% &
_logger
ññ 
.
ññ 
LogInformation
ññ *
(
ññ* +
$"
ññ+ -
$str
ññ- v
{
ññv w

_stopWatchññw Å
.ññÅ Ç#
ElapsedMillisecondsññÇ ï
}ññï ñ
$strñññ ò
"ññò ô
)ññô ö
;ññö õ
}
óó 
}
òò 
}
ôô 	
public
ùù 
IEnumerable
ùù 
<
ùù 
Object
ùù !
>
ùù! ""
GetQueriesByIsSolved
ùù# 7
(
ùù7 8
bool
ùù8 <
IsSolved
ùù= E
)
ùùE F
{
ûû 	
if
üü 
(
üü 
IsTracingEnabled
üü  
)
üü  !

_stopWatch
üü" ,
.
üü, -
Start
üü- 2
(
üü2 3
)
üü3 4
;
üü4 5
try
†† 
{
°° 
var
¢¢ 
ListOfQueries
¢¢ !
=
¢¢" #
database
¢¢$ ,
.
¢¢, -"
GetQueriesByIsSolved
¢¢- A
(
¢¢A B
IsSolved
¢¢B J
)
¢¢J K
;
¢¢K L
return
££ 
ListOfQueries
££ $
.
££$ %
Select
££% +
(
££+ ,
Query
££, 1
=>
££2 4%
GetAnonymousQueryObject
££5 L
(
££L M
Query
££M R
)
££R S
)
££S T
;
££T U
}
§§ 
catch
•• 
(
•• 
	Exception
•• 
	exception
•• &
)
••& '
{
¶¶ 
_logger
ßß 
.
ßß 
LogError
ßß  
(
ßß  !
HelperService
ßß! .
.
ßß. /
LoggerMessage
ßß/ <
(
ßß< =
$str
ßß= K
,
ßßK L
$str
ßßM r
,
ßßr s
	exception
ßßt }
,
ßß} ~
IsSolvedßß á
)ßßá à
)ßßà â
;ßßâ ä
throw
®® 
;
®® 
}
©© 
finally
™™ 
{
´´ 
if
¨¨ 
(
¨¨ 
IsTracingEnabled
¨¨ $
)
¨¨$ %
{
≠≠ 

_stopWatch
ÆÆ 
.
ÆÆ 
Stop
ÆÆ #
(
ÆÆ# $
)
ÆÆ$ %
;
ÆÆ% &
_logger
ØØ 
.
ØØ 
LogInformation
ØØ *
(
ØØ* +
$"
ØØ+ -
$str
ØØ- z
{
ØØz {

_stopWatchØØ{ Ö
.ØØÖ Ü#
ElapsedMillisecondsØØÜ ô
}ØØô ö
$strØØö ú
"ØØú ù
)ØØù û
;ØØû ü
}
∞∞ 
}
±± 
}
≤≤ 	
public
µµ 
object
µµ 
GetCountOfQueries
µµ '
(
µµ' (
)
µµ( )
{
∂∂ 	
if
∑∑ 
(
∑∑ 
IsTracingEnabled
∑∑  
)
∑∑  !

_stopWatch
∑∑" ,
.
∑∑, -
Start
∑∑- 2
(
∑∑2 3
)
∑∑3 4
;
∑∑4 5
try
∏∏ 
{
ππ 
return
∫∫ 
database
∫∫ 
.
∫∫  
GetCountOfQueries
∫∫  1
(
∫∫1 2
)
∫∫2 3
;
∫∫3 4
}
ªª 
catch
ºº 
(
ºº 
	Exception
ºº 
	exception
ºº &
)
ºº& '
{
ΩΩ 
_logger
ææ 
.
ææ 
LogError
ææ  
(
ææ  !
HelperService
ææ! .
.
ææ. /
LoggerMessage
ææ/ <
(
ææ< =
$str
ææ= K
,
ææK L
$str
ææM b
,
ææb c
	exception
ææd m
)
ææm n
)
ææn o
;
ææo p
throw
øø 
;
øø 
}
¿¿ 
finally
¡¡ 
{
¬¬ 
if
√√ 
(
√√ 
IsTracingEnabled
√√ $
)
√√$ %
{
ƒƒ 

_stopWatch
≈≈ 
.
≈≈ 
Stop
≈≈ #
(
≈≈# $
)
≈≈$ %
;
≈≈% &
_logger
∆∆ 
.
∆∆ 
LogInformation
∆∆ *
(
∆∆* +
$"
∆∆+ -
$str
∆∆- j
{
∆∆j k

_stopWatch
∆∆k u
.
∆∆u v"
ElapsedMilliseconds∆∆v â
}∆∆â ä
$str∆∆ä å
"∆∆å ç
)∆∆ç é
;∆∆é è
}
«« 
}
»» 
}
…… 	
public
ÃÃ 
bool
ÃÃ 
CreateComment
ÃÃ !
(
ÃÃ! "
QueryComment
ÃÃ" .
comment
ÃÃ/ 6
)
ÃÃ6 7
{
ÕÕ 	
if
ŒŒ 
(
ŒŒ 
IsTracingEnabled
ŒŒ  
)
ŒŒ  !

_stopWatch
ŒŒ" ,
.
ŒŒ, -
Start
ŒŒ- 2
(
ŒŒ2 3
)
ŒŒ3 4
;
ŒŒ4 5

Validation
œœ 
.
œœ 
ValidateComment
œœ &
(
œœ& '
comment
œœ' .
)
œœ. /
;
œœ/ 0
try
–– 
{
—— 
comment
““ 
.
““ 
	CreatedOn
““ !
=
““" #
DateTime
““$ ,
.
““, -
Now
““- 0
;
““0 1
comment
”” 
.
”” 
	UpdatedBy
”” !
=
””" #
null
””$ (
;
””( )
return
‘‘ 
database
‘‘ 
.
‘‘  

AddComment
‘‘  *
(
‘‘* +
comment
‘‘+ 2
)
‘‘2 3
;
‘‘3 4
}
’’ 
catch
÷÷ 
(
÷÷ 
	Exception
÷÷ 
	exception
÷÷ &
)
÷÷& '
{
◊◊ 
_logger
ÿÿ 
.
ÿÿ 
LogError
ÿÿ  
(
ÿÿ  !
HelperService
ÿÿ! .
.
ÿÿ. /
LoggerMessage
ÿÿ/ <
(
ÿÿ< =
$str
ÿÿ= K
,
ÿÿK L
$str
ÿÿM r
,
ÿÿr s
	exception
ÿÿt }
,
ÿÿ} ~
commentÿÿ Ü
)ÿÿÜ á
)ÿÿá à
;ÿÿà â
return
ŸŸ 
false
ŸŸ 
;
ŸŸ 
}
⁄⁄ 
finally
€€ 
{
‹‹ 
if
›› 
(
›› 
IsTracingEnabled
›› $
)
››$ %
{
ﬁﬁ 

_stopWatch
ﬂﬂ 
.
ﬂﬂ 
Stop
ﬂﬂ #
(
ﬂﬂ# $
)
ﬂﬂ$ %
;
ﬂﬂ% &
_logger
‡‡ 
.
‡‡ 
LogInformation
‡‡ *
(
‡‡* +
$"
‡‡+ -
$str
‡‡- z
{
‡‡z {

_stopWatch‡‡{ Ö
.‡‡Ö Ü#
ElapsedMilliseconds‡‡Ü ô
}‡‡ô ö
$str‡‡ö ú
"‡‡ú ù
)‡‡ù û
;‡‡û ü
}
·· 
}
‚‚ 
}
„„ 	
public
ÁÁ 
IEnumerable
ÁÁ 
<
ÁÁ 
Object
ÁÁ !
>
ÁÁ! "
GetComments
ÁÁ# .
(
ÁÁ. /
int
ÁÁ/ 2
QueryId
ÁÁ3 :
)
ÁÁ: ;
{
ËË 	
if
ÈÈ 
(
ÈÈ 
IsTracingEnabled
ÈÈ  
)
ÈÈ  !

_stopWatch
ÈÈ" ,
.
ÈÈ, -
Start
ÈÈ- 2
(
ÈÈ2 3
)
ÈÈ3 4
;
ÈÈ4 5
if
ÍÍ 
(
ÍÍ 
QueryId
ÍÍ 
<=
ÍÍ 
$num
ÍÍ 
)
ÍÍ 
throw
ÍÍ #
new
ÍÍ$ '
ArgumentException
ÍÍ( 9
(
ÍÍ9 :
$"
ÍÍ: <
$str
ÍÍ< j
{
ÍÍj k
QueryId
ÍÍk r
}
ÍÍr s
"
ÍÍs t
)
ÍÍt u
;
ÍÍu v
try
ÎÎ 
{
ÏÏ 
var
ÌÌ 
ListOfComments
ÌÌ "
=
ÌÌ# $
database
ÌÌ% -
.
ÌÌ- .
GetComments
ÌÌ. 9
(
ÌÌ9 :
)
ÌÌ: ;
.
ÌÌ; <
Where
ÌÌ< A
(
ÌÌA B
comment
ÌÌB I
=>
ÌÌJ L
comment
ÌÌM T
.
ÌÌT U
QueryId
ÌÌU \
==
ÌÌ] _
QueryId
ÌÌ` g
)
ÌÌg h
;
ÌÌh i
return
ÓÓ 
ListOfComments
ÓÓ %
.
ÓÓ% &
Select
ÓÓ& ,
(
ÓÓ, -
item
ÓÓ- 1
=>
ÓÓ2 4
new
ÓÓ5 8
{
ÔÔ 
	CommentId
 
=
 
item
  $
.
$ %
QueryCommentId
% 3
,
3 4
Message
ÒÒ 
=
ÒÒ 
item
ÒÒ "
.
ÒÒ" #
Comment
ÒÒ# *
,
ÒÒ* +
Name
ÚÚ 
=
ÚÚ 
item
ÚÚ 
.
ÚÚ  
User
ÚÚ  $
?
ÚÚ$ %
.
ÚÚ% &
FullName
ÚÚ& .
,
ÚÚ. /
QueryId
ÛÛ 
=
ÛÛ 
item
ÛÛ "
.
ÛÛ" #
QueryId
ÛÛ# *
,
ÛÛ* +
DateTime
ÙÙ 
=
ÙÙ 
item
ÙÙ #
.
ÙÙ# $
	CreatedOn
ÙÙ$ -
}
ıı 
)
ıı 
;
ıı 
}
ˆˆ 
catch
˜˜ 
(
˜˜ 
	Exception
˜˜ 
	exception
˜˜ &
)
˜˜& '
{
¯¯ 
_logger
˘˘ 
.
˘˘ 
LogError
˘˘  
(
˘˘  !
HelperService
˘˘! .
.
˘˘. /
LoggerMessage
˘˘/ <
(
˘˘< =
$str
˘˘= K
,
˘˘K L
$str
˘˘M g
,
˘˘g h
	exception
˘˘i r
,
˘˘r s
QueryId
˘˘t {
)
˘˘{ |
)
˘˘| }
;
˘˘} ~
throw
˙˙ 
;
˙˙ 
}
˚˚ 
finally
¸¸ 
{
˝˝ 
if
˛˛ 
(
˛˛ 
IsTracingEnabled
˛˛ $
)
˛˛$ %
{
ˇˇ 

_stopWatch
ÄÄ 
.
ÄÄ 
Stop
ÄÄ #
(
ÄÄ# $
)
ÄÄ$ %
;
ÄÄ% &
_logger
ÅÅ 
.
ÅÅ 
LogInformation
ÅÅ *
(
ÅÅ* +
$"
ÅÅ+ -
$str
ÅÅ- o
{
ÅÅo p

_stopWatch
ÅÅp z
.
ÅÅz {"
ElapsedMillisecondsÅÅ{ é
}ÅÅé è
$strÅÅè ë
"ÅÅë í
)ÅÅí ì
;ÅÅì î
}
ÇÇ 
}
ÉÉ 
}
ÑÑ 	
public
àà 
bool
àà 
ChangeSpamStatus
àà $
(
àà$ %
int
àà% (
QueryId
àà) 0
,
àà0 1
int
àà2 5
VerifyStatusID
àà6 D
,
ààD E
int
ààF I
UpdatedByUserId
ààJ Y
)
ààY Z
{
ââ 	
if
ää 
(
ää 
IsTracingEnabled
ää  
)
ää  !

_stopWatch
ää" ,
.
ää, -
Start
ää- 2
(
ää2 3
)
ää3 4
;
ää4 5
if
ãã 
(
ãã 
QueryId
ãã 
<=
ãã 
$num
ãã 
)
ãã 
throw
ãã #
new
ãã$ '
ArgumentException
ãã( 9
(
ãã9 :
$"
ãã: <
$str
ãã< k
{
ããk l
QueryId
ããl s
}
ããs t
"
ããt u
)
ããu v
;
ããv w
if
çç 
(
çç 
VerifyStatusID
çç 
<=
çç !
$num
çç" #
||
çç$ &
VerifyStatusID
çç' 5
>
çç6 7
$num
çç8 9
)
çç9 :
throw
çç; @
new
ççA D
ArgumentException
ççE V
(
ççV W
$"
ççW Y
$strççY •
{çç• ¶
VerifyStatusIDçç¶ ¥
}çç¥ µ
"ççµ ∂
)çç∂ ∑
;çç∑ ∏
try
éé 
{
èè 
var
êê "
IsChangeSuccessfully
êê (
=
êê) *
database
êê+ 3
.
êê3 4

UpdateSpam
êê4 >
(
êê> ?
QueryId
êê? F
,
êêF G
VerifyStatusID
êêH V
,
êêV W
UpdatedByUserId
êêX g
)
êêg h
;
êêh i
if
ëë 
(
ëë "
IsChangeSuccessfully
ëë (
)
ëë( )
_mailService
ëë* 6
?
ëë6 7
.
ëë7 8
SendEmailAsync
ëë8 F
(
ëëF G
HelperService
ëëG T
.
ëëT U
SpamMail
ëëU ]
(
ëë] ^
$str
ëë^ x
,
ëëx y
$strëëz Å
,ëëÅ Ç
$strëëÉ ä
,ëëä ã
$numëëå ç
)ëëç é
)ëëé è
;ëëè ê
return
íí "
IsChangeSuccessfully
íí +
;
íí+ ,
}
ìì 
catch
îî 
(
îî 
	Exception
îî 
	exception
îî &
)
îî& '
{
ïï 
_logger
ññ 
.
ññ 
LogError
ññ  
(
ññ  !
HelperService
ññ! .
.
ññ. /
LoggerMessage
ññ/ <
(
ññ< =
$"
ññ= ?
$str
ññ? K
"
ññK L
,
ññL M
$strññN Å
,ññÅ Ç
	exceptionññÉ å
,ññå ç
QueryIdññé ï
,ññï ñ
VerifyStatusIDññó •
)ññ• ¶
)ññ¶ ß
;ññß ®
throw
óó 
;
óó 
}
òò 
finally
ôô 
{
öö 
if
õõ 
(
õõ 
IsTracingEnabled
õõ $
)
õõ$ %
{
úú 

_stopWatch
ùù 
.
ùù 
Stop
ùù #
(
ùù# $
)
ùù$ %
;
ùù% &
_logger
ûû 
.
ûû 
LogInformation
ûû *
(
ûû* +
$"
ûû+ -
$strûû- à
{ûûà â

_stopWatchûûâ ì
.ûûì î#
ElapsedMillisecondsûûî ß
}ûûß ®
$strûû® ™
"ûû™ ´
)ûû´ ¨
;ûû¨ ≠
}
üü 
}
†† 
}
°° 	
public
•• 
bool
•• 
AddSpam
•• 
(
•• 
Spam
••  
spam
••! %
)
••% &
{
¶¶ 	
if
ßß 
(
ßß 
IsTracingEnabled
ßß  
)
ßß  !

_stopWatch
ßß" ,
.
ßß, -
Start
ßß- 2
(
ßß2 3
)
ßß3 4
;
ßß4 5

Validation
®® 
.
®® 
ValidateSpam
®® #
(
®®# $
spam
®®$ (
)
®®( )
;
®®) *
try
©© 
{
™™ 
spam
´´ 
.
´´ 
	CreatedBy
´´ 
=
´´  
spam
´´! %
.
´´% &
UserId
´´& ,
;
´´, -
spam
¨¨ 
.
¨¨ 
	CreatedOn
¨¨ 
=
¨¨  
DateTime
¨¨! )
.
¨¨) *
Now
¨¨* -
;
¨¨- .
spam
≠≠ 
.
≠≠ 
	UpdatedBy
≠≠ 
=
≠≠  
null
≠≠! %
;
≠≠% &
return
ÆÆ 
database
ÆÆ 
.
ÆÆ  
AddSpam
ÆÆ  '
(
ÆÆ' (
spam
ÆÆ( ,
)
ÆÆ, -
;
ÆÆ- .
}
ØØ 
catch
∞∞ 
(
∞∞ 
	Exception
∞∞ 
	exception
∞∞ &
)
∞∞& '
{
±± 
_logger
≤≤ 
.
≤≤ 
LogError
≤≤  
(
≤≤  !
HelperService
≤≤! .
.
≤≤. /
LoggerMessage
≤≤/ <
(
≤≤< =
$str
≤≤= K
,
≤≤K L
$str
≤≤M a
,
≤≤a b
	exception
≤≤c l
,
≤≤l m
spam
≤≤n r
)
≤≤r s
)
≤≤s t
;
≤≤t u
return
≥≥ 
false
≥≥ 
;
≥≥ 
}
¥¥ 
finally
µµ 
{
∂∂ 
if
∑∑ 
(
∑∑ 
IsTracingEnabled
∑∑ $
)
∑∑$ %
{
∏∏ 

_stopWatch
ππ 
.
ππ 
Stop
ππ #
(
ππ# $
)
ππ$ %
;
ππ% &
_logger
∫∫ 
.
∫∫ 
LogInformation
∫∫ *
(
∫∫* +
$"
∫∫+ -
$str
∫∫- i
{
∫∫i j

_stopWatch
∫∫j t
.
∫∫t u"
ElapsedMilliseconds∫∫u à
}∫∫à â
$str∫∫â ã
"∫∫ã å
)∫∫å ç
;∫∫ç é
}
ªª 
}
ºº 
}
ΩΩ 	
public
¡¡ 
IEnumerable
¡¡ 
<
¡¡ 
object
¡¡ !
>
¡¡! "
GetSpams
¡¡# +
(
¡¡+ ,
int
¡¡, /
VerifyStatusID
¡¡0 >
)
¡¡> ?
{
¬¬ 	
if
√√ 
(
√√ 
IsTracingEnabled
√√  
)
√√  !

_stopWatch
√√" ,
.
√√, -
Start
√√- 2
(
√√2 3
)
√√3 4
;
√√4 5
if
ƒƒ 
(
ƒƒ 
VerifyStatusID
ƒƒ 
<=
ƒƒ !
$num
ƒƒ" #
||
ƒƒ$ &
VerifyStatusID
ƒƒ' 5
>
ƒƒ6 7
$num
ƒƒ8 9
)
ƒƒ9 :
throw
ƒƒ; @
new
ƒƒA D
ArgumentException
ƒƒE V
(
ƒƒV W
$strƒƒW °
)ƒƒ° ¢
;ƒƒ¢ £
try
≈≈ 
{
∆∆ 
var
«« 
Spams
«« 
=
«« 
database
«« $
.
««$ %
GetSpams
««% -
(
««- .
)
««. /
.
««/ 0
Where
««0 5
(
««5 6
item
««6 :
=>
««; =
item
««> B
.
««B C
VerifyStatusID
««C Q
==
««R T
VerifyStatusID
««U c
)
««c d
.
««d e
GroupBy
««e l
(
««l m
item
««m q
=>
««r t
item
««u y
.
««y z
QueryId««z Å
)««Å Ç
.««Ç É!
OrderByDescending««É î
(««î ï
item««ï ô
=>««ö ú
item««ù °
.««° ¢
Count««¢ ß
(««ß ®
)««® ©
)««© ™
.««™ ´
Select««´ ±
(««± ≤
item««≤ ∂
=>««∑ π
new««∫ Ω
{
»» 
ListOfSpams
…… 
=
……  !
item
……" &
.
……& '
Select
……' -
(
……- .
spam
……. 2
=>
……3 5
new
……6 9
{
   
Name
ÀÀ 
=
ÀÀ 
spam
ÀÀ #
.
ÀÀ# $
User
ÀÀ$ (
?
ÀÀ( )
.
ÀÀ) *
FullName
ÀÀ* 2
,
ÀÀ2 3
Reason
ÃÃ 
=
ÃÃ  
spam
ÃÃ! %
.
ÃÃ% &
Reason
ÃÃ& ,
}
ÕÕ 
)
ÕÕ 
,
ÕÕ 
Query
ŒŒ 
=
ŒŒ 
new
ŒŒ 
{
œœ 
QueryId
–– 
=
––  !
item
––" &
.
––& '
First
––' ,
(
––, -
)
––- .
.
––. /
QueryId
––/ 6
,
––6 7
Content
—— 
=
——  !
item
——" &
.
——& '
First
——' ,
(
——, -
)
——- .
.
——. /
Query
——/ 4
?
——4 5
.
——5 6
Content
——6 =
,
——= >
Title
““ 
=
““ 
item
““  $
.
““$ %
First
““% *
(
““* +
)
““+ ,
.
““, -
Query
““- 2
?
““2 3
.
““3 4
Title
““4 9
}
”” 
}
‘‘ 
)
‘‘ 
;
‘‘ 
return
’’ 
Spams
’’ 
;
’’ 
}
÷÷ 
catch
◊◊ 
(
◊◊ 
	Exception
◊◊ 
	exception
◊◊ &
)
◊◊& '
{
ÿÿ 
_logger
ŸŸ 
.
ŸŸ 
LogError
ŸŸ  
(
ŸŸ  !
HelperService
ŸŸ! .
.
ŸŸ. /
LoggerMessage
ŸŸ/ <
(
ŸŸ< =
$str
ŸŸ= K
,
ŸŸK L
$str
ŸŸM k
,
ŸŸk l
	exception
ŸŸm v
)
ŸŸv w
)
ŸŸw x
;
ŸŸx y
throw
⁄⁄ 
;
⁄⁄ 
}
€€ 
finally
‹‹ 
{
›› 
if
ﬁﬁ 
(
ﬁﬁ 
IsTracingEnabled
ﬁﬁ $
)
ﬁﬁ$ %
{
ﬂﬂ 

_stopWatch
‡‡ 
.
‡‡ 
Stop
‡‡ #
(
‡‡# $
)
‡‡$ %
;
‡‡% &
_logger
·· 
.
·· 
LogInformation
·· *
(
··* +
$"
··+ -
$str
··- s
{
··s t

_stopWatch
··t ~
.
··~ "
ElapsedMilliseconds·· í
}··í ì
$str··ì ï
"··ï ñ
)··ñ ó
;··ó ò
}
‚‚ 
}
„„ 
}
‰‰ 	
private
ÊÊ 
object
ÊÊ %
GetAnonymousQueryObject
ÊÊ .
(
ÊÊ. /
Query
ÊÊ/ 4
query
ÊÊ5 :
)
ÊÊ: ;
{
ÁÁ 	
return
ËË 
new
ËË 
{
ÈÈ 
QueryId
ÍÍ 
=
ÍÍ 
query
ÍÍ 
.
ÍÍ  
QueryId
ÍÍ  '
,
ÍÍ' (
Title
ÎÎ 
=
ÎÎ 
query
ÎÎ 
.
ÎÎ 
Title
ÎÎ #
,
ÎÎ# $
content
ÏÏ 
=
ÏÏ 
query
ÏÏ 
.
ÏÏ  
Content
ÏÏ  '
,
ÏÏ' (
IsSolved
ÌÌ 
=
ÌÌ 
query
ÌÌ  
.
ÌÌ  !
IsSolved
ÌÌ! )
}
ÓÓ 
;
ÓÓ 
}
ÔÔ 	
}
 
}ÒÒ ÃE
HC:\Users\pooja.sakthivel\Desktop\AspireOverflow\Services\TokenService.cs
	namespace 	
AspireOverflow
 
. 
Services !
{		 
public

 

class

 
TokenService

 
:

 
ITokenService

  -
{ 
private 
readonly 
IConfiguration '
_configuration( 6
;6 7
private 
readonly 
IUserService %
_userService& 2
;2 3
private 
readonly 
ILogger  
<  !
TokenService! -
>- .
_logger/ 6
;6 7
public 
TokenService 
( 
IConfiguration *
configuration+ 8
,8 9
IUserService: F
userServiceG R
,R S
ILoggerT [
<[ \
TokenService\ h
>h i
loggerj p
)p q
{ 	
_configuration 
= 
configuration *
;* +
_userService 
= 
userService &
;& '
_logger 
= 
logger 
; 
} 	
public 
object 
GenerateToken #
(# $
Login$ )
Credentials* 5
)5 6
{ 	
ValidateUser 
( 
Credentials $
)$ %
;% &
try 
{ 
var 
user 
= 
_userService '
.' (
GetUser( /
(/ 0
Credentials0 ;
.; <
Email< A
!A B
,B C
CredentialsD O
.O P
PasswordP X
!X Y
)Y Z
;Z [
var 
claims 
= 
new  
[  !
]! "
{# $
new   
Claim   !
(  ! "#
JwtRegisteredClaimNames  " 9
.  9 :
Sub  : =
,  = >
_configuration  ? M
[  M N
$str  N [
]  [ \
)  \ ]
,  ] ^
new!! 
Claim!! !
(!!! "#
JwtRegisteredClaimNames!!" 9
.!!9 :
Jti!!: =
,!!= >
Guid!!? C
.!!C D
NewGuid!!D K
(!!K L
)!!L M
.!!M N
ToString!!N V
(!!V W
)!!W X
)!!X Y
,!!Y Z
new"" 
Claim"" !
(""! "#
JwtRegisteredClaimNames""" 9
.""9 :
Iat"": =
,""= >
DateTime""? G
.""G H
Now""H K
.""K L
ToString""L T
(""T U
)""U V
)""V W
,""W X
new## 
Claim## !
(##! "

ClaimTypes##" ,
.##, -
Email##- 2
,##2 3
user##3 7
.##7 8
EmailAddress##8 D
)##D E
,##E F
new$$ 
Claim$$ !
($$! "
$str$$" *
,$$* +
user$$+ /
.$$/ 0
UserId$$0 6
.$$6 7
ToString$$7 ?
($$? @
)$$@ A
)$$A B
,$$B C
new%% 
Claim%% !
(%%! "
$str%%" *
,%%* +
user%%+ /
.%%/ 0

UserRoleId%%0 :
.%%: ;
ToString%%; C
(%%C D
)%%D E
)%%E F
,%%F G
new&& 
Claim&& #
(&&# $

ClaimTypes&&$ .
.&&. /
Role&&/ 3
,&&3 4
user&&4 8
.&&8 9
UserRole&&9 A
?&&A B
.&&B C
RoleName&&C K
!&&K L
)&&L M
,&&M N
new'' 
Claim'' !
(''! "

ClaimTypes''" ,
.'', -
Role''- 1
,''1 2
user''3 7
.''7 8

IsReviewer''8 B
?''B C
$str''C M
:''M N
$str''N P
)''P Q
,''Q R
new(( 
Claim(( !
(((! "
$str((" .
,((. /
user((0 4
.((4 5

IsReviewer((5 ?
.((? @
ToString((@ H
(((H I
)((I J
)((J K
})) 
;)) 
var** 
key** 
=** 
new**  
SymmetricSecurityKey** 2
(**2 3
Encoding**3 ;
.**; <
UTF8**< @
.**@ A
GetBytes**A I
(**I J
_configuration**J X
[**X Y
$str**Y b
]**b c
)**c d
)**d e
;**e f
var++ 
signIn++ 
=++ 
new++  
SigningCredentials++! 3
(++3 4
key++4 7
,++7 8
SecurityAlgorithms++9 K
.++K L

HmacSha256++L V
)++V W
;++W X
var,, !
encryptingCredentials,, )
=,,* +
new,,, /!
EncryptingCredentials,,0 E
(,,E F
key,,F I
,,,I J
JwtConstants,,K W
.,,W X
DirectKeyUseAlg,,X g
,,,g h
SecurityAlgorithms,,i {
.,,{ | 
Aes256CbcHmacSha512	,,| è
)
,,è ê
;
,,ê ë
var-- 
token-- 
=-- 
new-- #
JwtSecurityTokenHandler--  7
(--7 8
)--8 9
.--9 :"
CreateJwtSecurityToken--: P
(--P Q
_configuration..  
[..  !
$str..! -
]..- .
,... /
_configuration// "
[//" #
$str//# 1
]//1 2
,//2 3
new00 
ClaimsIdentity00 &
(00& '
claims00' -
)00- .
,00. /
DateTime11 
.11 
Now11  
,11  !
DateTime22 
.22 
Now22  
.22  !

AddMinutes22! +
(22+ ,
$num22, .
)22. /
,22/ 0
DateTime33 
.33 
Now33  
,33  !
signIn44 
,44 !
encryptingCredentials55 )
)55) *
;55* +
var66 
Result66 
=66 
new66  
{77 
token88 
=88 
new88 #
JwtSecurityTokenHandler88  7
(887 8
)888 9
.889 :

WriteToken88: D
(88D E
token88E J
)88J K
,88K L
ExpiryInMinutes99 #
=99$ %
$num99& (
,99( )
IsAdmin:: 
=:: 
user:: "
.::" #

UserRoleId::# -
==::. 0
$num::1 2
?::3 4
$str::5 ;
:::< =
$str::> E
,::E F

IsReviewer;; 
=;;  
user;;! %
.;;% &

IsReviewer;;& 0
?;;1 2
$str;;3 9
:;;: ;
$str;;< C
,;;C D

IsVerified<< 
=<<  
user<<! %
.<<% &
VerifyStatus<<& 2
?<<2 3
.<<3 4
Name<<4 8
}== 
;== 
return>> 
Result>> 
;>> 
}?? 
catch@@ 
(@@ 
ValidationException@@ &
	exception@@' 0
)@@0 1
{AA 
_loggerBB 
.BB 
LogErrorBB  
(BB  !
HelperServiceBB! .
.BB. /
LoggerMessageBB/ <
(BB< =
$strBB= K
,BBK L
$strBBM |
,BB| }
	exception	BB~ á
,
BBá à
Credentials
BBâ î
)
BBî ï
)
BBï ñ
;
BBñ ó
throwCC 
;CC 
}DD 
catchEE 
(EE 
	ExceptionEE 
	exceptionEE &
)EE& '
{FF 
_loggerGG 
.GG 
LogErrorGG  
(GG  !
HelperServiceGG! .
.GG. /
LoggerMessageGG/ <
(GG< =
$strGG= K
,GGK L
$strGGM |
,GG| }
	exception	GG~ á
,
GGá à
Credentials
GGâ î
)
GGî ï
)
GGï ñ
;
GGñ ó
throwHH 
;HH 
}II 
}JJ 	
privateMM 
voidMM 
ValidateUserMM !
(MM! "
LoginMM" '
CredentialsMM( 3
)MM3 4
{NN 	
ifOO 
(OO 
CredentialsOO 
==OO 
nullOO #
)OO# $
throwOO% *
newOO+ .
ArgumentExceptionOO/ @
(OO@ A
$strOOA ]
)OO] ^
;OO^ _

ValidationPP 
.PP #
ValidateUserCredentialsPP .
(PP. /
CredentialsPP/ :
.PP: ;
EmailPP; @
!PP@ A
,PPA B
CredentialsPPC N
.PPN O
PasswordPPO W
!PPW X
)PPX Y
;PPY Z
}QQ 	
}RR 
}SS ã©
GC:\Users\pooja.sakthivel\Desktop\AspireOverflow\Services\UserService.cs
	namespace 	
AspireOverflow
 
. 
Services !
{ 
public 

class 
UserService 
: 
IUserService +
{ 
private 
readonly 
IUserRepository (
database) 1
;1 2
private 
readonly 
ILogger  
<  !
UserService! ,
>, -
_logger. 5
;5 6
private 
readonly 
	Stopwatch "

_stopWatch# -
=. /
new0 3
	Stopwatch4 =
(= >
)> ?
;? @
private 
bool 
IsTracingEnabled %
;% &
public 
UserService 
( 
ILogger "
<" #
UserService# .
>. /
logger0 6
,6 7
IUserRepository8 G
_userRepositoryH W
)W X
{ 	
_logger 
= 
logger 
; 
database 
= 
_userRepository &
;& '
IsTracingEnabled 
= 
database '
.' (.
"GetIsTraceEnabledFromConfiguration( J
(J K
)K L
;L M
} 	
public 
bool 

CreateUser 
( 
User #
user$ (
)( )
{ 	
if 
( 
IsTracingEnabled  
)  !

_stopWatch" ,
., -
Start- 2
(2 3
)3 4
;4 5

Validation 
. 
ValidateUser #
(# $
user$ (
)( )
;) *
try   
{!! 
user"" 
."" 
Password"" 
="" !
PasswordHasherFactory""  5
.""5 6$
GetPasswordHasherFactory""6 N
(""N O
)""O P
.""P Q
HashPassword""Q ]
(""] ^
user""^ b
,""b c
user""d h
.""h i
Password""i q
)""q r
;""r s
user## 
.## 
	CreatedOn## 
=##  
DateTime##! )
.##) *
Now##* -
;##- .
user$$ 
.$$ 
	UpdatedBy$$ 
=$$  
null$$! %
;$$% &
return%% 
database%% 
.%%  

CreateUser%%  *
(%%* +
user%%+ /
)%%/ 0
;%%0 1
}&& 
catch'' 
('' 
ValidationException'' &
	exception''' 0
)''0 1
{(( 
_logger)) 
.)) 
LogError))  
())  !
HelperService))! .
.)). /
LoggerMessage))/ <
())< =
$str))= J
,))J K
$str))L c
,))c d
	exception))e n
,))n o
user))p t
)))t u
)))u v
;))v w
throw** 
;** 
}++ 
catch,, 
(,, 
	Exception,, 
	exception,, &
),,& '
{-- 
_logger.. 
... 
LogError..  
(..  !
HelperService..! .
.... /
LoggerMessage../ <
(..< =
$str..= J
,..J K
$str..L c
,..c d
	exception..e n
,..n o
user..p t
)..t u
)..u v
;..v w
return// 
false// 
;// 
}00 
finally11 
{22 
if33 
(33 
IsTracingEnabled33 $
)33$ %
{44 

_stopWatch55 
.55 
Stop55 #
(55# $
)55$ %
;55% &
_logger66 
.66 
LogInformation66 *
(66* +
$"66+ -
$str66- k
{66k l

_stopWatch66l v
.66v w 
ElapsedMilliseconds	66w ä
}
66ä ã
$str
66ã ç
"
66ç é
)
66é è
;
66è ê
}77 
}88 
}99 	
public== 
bool== 

RemoveUser== 
(== 
int== "
UserId==# )
)==) *
{>> 	
if?? 
(?? 
IsTracingEnabled??  
)??  !

_stopWatch??" ,
.??, -
Start??- 2
(??2 3
)??3 4
;??4 5
if@@ 
(@@ 
UserId@@ 
<=@@ 
$num@@ 
)@@ 
throw@@ "
new@@# &
ArgumentException@@' 8
(@@8 9
$"@@9 ;
$str@@; g
{@@g h
UserId@@h n
}@@n o
"@@o p
)@@p q
;@@q r
tryAA 
{BB 
returnCC 
databaseCC 
.CC  

RemoveUserCC  *
(CC* +
UserIdCC+ 1
)CC1 2
;CC2 3
}DD 
catchEE 
(EE 
	ExceptionEE 
	exceptionEE &
)EE& '
{FF 
_loggerGG 
.GG 
LogErrorGG  
(GG  !
HelperServiceGG! .
.GG. /
LoggerMessageGG/ <
(GG< =
$strGG= J
,GGJ K
$strGGL d
,GGd e
	exceptionGGf o
,GGo p
UserIdGGq w
)GGw x
)GGx y
;GGy z
returnHH 
falseHH 
;HH 
}II 
finallyJJ 
{KK 
ifLL 
(LL 
IsTracingEnabledLL $
)LL$ %
{MM 

_stopWatchNN 
.NN 
StopNN #
(NN# $
)NN$ %
;NN% &
_loggerOO 
.OO 
LogInformationOO *
(OO* +
$"OO+ -
$strOO- l
{OOl m

_stopWatchOOm w
.OOw x 
ElapsedMilliseconds	OOx ã
}
OOã å
$str
OOå é
"
OOé è
)
OOè ê
;
OOê ë
}PP 
}QQ 
}RR 	
publicVV 
boolVV "
UpdateUserByIsReviewerVV *
(VV* +
intVV+ .
UserIdVV/ 5
,VV5 6
boolVV7 ;

IsReviewerVV< F
,VVF G
intVVH K
UpdatedByUserIdVVL [
)VV[ \
{WW 	
ifXX 
(XX 
IsTracingEnabledXX  
)XX  !

_stopWatchXX" ,
.XX, -
StartXX- 2
(XX2 3
)XX3 4
;XX4 5
ifYY 
(YY 
UserIdYY 
<=YY 
$numYY 
)YY 
throwYY "
newYY# &
ArgumentExceptionYY' 8
(YY8 9
$"YY9 ;
$strYY; g
{YYg h
UserIdYYh n
}YYn o
"YYo p
)YYp q
;YYq r
tryZZ 
{[[ 
return\\ 
database\\ 
.\\   
UpdateUserByReviewer\\  4
(\\4 5
UserId\\5 ;
,\\; <

IsReviewer\\= G
,\\G H
UpdatedByUserId\\I X
)\\X Y
;\\Y Z
}]] 
catch^^ 
(^^ 
	Exception^^ 
	exception^^ &
)^^& '
{__ 
_logger`` 
.`` 
LogError``  
(``  !
HelperService``! .
.``. /
LoggerMessage``/ <
(``< =
$str``= J
,``J K
$str	``L î
,
``î ï
	exception
``ñ ü
,
``ü †
UserId
``° ß
)
``ß ®
)
``® ©
;
``© ™
returnaa 
falseaa 
;aa 
}bb 
finallycc 
{dd 
ifee 
(ee 
IsTracingEnabledee $
)ee$ %
{ff 

_stopWatchgg 
.gg 
Stopgg #
(gg# $
)gg$ %
;gg% &
_loggerhh 
.hh 
LogInformationhh *
(hh* +
$"hh+ -
$str	hh- ù
{
hhù û

_stopWatch
hhû ®
.
hh® ©!
ElapsedMilliseconds
hh© º
}
hhº Ω
$str
hhΩ ø
"
hhø ¿
)
hh¿ ¡
;
hh¡ ¬
}ii 
}jj 
}kk 	
publicoo 
Useroo 
GetUseroo 
(oo 
stringoo "
Emailoo# (
,oo( )
stringoo* 0
Passwordoo1 9
)oo9 :
{pp 	
ifqq 
(qq 
IsTracingEnabledqq  
)qq  !

_stopWatchqq" ,
.qq, -
Startqq- 2
(qq2 3
)qq3 4
;qq4 5
ifrr 
(rr 
Emailrr 
==rr 
nullrr 
||rr  
Passwordrr! )
==rr* ,
nullrr- 1
)rr1 2
throwrr3 8
newrr9 <
ArgumentExceptionrr= N
(rrN O
$strrrO q
)rrq r
;rrr s
tryss 
{tt 
varuu 
Hasheruu 
=uu !
PasswordHasherFactoryuu 2
.uu2 3$
GetPasswordHasherFactoryuu3 K
(uuK L
)uuL M
;uuM N
varvv 
Uservv 
=vv 
databasevv #
.vv# $
GetUserByEmailvv$ 2
(vv2 3
Emailvv3 8
)vv8 9
;vv9 :
returnww 
Hasherww 
.ww  
VerifyHashedPasswordww 2
(ww2 3
Userww3 7
,ww7 8
Userww9 =
.ww= >
Passwordww> F
,wwF G
PasswordwwH P
)wwP Q
==wwR T&
PasswordVerificationResultwwU o
.wwo p
Successwwp w
?wwx y
Userwwz ~
:	ww Ä
throw
wwÅ Ü
new
wwá ä!
ValidationException
wwã û
(
wwû ü
$str
wwü ∑
)
ww∑ ∏
;
ww∏ π
}xx 
catchyy 
(yy 
ValidationExceptionyy &
	exceptionyy' 0
)yy0 1
{zz 
_logger{{ 
.{{ 
LogError{{  
({{  !
HelperService{{! .
.{{. /
LoggerMessage{{/ <
({{< =
$str{{= O
,{{O P
$str{{Q y
,{{y z
	exception	{{{ Ñ
,
{{Ñ Ö
Email
{{Ü ã
)
{{ã å
)
{{å ç
;
{{ç é
throw|| 
;|| 
}}} 
catch~~ 
(~~ 
	Exception~~ 
	exception~~ &
)~~& '
{ 
_logger
ÄÄ 
.
ÄÄ 
LogError
ÄÄ  
(
ÄÄ  !
HelperService
ÄÄ! .
.
ÄÄ. /
LoggerMessage
ÄÄ/ <
(
ÄÄ< =
$str
ÄÄ= O
,
ÄÄO P
$str
ÄÄQ y
,
ÄÄy z
	exceptionÄÄ{ Ñ
,ÄÄÑ Ö
EmailÄÄÜ ã
)ÄÄã å
)ÄÄå ç
;ÄÄç é
throw
ÅÅ 
;
ÅÅ 
}
ÇÇ 
finally
ÉÉ 
{
ÑÑ 
if
ÖÖ 
(
ÖÖ 
IsTracingEnabled
ÖÖ $
)
ÖÖ$ %
{
ÜÜ 

_stopWatch
áá 
.
áá 
Stop
áá #
(
áá# $
)
áá$ %
;
áá% &
_logger
àà 
.
àà 
LogInformation
àà *
(
àà* +
$"
àà+ -
$str
àà- |
{
àà| }

_stopWatchàà} á
.ààá à#
ElapsedMillisecondsààà õ
}ààõ ú
$strààú û
"ààû ü
)ààü †
;àà† °
}
ââ 
}
ää 
}
ãã 	
public
èè 
object
èè 
GetUserByID
èè !
(
èè! "
int
èè" %
UserID
èè& ,
)
èè, -
{
êê 	
if
ëë 
(
ëë 
IsTracingEnabled
ëë  
)
ëë  !

_stopWatch
ëë" ,
.
ëë, -
Start
ëë- 2
(
ëë2 3
)
ëë3 4
;
ëë4 5
if
íí 
(
íí 
UserID
íí 
<=
íí 
$num
íí 
)
íí 
throw
íí "
new
íí# &
ArgumentException
íí' 8
(
íí8 9
$"
íí9 ;
$str
íí; g
{
ííg h
UserID
ííh n
}
íín o
"
íío p
)
ííp q
;
ííq r
try
ìì 
{
îî 
var
ïï 
User
ïï 
=
ïï 
database
ïï #
.
ïï# $
GetUserByID
ïï$ /
(
ïï/ 0
UserID
ïï0 6
)
ïï6 7
;
ïï7 8
return
ññ $
GetAnonymousUserObject
ññ -
(
ññ- .
User
ññ. 2
)
ññ2 3
;
ññ3 4
}
óó 
catch
òò 
(
òò 
	Exception
òò 
	exception
òò &
)
òò& '
{
ôô 
_logger
öö 
.
öö 
LogError
öö  
(
öö  !
HelperService
öö! .
.
öö. /
LoggerMessage
öö/ <
(
öö< =
$str
öö= J
,
ööJ K
$str
ööL f
,
ööf g
	exception
ööh q
,
ööq r
UserID
öös y
)
ööy z
)
ööz {
;
öö{ |
throw
õõ 
;
õõ 
}
úú 
finally
ùù 
{
ûû 
if
üü 
(
üü 
IsTracingEnabled
üü $
)
üü$ %
{
†† 

_stopWatch
°° 
.
°° 
Stop
°° #
(
°°# $
)
°°$ %
;
°°% &
_logger
¢¢ 
.
¢¢ 
LogInformation
¢¢ *
(
¢¢* +
$"
¢¢+ -
$str
¢¢- m
{
¢¢m n

_stopWatch
¢¢n x
.
¢¢x y"
ElapsedMilliseconds¢¢y å
}¢¢å ç
$str¢¢ç è
"¢¢è ê
)¢¢ê ë
;¢¢ë í
}
££ 
}
§§ 
}
•• 	
public
©© 
IEnumerable
©© 
<
©© 
User
©© 
>
©©  
GetUsers
©©! )
(
©©) *
)
©©* +
{
™™ 	
if
´´ 
(
´´ 
IsTracingEnabled
´´  
)
´´  !

_stopWatch
´´" ,
.
´´, -
Start
´´- 2
(
´´2 3
)
´´3 4
;
´´4 5
try
¨¨ 
{
≠≠ 
return
ÆÆ 
database
ÆÆ 
.
ÆÆ  
GetUsers
ÆÆ  (
(
ÆÆ( )
)
ÆÆ) *
;
ÆÆ* +
}
ØØ 
catch
∞∞ 
(
∞∞ 
	Exception
∞∞ 
	exception
∞∞ &
)
∞∞& '
{
±± 
_logger
≤≤ 
.
≤≤ 
LogError
≤≤  
(
≤≤  !
HelperService
≤≤! .
.
≤≤. /
LoggerMessage
≤≤/ <
(
≤≤< =
$str
≤≤= J
,
≤≤J K
$str
≤≤L X
,
≤≤X Y
	exception
≤≤Z c
)
≤≤c d
)
≤≤d e
;
≤≤e f
throw
≥≥ 
;
≥≥ 
}
¥¥ 
finally
µµ 
{
∂∂ 
if
∑∑ 
(
∑∑ 
IsTracingEnabled
∑∑ $
)
∑∑$ %
{
∏∏ 

_stopWatch
ππ 
.
ππ 
Stop
ππ #
(
ππ# $
)
ππ$ %
;
ππ% &
_logger
∫∫ 
.
∫∫ 
LogInformation
∫∫ *
(
∫∫* +
$"
∫∫+ -
$str
∫∫- `
{
∫∫` a

_stopWatch
∫∫a k
.
∫∫k l!
ElapsedMilliseconds
∫∫l 
}∫∫ Ä
$str∫∫Ä Ç
"∫∫Ç É
)∫∫É Ñ
;∫∫Ñ Ö
}
ªª 
}
ºº 
}
ΩΩ 	
public
¡¡ 
IEnumerable
¡¡ 
<
¡¡ 
Object
¡¡ !
>
¡¡! "$
GetUsersByVerifyStatus
¡¡# 9
(
¡¡9 :
int
¡¡: =
VerifyStatusID
¡¡> L
)
¡¡L M
{
¬¬ 	
if
√√ 
(
√√ 
IsTracingEnabled
√√  
)
√√  !

_stopWatch
√√" ,
.
√√, -
Start
√√- 2
(
√√2 3
)
√√3 4
;
√√4 5
if
ƒƒ 
(
ƒƒ 
VerifyStatusID
ƒƒ 
<=
ƒƒ !
$num
ƒƒ" #
||
ƒƒ$ &
VerifyStatusID
ƒƒ' 5
>
ƒƒ6 7
$num
ƒƒ8 9
)
ƒƒ9 :
throw
ƒƒ; @
new
ƒƒA D
ArgumentException
ƒƒE V
(
ƒƒV W
$strƒƒW é
)ƒƒé è
;ƒƒè ê
try
≈≈ 
{
∆∆ 
return
«« 
database
«« 
.
««  &
GetUsersByVerifyStatusId
««  8
(
««8 9
VerifyStatusID
««9 G
)
««G H
.
««H I
Select
««I O
(
««O P
User
««P T
=>
««U W$
GetAnonymousUserObject
««X n
(
««n o
User
««o s
)
««s t
)
««t u
;
««u v
}
»» 
catch
…… 
(
…… 
	Exception
…… 
	exception
…… &
)
……& '
{
   
_logger
ÀÀ 
.
ÀÀ 
LogError
ÀÀ  
(
ÀÀ  !
HelperService
ÀÀ! .
.
ÀÀ. /
LoggerMessage
ÀÀ/ <
(
ÀÀ< =
$str
ÀÀ= J
,
ÀÀJ K
$str
ÀÀL x
,
ÀÀx y
	exceptionÀÀz É
,ÀÀÉ Ñ
VerifyStatusIDÀÀÖ ì
)ÀÀì î
)ÀÀî ï
;ÀÀï ñ
throw
ÃÃ 
;
ÃÃ 
}
ÕÕ 
finally
ŒŒ 
{
œœ 
if
–– 
(
–– 
IsTracingEnabled
–– $
)
––$ %
{
—— 

_stopWatch
““ 
.
““ 
Stop
““ #
(
““# $
)
““$ %
;
““% &
_logger
”” 
.
”” 
LogInformation
”” *
(
””* +
$"
””+ -
$str””- Ä
{””Ä Å

_stopWatch””Å ã
.””ã å#
ElapsedMilliseconds””å ü
}””ü †
$str””† ¢
"””¢ £
)””£ §
;””§ •
}
‘‘ 
}
’’ 
}
÷÷ 	
public
⁄⁄ 
IEnumerable
⁄⁄ 
<
⁄⁄ 
Object
⁄⁄ !
>
⁄⁄! ""
GetUsersByUserRoleID
⁄⁄# 7
(
⁄⁄7 8
int
⁄⁄8 ;

UserRoleID
⁄⁄< F
)
⁄⁄F G
{
€€ 	
if
‹‹ 
(
‹‹ 
IsTracingEnabled
‹‹  
)
‹‹  !

_stopWatch
‹‹" ,
.
‹‹, -
Start
‹‹- 2
(
‹‹2 3
)
‹‹3 4
;
‹‹4 5
if
›› 
(
›› 

UserRoleID
›› 
<=
›› 
$num
›› 
||
››  "

UserRoleID
››# -
>
››. /
$num
››0 1
)
››1 2
throw
››3 8
new
››9 <
ArgumentException
››= N
(
››N O
$"
››O Q
$str››Q Ü
{››Ü á

UserRoleID››á ë
}››ë í
"››í ì
)››ì î
;››î ï
try
ﬁﬁ 
{
ﬂﬂ 
return
‡‡ 
database
‡‡ 
.
‡‡  "
GetUsersByUserRoleID
‡‡  4
(
‡‡4 5

UserRoleID
‡‡5 ?
)
‡‡? @
.
‡‡@ A
Select
‡‡A G
(
‡‡G H
User
‡‡H L
=>
‡‡M O$
GetAnonymousUserObject
‡‡P f
(
‡‡f g
User
‡‡g k
)
‡‡k l
)
‡‡l m
;
‡‡m n
}
·· 
catch
‚‚ 
(
‚‚ 
	Exception
‚‚ 
	exception
‚‚ &
)
‚‚& '
{
„„ 
_logger
‰‰ 
.
‰‰ 
LogError
‰‰  
(
‰‰  !
HelperService
‰‰! .
.
‰‰. /
LoggerMessage
‰‰/ <
(
‰‰< =
$str
‰‰= J
,
‰‰J K
$str
‰‰L r
,
‰‰r s
	exception
‰‰t }
,
‰‰} ~

UserRoleID‰‰ â
)‰‰â ä
)‰‰ä ã
;‰‰ã å
throw
ÂÂ 
;
ÂÂ 
}
ÊÊ 
finally
ÁÁ 
{
ËË 
if
ÈÈ 
(
ÈÈ 
IsTracingEnabled
ÈÈ $
)
ÈÈ$ %
{
ÍÍ 

_stopWatch
ÎÎ 
.
ÎÎ 
Stop
ÎÎ #
(
ÎÎ# $
)
ÎÎ$ %
;
ÎÎ% &
_logger
ÏÏ 
.
ÏÏ 
LogInformation
ÏÏ *
(
ÏÏ* +
$"
ÏÏ+ -
$str
ÏÏ- z
{
ÏÏz {

_stopWatchÏÏ{ Ö
.ÏÏÖ Ü#
ElapsedMillisecondsÏÏÜ ô
}ÏÏô ö
$strÏÏö ú
"ÏÏú ù
)ÏÏù û
;ÏÏû ü
}
ÌÌ 
}
ÓÓ 
}
ÔÔ 	
public
ÛÛ 
bool
ÛÛ *
ChangeUserVerificationStatus
ÛÛ 0
(
ÛÛ0 1
int
ÛÛ1 4
UserID
ÛÛ5 ;
,
ÛÛ; <
int
ÛÛ= @
VerifyStatusID
ÛÛA O
,
ÛÛO P
int
ÛÛQ T
UpdatedByUserId
ÛÛU d
)
ÛÛd e
{
ÙÙ 	
if
ıı 
(
ıı 
IsTracingEnabled
ıı  
)
ıı  !

_stopWatch
ıı" ,
.
ıı, -
Start
ıı- 2
(
ıı2 3
)
ıı3 4
;
ıı4 5
if
ˆˆ 
(
ˆˆ 
UserID
ˆˆ 
<=
ˆˆ 
$num
ˆˆ 
)
ˆˆ 
throw
ˆˆ "
new
ˆˆ# &
ArgumentException
ˆˆ' 8
(
ˆˆ8 9
$"
ˆˆ9 ;
$str
ˆˆ; h
{
ˆˆh i
UserID
ˆˆi o
}
ˆˆo p
"
ˆˆp q
)
ˆˆq r
;
ˆˆr s
if
˜˜ 
(
˜˜ 
VerifyStatusID
˜˜ 
<=
˜˜ !
$num
˜˜" #
||
˜˜$ &
VerifyStatusID
˜˜' 5
>
˜˜6 7
$num
˜˜8 9
)
˜˜9 :
throw
˜˜; @
new
˜˜A D
ArgumentException
˜˜E V
(
˜˜V W
$"
˜˜W Y
$str˜˜Y ó
{˜˜ó ò
VerifyStatusID˜˜ò ¶
}˜˜¶ ß
"˜˜ß ®
)˜˜® ©
;˜˜© ™
try
¯¯ 
{
˘˘ 
return
˙˙ 
database
˙˙ 
.
˙˙  &
UpdateUserByVerifyStatus
˙˙  8
(
˙˙8 9
UserID
˙˙9 ?
,
˙˙? @
VerifyStatusID
˙˙A O
,
˙˙O P
UpdatedByUserId
˙˙Q `
)
˙˙` a
;
˙˙a b
}
˚˚ 
catch
¸¸ 
(
¸¸ 
	Exception
¸¸ 
	exception
¸¸ &
)
¸¸& '
{
˝˝ 
_logger
˛˛ 
.
˛˛ 
LogError
˛˛  
(
˛˛  !
HelperService
˛˛! .
.
˛˛. /
LoggerMessage
˛˛/ <
(
˛˛< =
$str
˛˛= J
,
˛˛J K
$str˛˛L û
,˛˛û ü
	exception˛˛† ©
,˛˛© ™
$"˛˛´ ≠
$str˛˛≠ ¥
{˛˛¥ µ
UserID˛˛µ ª
}˛˛ª º
$str˛˛º Ã
{˛˛Ã Õ
VerifyStatusID˛˛Õ €
}˛˛€ ‹
"˛˛‹ ›
)˛˛› ﬁ
)˛˛ﬁ ﬂ
;˛˛ﬂ ‡
throw
ˇˇ 
;
ˇˇ 
}
ÄÄ 
finally
ÅÅ 
{
ÇÇ 
if
ÉÉ 
(
ÉÉ 
IsTracingEnabled
ÉÉ $
)
ÉÉ$ %
{
ÑÑ 

_stopWatch
ÖÖ 
.
ÖÖ 
Stop
ÖÖ #
(
ÖÖ# $
)
ÖÖ$ %
;
ÖÖ% &
_logger
ÜÜ 
.
ÜÜ 
LogInformation
ÜÜ *
(
ÜÜ* +
$"
ÜÜ+ -
$strÜÜ- ¶
{ÜÜ¶ ß

_stopWatchÜÜß ±
.ÜÜ± ≤#
ElapsedMillisecondsÜÜ≤ ≈
}ÜÜ≈ ∆
$strÜÜ∆ »
"ÜÜ» …
)ÜÜ…  
;ÜÜ  À
}
áá 
}
àà 
}
ââ 	
public
çç 
IEnumerable
çç 
<
çç 
Object
çç !
>
çç! ""
GetUsersByIsReviewer
çç# 7
(
çç7 8
bool
çç8 <

IsReviewer
çç= G
)
ççG H
{
éé 	
if
èè 
(
èè 
IsTracingEnabled
èè  
)
èè  !

_stopWatch
èè" ,
.
èè, -
Start
èè- 2
(
èè2 3
)
èè3 4
;
èè4 5
try
êê 
{
ëë 
return
íí 
database
íí 
.
íí  "
GetUsersByIsReviewer
íí  4
(
íí4 5

IsReviewer
íí5 ?
)
íí? @
.
íí@ A
Select
ííA G
(
ííG H
User
ííH L
=>
ííM O$
GetAnonymousUserObject
ííP f
(
ííf g
User
ííg k
)
íík l
)
ííl m
;
íím n
}
ìì 
catch
îî 
(
îî 
	Exception
îî 
	exception
îî &
)
îî& '
{
ïï 
_logger
ññ 
.
ññ 
LogError
ññ  
(
ññ  !
HelperService
ññ! .
.
ññ. /
LoggerMessage
ññ/ <
(
ññ< =
$str
ññ= J
,
ññJ K
$str
ññL s
,
ññs t
	exception
ññu ~
,
ññ~ 

IsReviewerññÄ ä
)ññä ã
)ññã å
;ññå ç
throw
óó 
;
óó 
}
òò 
finally
ôô 
{
öö 
if
õõ 
(
õõ 
IsTracingEnabled
õõ $
)
õõ$ %
{
úú 

_stopWatch
ùù 
.
ùù 
Stop
ùù #
(
ùù# $
)
ùù$ %
;
ùù% &
_logger
ûû 
.
ûû 
LogInformation
ûû *
(
ûû* +
$"
ûû+ -
$str
ûû- {
{
ûû{ |

_stopWatchûû| Ü
.ûûÜ á#
ElapsedMillisecondsûûá ö
}ûûö õ
$strûûõ ù
"ûûù û
)ûûû ü
;ûûü †
}
üü 
}
†† 
}
°° 	
public
§§ 
object
§§ 
GetCountOfUsers
§§ %
(
§§% &
)
§§& '
{
•• 	
if
¶¶ 
(
¶¶ 
IsTracingEnabled
¶¶  
)
¶¶  !

_stopWatch
¶¶" ,
.
¶¶, -
Start
¶¶- 2
(
¶¶2 3
)
¶¶3 4
;
¶¶4 5
try
ßß 
{
®® 
return
©© 
database
©© 
.
©©  
GetCountOfUsers
©©  /
(
©©/ 0
)
©©0 1
;
©©1 2
}
™™ 
catch
´´ 
(
´´ 
	Exception
´´ 
	exception
´´ &
)
´´& '
{
¨¨ 
_logger
≠≠ 
.
≠≠ 
LogError
≠≠  
(
≠≠  !
HelperService
≠≠! .
.
≠≠. /
LoggerMessage
≠≠/ <
(
≠≠< =
$str
≠≠= J
,
≠≠J K
$str
≠≠L _
,
≠≠_ `
	exception
≠≠a j
)
≠≠j k
)
≠≠k l
;
≠≠l m
throw
ÆÆ 
;
ÆÆ 
}
ØØ 
finally
∞∞ 
{
±± 
if
≤≤ 
(
≤≤ 
IsTracingEnabled
≤≤ $
)
≤≤$ %
{
≥≥ 

_stopWatch
¥¥ 
.
¥¥ 
Stop
¥¥ #
(
¥¥# $
)
¥¥$ %
;
¥¥% &
_logger
µµ 
.
µµ 
LogInformation
µµ *
(
µµ* +
$"
µµ+ -
$str
µµ- g
{
µµg h

_stopWatch
µµh r
.
µµr s"
ElapsedMillisecondsµµs Ü
}µµÜ á
$strµµá â
"µµâ ä
)µµä ã
;µµã å
}
∂∂ 
}
∑∑ 
}
∏∏ 	
private
∫∫ 
string
∫∫ 
GetDepartmentByID
∫∫ (
(
∫∫( )
int
∫∫) ,
DepartmentId
∫∫- 9
)
∫∫9 :
{
ªª 	
if
ºº 
(
ºº 
IsTracingEnabled
ºº  
)
ºº  !

_stopWatch
ºº" ,
.
ºº, -
Start
ºº- 2
(
ºº2 3
)
ºº3 4
;
ºº4 5
if
ΩΩ 
(
ΩΩ 
DepartmentId
ΩΩ 
<=
ΩΩ 
$num
ΩΩ  !
)
ΩΩ! "
throw
ΩΩ# (
new
ΩΩ) ,
ArgumentException
ΩΩ- >
(
ΩΩ> ?
$"
ΩΩ? A
$str
ΩΩA s
{
ΩΩs t
DepartmentIdΩΩt Ä
}ΩΩÄ Å
"ΩΩÅ Ç
)ΩΩÇ É
;ΩΩÉ Ñ
try
ææ 
{
øø 
var
¿¿ 

department
¿¿ 
=
¿¿  
database
¿¿! )
.
¿¿) *
GetDepartments
¿¿* 8
(
¿¿8 9
)
¿¿9 :
.
¿¿: ;
FirstOrDefault
¿¿; I
(
¿¿I J
item
¿¿J N
=>
¿¿O Q
item
¿¿R V
.
¿¿V W
DepartmentId
¿¿W c
==
¿¿d f
DepartmentId
¿¿g s
)
¿¿s t
;
¿¿t u
return
¡¡ 

department
¡¡ !
?
¡¡! "
.
¡¡" #
DepartmentName
¡¡# 1
!
¡¡1 2
;
¡¡2 3
}
¬¬ 
catch
√√ 
(
√√ 
	Exception
√√ 
	exception
√√ &
)
√√& '
{
ƒƒ 
_logger
≈≈ 
.
≈≈ 
LogError
≈≈  
(
≈≈  !
HelperService
≈≈! .
.
≈≈. /
LoggerMessage
≈≈/ <
(
≈≈< =
$str
≈≈= J
,
≈≈J K
$str
≈≈L q
,
≈≈q r
	exception
≈≈s |
,
≈≈| }
DepartmentId≈≈~ ä
)≈≈ä ã
)≈≈ã å
;≈≈å ç
throw
∆∆ 
;
∆∆ 
}
«« 
finally
»» 
{
…… 
if
   
(
   
IsTracingEnabled
   $
)
  $ %
{
ÀÀ 

_stopWatch
ÃÃ 
.
ÃÃ 
Stop
ÃÃ #
(
ÃÃ# $
)
ÃÃ$ %
;
ÃÃ% &
_logger
ÕÕ 
.
ÕÕ 
LogInformation
ÕÕ *
(
ÕÕ* +
$"
ÕÕ+ -
$str
ÕÕ- y
{
ÕÕy z

_stopWatchÕÕz Ñ
.ÕÕÑ Ö#
ElapsedMillisecondsÕÕÖ ò
}ÕÕò ô
$strÕÕô õ
"ÕÕõ ú
)ÕÕú ù
;ÕÕù û
}
ŒŒ 
}
œœ 
}
–– 	
public
‘‘ 
IEnumerable
‘‘ 
<
‘‘ 
Object
‘‘ !
>
‘‘! "

GetGenders
‘‘# -
(
‘‘- .
)
‘‘. /
{
’’ 	
if
÷÷ 
(
÷÷ 
IsTracingEnabled
÷÷  
)
÷÷  !

_stopWatch
÷÷" ,
.
÷÷, -
Start
÷÷- 2
(
÷÷2 3
)
÷÷3 4
;
÷÷4 5
try
◊◊ 
{
ÿÿ 
var
ŸŸ 
Genders
ŸŸ 
=
ŸŸ 
database
ŸŸ &
.
ŸŸ& '

GetGenders
ŸŸ' 1
(
ŸŸ1 2
)
ŸŸ2 3
.
ŸŸ3 4
Select
ŸŸ4 :
(
ŸŸ: ;
item
ŸŸ; ?
=>
ŸŸ@ B
new
ŸŸC F
{
⁄⁄ 
GenderId
€€ 
=
€€ 
item
€€ #
.
€€# $
GenderId
€€$ ,
,
€€, -
Name
‹‹ 
=
‹‹ 
item
‹‹ 
.
‹‹  
Name
‹‹  $
}
›› 
)
›› 
;
›› 
return
ﬁﬁ 
Genders
ﬁﬁ 
;
ﬁﬁ 
}
ﬂﬂ 
catch
‡‡ 
(
‡‡ 
	Exception
‡‡ 
	exception
‡‡ &
)
‡‡& '
{
·· 
_logger
‚‚ 
.
‚‚ 
LogError
‚‚  
(
‚‚  !
HelperService
‚‚! .
.
‚‚. /
LoggerMessage
‚‚/ <
(
‚‚< =
$str
‚‚= J
,
‚‚J K
$str
‚‚L [
,
‚‚[ \
	exception
‚‚] f
)
‚‚f g
)
‚‚g h
;
‚‚h i
throw
„„ 
;
„„ 
}
‰‰ 
finally
ÂÂ 
{
ÊÊ 
if
ÁÁ 
(
ÁÁ 
IsTracingEnabled
ÁÁ $
)
ÁÁ$ %
{
ËË 

_stopWatch
ÈÈ 
.
ÈÈ 
Stop
ÈÈ #
(
ÈÈ# $
)
ÈÈ$ %
;
ÈÈ% &
_logger
ÍÍ 
.
ÍÍ 
LogInformation
ÍÍ *
(
ÍÍ* +
$"
ÍÍ+ -
$str
ÍÍ- c
{
ÍÍc d

_stopWatch
ÍÍd n
.
ÍÍn o"
ElapsedMillisecondsÍÍo Ç
}ÍÍÇ É
$strÍÍÉ Ö
"ÍÍÖ Ü
)ÍÍÜ á
;ÍÍá à
}
ÎÎ 
}
ÏÏ 
}
ÌÌ 	
public
ÒÒ 
IEnumerable
ÒÒ 
<
ÒÒ 
Object
ÒÒ !
>
ÒÒ! "
GetDesignations
ÒÒ# 2
(
ÒÒ2 3
)
ÒÒ3 4
{
ÚÚ 	
if
ÛÛ 
(
ÛÛ 
IsTracingEnabled
ÛÛ  
)
ÛÛ  !

_stopWatch
ÛÛ" ,
.
ÛÛ, -
Start
ÛÛ- 2
(
ÛÛ2 3
)
ÛÛ3 4
;
ÛÛ4 5
try
ÙÙ 
{
ıı 
var
ˆˆ 
designations
ˆˆ  
=
ˆˆ! "
database
ˆˆ# +
.
ˆˆ+ ,
GetDesignations
ˆˆ, ;
(
ˆˆ; <
)
ˆˆ< =
.
ˆˆ= >
Select
ˆˆ> D
(
ˆˆD E
item
ˆˆE I
=>
ˆˆJ L
new
ˆˆM P
{
˜˜ 
DesignationId
¯¯ !
=
¯¯" #
item
¯¯$ (
.
¯¯( )
DesignationId
¯¯) 6
,
¯¯6 7
Name
˘˘ 
=
˘˘ 
item
˘˘ 
.
˘˘  
DesignationName
˘˘  /
,
˘˘/ 0
DepartmentId
˙˙  
=
˙˙! "
item
˙˙# '
.
˙˙' (
DepartmentId
˙˙( 4
}
˚˚ 
)
˚˚ 
;
˚˚ 
return
¸¸ 
designations
¸¸ #
;
¸¸# $
}
˝˝ 
catch
˛˛ 
(
˛˛ 
	Exception
˛˛ 
	exception
˛˛ &
)
˛˛& '
{
ˇˇ 
_logger
ÄÄ 
.
ÄÄ 
LogError
ÄÄ  
(
ÄÄ  !
HelperService
ÄÄ! .
.
ÄÄ. /
LoggerMessage
ÄÄ/ <
(
ÄÄ< =
$str
ÄÄ= J
,
ÄÄJ K
$str
ÄÄL `
,
ÄÄ` a
	exception
ÄÄb k
)
ÄÄk l
)
ÄÄl m
;
ÄÄm n
throw
ÅÅ 
;
ÅÅ 
}
ÇÇ 
finally
ÉÉ 
{
ÑÑ 
if
ÖÖ 
(
ÖÖ 
IsTracingEnabled
ÖÖ $
)
ÖÖ$ %
{
ÜÜ 

_stopWatch
áá 
.
áá 
Stop
áá #
(
áá# $
)
áá$ %
;
áá% &
_logger
àà 
.
àà 
LogInformation
àà *
(
àà* +
$"
àà+ -
$str
àà- g
{
ààg h

_stopWatch
ààh r
.
ààr s"
ElapsedMillisecondsààs Ü
}ààÜ á
$strààá â
"ààâ ä
)ààä ã
;ààã å
}
ââ 
}
ää 
}
ãã 	
public
èè 
IEnumerable
èè 
<
èè 
object
èè !
>
èè! "
GetDepartments
èè# 1
(
èè1 2
)
èè2 3
{
êê 	
if
ëë 
(
ëë 
IsTracingEnabled
ëë  
)
ëë  !

_stopWatch
ëë" ,
.
ëë, -
Start
ëë- 2
(
ëë2 3
)
ëë3 4
;
ëë4 5
try
íí 
{
ìì 
var
îî 
Departments
îî 
=
îî  !
database
îî" *
.
îî* +
GetDepartments
îî+ 9
(
îî9 :
)
îî: ;
.
îî; <
Select
îî< B
(
îîB C
item
îîC G
=>
îîH J
new
îîK N
{
ïï 
DepartmentId
ññ  
=
ññ! "
item
ññ# '
.
ññ' (
DepartmentId
ññ( 4
,
ññ4 5
Name
óó 
=
óó 
item
óó 
.
óó  
DepartmentName
óó  .
}
òò 
)
òò 
;
òò 
return
ôô 
Departments
ôô "
;
ôô" #
}
öö 
catch
õõ 
(
õõ 
	Exception
õõ 
	exception
õõ &
)
õõ& '
{
úú 
_logger
ùù 
.
ùù 
LogError
ùù  
(
ùù  !
HelperService
ùù! .
.
ùù. /
LoggerMessage
ùù/ <
(
ùù< =
$str
ùù= M
,
ùùM N
$str
ùùO b
,
ùùb c
	exception
ùùd m
)
ùùm n
)
ùùn o
;
ùùo p
throw
ûû 
;
ûû 
}
üü 
finally
†† 
{
°° 
if
¢¢ 
(
¢¢ 
IsTracingEnabled
¢¢ $
)
¢¢$ %
{
££ 

_stopWatch
§§ 
.
§§ 
Stop
§§ #
(
§§# $
)
§§$ %
;
§§% &
_logger
•• 
.
•• 
LogInformation
•• *
(
••* +
$"
••+ -
$str
••- f
{
••f g

_stopWatch
••g q
.
••q r"
ElapsedMilliseconds••r Ö
}••Ö Ü
$str••Ü à
"••à â
)••â ä
;••ä ã
}
¶¶ 
}
ßß 
}
®® 	
private
´´ 
object
´´ $
GetAnonymousUserObject
´´ -
(
´´- .
User
´´. 2
user
´´3 7
)
´´7 8
{
¨¨ 	
return
≠≠ 
new
≠≠ 
{
ÆÆ 
UserId
ØØ 
=
ØØ 
user
ØØ 
.
ØØ 
UserId
ØØ $
,
ØØ$ %
fullName
∞∞ 
=
∞∞ 
user
∞∞ 
.
∞∞  
FullName
∞∞  (
,
∞∞( )

EmployeeId
±± 
=
±± 
user
±± !
.
±±! "
	AceNumber
±±" +
,
±±+ ,
Email
≤≤ 
=
≤≤ 
user
≤≤ 
.
≤≤ 
EmailAddress
≤≤ )
,
≤≤) *
DateOfBirth
≥≥ 
=
≥≥ 
user
≥≥ "
.
≥≥" #
DateOfBirth
≥≥# .
,
≥≥. /
Designation
¥¥ 
=
¥¥ 
user
¥¥ "
.
¥¥" #
Designation
¥¥# .
?
¥¥. /
.
¥¥/ 0
DesignationName
¥¥0 ?
,
¥¥? @

Department
µµ 
=
µµ 
user
µµ !
.
µµ! "
Designation
µµ" -
!
µµ- .
.
µµ. /

Department
µµ/ 9
.
µµ9 :
DepartmentName
µµ: H
,
µµH I
Gender
∂∂ 
=
∂∂ 
user
∂∂ 
.
∂∂ 
Gender
∂∂ $
?
∂∂$ %
.
∂∂% &
Name
∂∂& *
,
∂∂* +

IsReviewer
∑∑ 
=
∑∑ 
user
∑∑ !
.
∑∑! "

IsReviewer
∑∑" ,
}
∏∏ 
;
∏∏ 
}
ππ 	
}
∫∫ 
}ªª ¯j
QC:\Users\pooja.sakthivel\Desktop\AspireOverflow\Services\Validation\Validation.cs
	namespace 	
AspireOverflow
 
. 
Services !
{ 
public 

static 
class 

Validation "
{ 
public 
static 
bool 
ValidateQuery (
(( )
Query) .
query/ 4
)4 5
{		 	
if

 
(

 
query

 
==

 
null

 
)

 
throw

 $
new

% (
ValidationException

) <
(

< =
$str

= W
)

W X
;

X Y
if 
( 
String 
. 
IsNullOrEmpty $
($ %
query% *
.* +
Title+ 0
)0 1
)1 2
throw3 8
new9 <
ValidationException= P
(P Q
$strQ p
)p q
;q r
if 
( 
String 
. 
IsNullOrEmpty $
($ %
query% *
.* +
Content+ 2
)2 3
)3 4
throw5 :
new; >
ValidationException? R
(R S
$strS t
)t u
;u v
if 
( 
query 
. 
Title 
. 
Length "
># $
$num% (
)( )
throw* /
new0 3
ValidationException4 G
(G H
$strH u
)u v
;v w
if 
( 
! 
query 
. 
IsActive 
)  
throw! &
new' *
ValidationException+ >
(> ?
$str? V
)V W
;W X
if 
( 
query 
. 
IsSolved 
) 
throw  %
new& )
ValidationException* =
(= >
$str> V
)V W
;W X
else 
return 
true 
; 
} 	
public 
static 
bool 
ValidateComment *
(* +
QueryComment+ 7
Comment8 ?
)? @
{ 	
if 
( 
Comment 
== 
null 
)  
throw! &
new' *
ValidationException+ >
(> ?
$str? [
)[ \
;\ ]
if 
( 
Comment 
. 
QueryId 
<=  "
$num# $
)$ %
throw& +
new, /
ValidationException0 C
(C D
$strD f
)f g
;g h
if 
( 
String 
. 
IsNullOrEmpty $
($ %
Comment% ,
., -
Comment- 4
)4 5
)5 6
throw7 <
new= @
ValidationExceptionA T
(T U
$strU v
)v w
;w x
else 
return 
true 
; 
} 	
public 
static 
bool 
ValidateArticle *
(* +
Article+ 2
article3 :
): ;
{ 	
if 
( 
article 
== 
null 
)  
throw! &
new' *
ValidationException+ >
(> ?
$str? [
)[ \
;\ ]
if 
( 
String 
. 
IsNullOrEmpty $
($ %
article% ,
., -
Title- 2
)2 3
)3 4
throw5 :
new; >
ValidationException? R
(R S
$strS r
)r s
;s t
if   
(   
String   
.   
IsNullOrEmpty   $
(  $ %
article  % ,
.  , -
Content  - 4
)  4 5
)  5 6
throw  7 <
new  = @
ValidationException  A T
(  T U
$str  U v
)  v w
;  w x
if!! 
(!! 
article!! 
.!! 
Title!! 
.!! 
Length!! $
>!!% &
$num!!' *
)!!* +
throw!!, 1
new!!2 5
ValidationException!!6 I
(!!I J
$str!!J w
)!!w x
;!!x y
if"" 
("" 
article"" 
."" 
ArticleStatusID"" '
<=""( *
$num""+ ,
&&""- /
article""0 7
.""7 8
ArticleStatusID""8 G
>""H I
$num""J K
)""K L
throw""M R
new""S V
ValidationException""W j
(""j k
$str	""k ê
)
""ê ë
;
""ë í
else## 
return## 
true## 
;## 
}$$ 	
public&& 
static&& 
bool&& "
ValidateArticleComment&& 1
(&&1 2
ArticleComment&&2 @
Comment&&A H
)&&H I
{'' 	
if(( 
((( 
Comment(( 
==(( 
null(( 
)((  
throw((! &
new((' *
ValidationException((+ >
(((> ?
$str((? [
)(([ \
;((\ ]
if)) 
()) 
Comment)) 
.)) 
	ArticleId)) !
<=))" $
$num))% &
)))& '
throw))( -
new)). 1
ValidationException))2 E
())E F
$str))F j
)))j k
;))k l
if** 
(** 
String** 
.** 
IsNullOrEmpty** $
(**$ %
Comment**% ,
.**, -
Comment**- 4
)**4 5
)**5 6
throw**7 <
new**= @
ValidationException**A T
(**T U
$str**U v
)**v w
;**w x
else++ 
return++ 
true++ 
;++ 
},, 	
public.. 
static.. 
bool.. 
ValidateUser.. '
(..' (
User..( ,
user..- 1
)..1 2
{// 	
if00 
(00 
user00 
==00 
null00 
)00 
throw00 #
new00$ '
ValidationException00( ;
(00; <
$str00< U
)00U V
;00V W
if11 
(11 
user11 
.11 
VerifyStatusID11 #
!=11$ &
$num11' (
)11( )
throw11* /
new110 3
ValidationException114 G
(11G H
$"11H J
$str11J q
{11q r
user11r v
.11v w
VerifyStatusID	11w Ö
}
11Ö Ü
"
11Ü á
)
11á à
;
11à â
if22 
(22 
user22 
.22 

IsReviewer22 
)22  
throw22! &
new22' *
ValidationException22+ >
(22> ?
$"22? A
$str22A Y
"22Y Z
)22Z [
;22[ \
if33 
(33 
user33 
.33 
GenderId33 
<=33  
$num33! "
&&33# %
user33& *
.33* +
GenderId33+ 3
>334 5
$num336 7
)337 8
throw339 >
new33? B
ValidationException33C V
(33V W
$"33W Y
$str33Y q
"33q r
)33r s
;33s t
if44 
(44 
user44 
.44 

UserRoleId44 
!=44  "
$num44# $
)44$ %
throw44& +
new44, /
ValidationException440 C
(44C D
$"44D F
$str44F m
{44m n
user44n r
.44r s

UserRoleId44s }
}44} ~
"44~ 
)	44 Ä
;
44Ä Å
if55 
(55 
!55 #
ValidateUserCredentials55 (
(55( )
user55) -
.55- .
EmailAddress55. :
,55: ;
user55< @
.55@ A
Password55A I
)55I J
)55J K
return55L R
false55S X
;55X Y
else66 
return66 
true66 
;66 
}77 	
public88 
static88 
bool88 
ValidateSpam88 '
(88' (
Spam88( ,
spam88- 1
)881 2
{99 	
if:: 
(:: 
spam:: 
==:: 
null:: 
):: 
throw:: #
new::$ '
ValidationException::( ;
(::; <
$str::< U
)::U V
;::V W
if;; 
(;; 
spam;; 
.;; 
QueryId;; 
<=;; 
$num;;  !
);;! "
throw;;# (
new;;) ,
ValidationException;;- @
(;;@ A
$str;;A b
);;b c
;;;c d
if<< 
(<< 
spam<< 
.<< 
UserId<< 
<=<< 
$num<<  
)<<  !
throw<<" '
new<<( +
ValidationException<<, ?
(<<? @
$str<<@ _
)<<_ `
;<<` a
if== 
(== 
spam== 
.== 
VerifyStatusID== #
<===$ &
$num==' (
||==) +
spam==, 0
.==0 1
VerifyStatusID==1 ?
>==@ A
$num==B C
)==C D
throw==E J
new==K N
ValidationException==O b
(==b c
$str	==c ç
)
==ç é
;
==é è
if>> 
(>> 
String>> 
.>> 
IsNullOrEmpty>> $
(>>$ %
spam>>% )
.>>) *
Reason>>* 0
)>>0 1
)>>1 2
throw>>3 8
new>>9 <
ValidationException>>= P
(>>P Q
$str>>Q v
)>>v w
;>>w x
else?? 
return?? 
true?? 
;?? 
}@@ 	
publicAA 
staticAA 
boolAA #
ValidateUserCredentialsAA 2
(AA2 3
StringAA3 9
EmailAA: ?
,AA? @
StringAAA G
PasswordAAH P
)AAP Q
{BB 	
varCC 
mailCC 
=CC 
newCC 
RegexCC  
(CC  !
$strCC! D
)CCD E
;CCE F
varDD 
passwordDD 
=DD 
newDD 
RegexDD $
(DD$ %
$strDD% e
)DDe f
;DDf g
ifEE 
(EE 
!EE 
mailEE 
.EE 
IsMatchEE 
(EE 
EmailEE #
)EE# $
)EE$ %
throwEE& +
newEE, /
ValidationExceptionEE0 C
(EEC D
$"EED F
$strEEF m
{EEm n
EmailEEn s
}EEs t
"EEt u
)EEu v
;EEv w
ifFF 
(FF 
!FF 
passwordFF 
.FF 
IsMatchFF !
(FF! "
PasswordFF" *
)FF* +
)FF+ ,
throwFF- 2
newFF3 6
ValidationExceptionFF7 J
(FFJ K
$"FFK M
$str	FFM ó
{
FFó ò
Password
FFò †
}
FF† °
"
FF° ¢
)
FF¢ £
;
FF£ §
elseGG 
returnGG 
trueGG 
;GG 
}HH 	
publicJJ 
staticJJ 
boolJJ 
ValidateEmailJJ (
(JJ( )
StringJJ) /
EmailJJ0 5
)JJ5 6
{KK 	
varLL 
mailLL 
=LL 
newLL 
RegexLL  
(LL  !
$strLL! D
)LLD E
;LLE F
ifMM 
(MM 
!MM 
mailMM 
.MM 
IsMatchMM 
(MM 
EmailMM #
)MM# $
)MM$ %
throwMM& +
newMM, /
ValidationExceptionMM0 C
(MMC D
$"MMD F
$strMMF m
{MMm n
EmailMMn s
}MMs t
"MMt u
)MMu v
;MMv w
elseNN 
returnNN 
trueNN 
;NN 
}OO 	
publicQQ 
staticQQ 
boolQQ 
ValidateArticleLikeQQ .
(QQ. /
ArticleLikeQQ/ :
LikeQQ; ?
)QQ? @
{RR 	
ifSS 
(SS 
LikeSS 
==SS 
nullSS 
)SS 
throwSS #
newSS$ '
ValidationExceptionSS( ;
(SS; <
$strSS< _
)SS_ `
;SS` a
ifTT 
(TT 
LikeTT 
.TT 
	ArticleIdTT 
<=TT !
$numTT" #
)TT# $
throwTT% *
newTT+ .
ValidationExceptionTT/ B
(TTB C
$"TTC E
$strTTE w
{TTw x
LikeTTx |
.TT| }
	ArticleId	TT} Ü
}
TTÜ á
"
TTá à
)
TTà â
;
TTâ ä
ifUU 
(UU 
LikeUU 
.UU 
UserIdUU 
<=UU 
$numUU  
)UU  !
throwUU" '
newUU( +
ValidationExceptionUU, ?
(UU? @
$"UU@ B
$strUUB n
{UUn o
LikeUUo s
.UUs t
UserIdUUt z
}UUz {
"UU{ |
)UU| }
;UU} ~
elseVV 
returnVV 
trueVV 
;VV 
}XX 	
}YY 
}ZZ 